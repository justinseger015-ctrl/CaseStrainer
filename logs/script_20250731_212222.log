**********************
Windows PowerShell transcript start
Start time: 20250731212222
Username: NETID\jafrank
RunAs User: NETID\jafrank
Configuration Name: 
Machine: HAUMEA (Microsoft Windows NT 10.0.20348.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noexit -command try { . "c:\Users\jafrank\AppData\Local\Programs\Windsurf\resources\app\out\vs\workbench\contrib\terminal\common\scripts\shellIntegration.ps1" } catch {}
Process ID: 8308
PSVersion: 5.1.20348.3932
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.20348.3932
BuildVersion: 10.0.20348.3932
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_212222.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (80.97 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (80.97 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-07-31 21:24:44] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2332 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
ERROR: file or directory not found: test_production_server.py

============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 DONE 0.4s

#4 [internal] load .dockerignore
#4 transferring context: 908B 0.0s done
#4 DONE 0.0s

#5 [internal] load build context
#5 DONE 0.0s

#6 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#6 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.0s done
#6 DONE 0.1s

#5 [internal] load build context
#5 transferring context: 37.52kB 0.1s done
#5 DONE 0.1s

#7 [ 8/15] COPY --chown=app:app src/ /app/src/
#7 CACHED

#8 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#8 CACHED

#9 [12/15] COPY --chown=app:app static/ /app/static/
#9 CACHED

#10 [11/15] COPY --chown=app:app templates/ /app/templates/
#10 CACHED

#11 [10/15] COPY --chown=app:app config/ /app/config/
#11 CACHED

#12 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#12 CACHED

#13 [ 9/15] COPY --chown=app:app app/ /app/app/
#13 CACHED

#14 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#14 CACHED

#15 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#15 CACHED

#16 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#16 CACHED

#17 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#17 CACHED

#18 [ 3/15] COPY requirements.txt requirements.txt
#18 CACHED

#19 [ 2/15] WORKDIR /app
#19 CACHED

#20 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#20 CACHED

#21 exporting to image
#21 exporting layers 0.0s done
#21 exporting manifest sha256:f5d0affa5b33e42ba6aee72e1b490a215feaa68139a6620b7cbdc7c459ca577a 0.0s done
#21 exporting config sha256:bea5c7be3deba1ce4348693b7d2fc26cedaea39e0954d676f5b4cd487d525a57 0.0s done
#21 exporting attestation manifest sha256:ebf1c242a713e1da6b324655fb49e676a6664c67849150788f44879df276105a
#21 exporting attestation manifest sha256:ebf1c242a713e1da6b324655fb49e676a6664c67849150788f44879df276105a 0.1s done
#21 exporting manifest list sha256:a658574712fb013af3ffa37a964bc095bb6111d7a46d54bb986b222221ff2405 0.0s done
#21 naming to docker.io/library/casestrainer-backend:latest done
#21 unpacking to docker.io/library/casestrainer-backend:latest 0.1s done
#21 DONE 0.3s

#22 resolving provenance for metadata file
#22 DONE 0.0s
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2332 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
ERROR: file or directory not found: test_production_server.py

============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>.\cslaunch.ps1 -Mode Production -ForceRebuild
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_212535.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting in Production mode...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Force flag specified - Vue build required
OK Docker is running
OK Sufficient disk space (80.97 GB free)
Processing Vue frontend build...
Vue build needed: True, ForceRebuild: True
Building Vue frontend (ForceRebuild: True)...
Force rebuild mode: Clearing Vue caches...
Removing existing dist directory...
Removing node_modules for clean install...
Removing package-lock.json for clean dependency resolution...
Clearing npm cache...
npm cache cleared
Vue directory: D:\dev\casestrainer\casestrainer-vue-new
Checking Node.js and npm...
OK Node.js v22.15.0, npm 8.19.2
Using npm at: npm
Installing npm dependencies...
Force rebuild: Running clean npm install...
Running: npm install
OK npm dependencies installed
Building Vue frontend...
Force rebuild: Building from clean state...
Running: npm run build
OK Vue frontend built successfully (0.61 MB)
Copying Vue build assets to static/assets...
Assets copied to D:\dev\casestrainer\static\assets
Stopping existing Docker containers...
Force rebuild: Removing all CaseStrainer containers...
Removing all CaseStrainer containers...
Found 7 CaseStrainer containers to remove
  - casestrainer-nginx-prod
  - casestrainer-rqworker-prod
  - casestrainer-rqworker2-prod
  - casestrainer-rqworker3-prod
  - casestrainer-backend-prod
  - casestrainer-redis-prod
  - casestrainer-frontend-prod
Stopping casestrainer-nginx-prod...
Stopping casestrainer-rqworker-prod...
Stopping casestrainer-rqworker2-prod...
Stopping casestrainer-rqworker3-prod...
Stopping casestrainer-backend-prod...
Stopping casestrainer-redis-prod...
Stopping casestrainer-frontend-prod...
Removing casestrainer-nginx-prod...
Removing casestrainer-rqworker-prod...
Removing casestrainer-rqworker2-prod...
Removing casestrainer-rqworker3-prod...
Removing casestrainer-backend-prod...
Removing casestrainer-redis-prod...
Removing casestrainer-frontend-prod...
Successfully removed 7 CaseStrainer containers
Force rebuild: Removing volumes and orphaned containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30 --volumes --remove-orphans
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Force rebuild: Building all images from scratch with --no-cache...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml build --no-cache
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
]633;D;0]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_214211.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (68.93 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (68.9 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-07-31 21:44:46] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 ...

#4 [auth] library/python:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 DONE 0.8s

#5 [internal] load .dockerignore
#5 transferring context: 908B 0.0s done
#5 DONE 0.0s

#6 [internal] load build context
#6 DONE 0.0s

#7 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#7 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.1s done
#7 DONE 0.1s

#6 [internal] load build context
#6 transferring context: 73.70kB 0.1s done
#6 DONE 0.1s

#8 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#8 CACHED

#9 [ 2/15] WORKDIR /app
#9 CACHED

#10 [ 3/15] COPY requirements.txt requirements.txt
#10 CACHED

#11 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#11 CACHED

#12 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#12 CACHED

#13 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#13 CACHED

#14 [ 8/15] COPY --chown=app:app src/ /app/src/
#14 DONE 0.5s

#15 [ 9/15] COPY --chown=app:app app/ /app/app/
#15 DONE 0.1s

#16 [10/15] COPY --chown=app:app config/ /app/config/
#16 DONE 0.1s

#17 [11/15] COPY --chown=app:app templates/ /app/templates/
#17 DONE 0.1s

#18 [12/15] COPY --chown=app:app static/ /app/static/
#18 DONE 0.5s

#19 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#19 DONE 0.6s

#20 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#20 DONE 0.4s

#21 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#21 DONE 0.5s

#22 exporting to image
#22 exporting layers
#22 exporting layers 2.0s done
#22 exporting manifest sha256:177b2562376729c9c16c806a6a8fd5750a072336e3098010c4b6b74a9abc130b 0.0s done
#22 exporting config sha256:ab86559184c3898d3eb1a139ef9f15b63ab911c38a34bec09f2b12c580f3d4c2 0.0s done
#22 exporting attestation manifest sha256:6db2504ada88939fb7ad8675364f53ca1f3274b7d08e1c48eda7e9b8edca34ce 0.1s done
#22 exporting manifest list sha256:6f15c55fc29b02390dcb9763594f2cee963c230e9df72f934e9d2632223274a4
#22 exporting manifest list sha256:6f15c55fc29b02390dcb9763594f2cee963c230e9df72f934e9d2632223274a4 0.0s done
#22 naming to docker.io/library/casestrainer-backend:latest done
#22 unpacking to docker.io/library/casestrainer-backend:latest
#22 unpacking to docker.io/library/casestrainer-backend:latest 0.7s done
#22 DONE 3.0s

#23 resolving provenance for metadata file
#23 DONE 0.0s
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_215354.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (68.89 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (68.88 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-07-31 21:56:21] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [auth] library/python:pull token for registry-1.docker.io
#3 DONE 0.0s

#4 [internal] load metadata for docker.io/library/python:3.10-slim
#4 DONE 0.7s

#5 [internal] load .dockerignore
#5 transferring context: 908B done
#5 DONE 0.1s

#6 [internal] load build context
#6 DONE 0.0s

#7 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#7 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.0s done
#7 DONE 0.1s

#6 [internal] load build context
#6 transferring context: 37.52kB 0.1s done
#6 DONE 0.1s

#8 [ 2/15] WORKDIR /app
#8 CACHED

#9 [12/15] COPY --chown=app:app static/ /app/static/
#9 CACHED

#10 [11/15] COPY --chown=app:app templates/ /app/templates/
#10 CACHED

#11 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#11 CACHED

#12 [ 3/15] COPY requirements.txt requirements.txt
#12 CACHED

#13 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#14 CACHED

#15 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#15 CACHED

#16 [ 9/15] COPY --chown=app:app app/ /app/app/
#16 CACHED

#17 [10/15] COPY --chown=app:app config/ /app/config/
#17 CACHED

#18 [ 8/15] COPY --chown=app:app src/ /app/src/
#18 CACHED

#19 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#19 CACHED

#20 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#20 CACHED

#21 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#21 CACHED

#22 exporting to image
#22 exporting layers 0.0s done
#22 exporting manifest sha256:177b2562376729c9c16c806a6a8fd5750a072336e3098010c4b6b74a9abc130b done
#22 exporting config sha256:ab86559184c3898d3eb1a139ef9f15b63ab911c38a34bec09f2b12c580f3d4c2 done
#22 exporting attestation manifest sha256:2e29486abde66039ed476981fb646337fd33fef0fb635155bee3b4b06d7fef15 0.1s done
#22 exporting manifest list sha256:f5e0868243979e4c9b342f096feba696b146b71bf43348222fe5010688a68a84
#22 exporting manifest list sha256:f5e0868243979e4c9b342f096feba696b146b71bf43348222fe5010688a68a84 0.0s done
#22 naming to docker.io/library/casestrainer-backend:latest done
#22 unpacking to docker.io/library/casestrainer-backend:latest 0.0s done
#22 DONE 0.3s

#23 resolving provenance for metadata file
#23 DONE 0.0s
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_215746.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
âš ï¸ Detected import/dependency changes - recommending full rebuild for safety
   - Python import changes detected
ðŸ„ Performing full rebuild due to detected changes...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Force flag specified - Vue build required
OK Docker is running
OK Sufficient disk space (68.89 GB free)
Processing Vue frontend build...
Vue build needed: True, ForceRebuild: True
Building Vue frontend (ForceRebuild: True)...
Force rebuild mode: Clearing Vue caches...
Removing existing dist directory...
Removing node_modules for clean install...
Removing package-lock.json for clean dependency resolution...
Clearing npm cache...
npm cache cleared
Vue directory: D:\dev\casestrainer\casestrainer-vue-new
Checking Node.js and npm...
OK Node.js v22.15.0, npm 8.19.2
Using npm at: npm
Installing npm dependencies...
Force rebuild: Running clean npm install...
Running: npm install
OK npm dependencies installed
Building Vue frontend...
Force rebuild: Building from clean state...
Running: npm run build
OK Vue frontend built successfully (0.61 MB)
Copying Vue build assets to static/assets...
Assets copied to D:\dev\casestrainer\static\assets
Stopping existing Docker containers...
Force rebuild: Removing all CaseStrainer containers...
Removing all CaseStrainer containers...
Found 7 CaseStrainer containers to remove
  - casestrainer-nginx-prod
  - casestrainer-rqworker-prod
  - casestrainer-backend-prod
  - casestrainer-rqworker3-prod
  - casestrainer-rqworker2-prod
  - casestrainer-redis-prod
  - casestrainer-frontend-prod
Stopping casestrainer-nginx-prod...
Stopping casestrainer-rqworker-prod...
Stopping casestrainer-backend-prod...
Stopping casestrainer-rqworker3-prod...
Stopping casestrainer-rqworker2-prod...
Stopping casestrainer-redis-prod...
Stopping casestrainer-frontend-prod...
Removing casestrainer-nginx-prod...
Removing casestrainer-rqworker-prod...
Removing casestrainer-backend-prod...
Removing casestrainer-rqworker3-prod...
Removing casestrainer-rqworker2-prod...
Removing casestrainer-redis-prod...
Removing casestrainer-frontend-prod...
Successfully removed 7 CaseStrainer containers
Force rebuild: Removing volumes and orphaned containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30 --volumes --remove-orphans
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Force rebuild: Building all images from scratch with --no-cache...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml build --no-cache
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
PS>TerminatingError(Invoke-WebRequest): "The operation has timed out."
Backend health check error: The operation has timed out.
Services not ready (attempt 1): Backend: HTTP 0, Redis: HEALTHY, Worker: HEALTHY
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (66.88 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-07-31 22:08:05] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py
collecting ... collected 0 items

============================ no tests ran in 0.03s ============================


Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py
collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_222825.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
âš ï¸ Detected import/dependency changes - recommending full rebuild for safety
   - Python import changes detected
ðŸ„ Performing full rebuild due to detected changes...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Force flag specified - Vue build required
OK Docker is running
OK Sufficient disk space (66.85 GB free)
Processing Vue frontend build...
Vue build needed: True, ForceRebuild: True
Building Vue frontend (ForceRebuild: True)...
Force rebuild mode: Clearing Vue caches...
Removing existing dist directory...
Removing node_modules for clean install...
Removing package-lock.json for clean dependency resolution...
Clearing npm cache...
npm cache cleared
Vue directory: D:\dev\casestrainer\casestrainer-vue-new
Checking Node.js and npm...
OK Node.js v22.15.0, npm 8.19.2
Using npm at: npm
Installing npm dependencies...
Force rebuild: Running clean npm install...
Running: npm install
OK npm dependencies installed
Building Vue frontend...
Force rebuild: Building from clean state...
Running: npm run build
OK Vue frontend built successfully (0.61 MB)
Copying Vue build assets to static/assets...
Assets copied to D:\dev\casestrainer\static\assets
Stopping existing Docker containers...
Force rebuild: Removing all CaseStrainer containers...
Removing all CaseStrainer containers...
Found 7 CaseStrainer containers to remove
  - casestrainer-nginx-prod
  - casestrainer-rqworker3-prod
  - casestrainer-rqworker-prod
  - casestrainer-rqworker2-prod
  - casestrainer-backend-prod
  - casestrainer-frontend-prod
  - casestrainer-redis-prod
Stopping casestrainer-nginx-prod...
Stopping casestrainer-rqworker3-prod...
Stopping casestrainer-rqworker-prod...
Stopping casestrainer-rqworker2-prod...
Stopping casestrainer-backend-prod...
Stopping casestrainer-frontend-prod...
Stopping casestrainer-redis-prod...
Removing casestrainer-nginx-prod...
Removing casestrainer-rqworker3-prod...
Removing casestrainer-rqworker-prod...
Removing casestrainer-rqworker2-prod...
Removing casestrainer-backend-prod...
Removing casestrainer-frontend-prod...
Removing casestrainer-redis-prod...
Successfully removed 7 CaseStrainer containers
Force rebuild: Removing volumes and orphaned containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30 --volumes --remove-orphans
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Force rebuild: Building all images from scratch with --no-cache...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml build --no-cache
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (63.91 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-07-31 22:38:42] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_224613.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
âš ï¸ Detected import/dependency changes - recommending full rebuild for safety
   - Python import changes detected
ðŸ„ Performing full rebuild due to detected changes...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Force flag specified - Vue build required
OK Docker is running
OK Sufficient disk space (63.87 GB free)
Processing Vue frontend build...
Vue build needed: True, ForceRebuild: True
Building Vue frontend (ForceRebuild: True)...
Force rebuild mode: Clearing Vue caches...
Removing existing dist directory...
Removing node_modules for clean install...
Removing package-lock.json for clean dependency resolution...
Clearing npm cache...
npm cache cleared
Vue directory: D:\dev\casestrainer\casestrainer-vue-new
Checking Node.js and npm...
OK Node.js v22.15.0, npm 8.19.2
Using npm at: npm
Installing npm dependencies...
Force rebuild: Running clean npm install...
Running: npm install
OK npm dependencies installed
Building Vue frontend...
Force rebuild: Building from clean state...
Running: npm run build
OK Vue frontend built successfully (0.61 MB)
Copying Vue build assets to static/assets...
Assets copied to D:\dev\casestrainer\static\assets
Stopping existing Docker containers...
Force rebuild: Removing all CaseStrainer containers...
Removing all CaseStrainer containers...
Found 7 CaseStrainer containers to remove
  - casestrainer-nginx-prod
  - casestrainer-backend-prod
  - casestrainer-rqworker2-prod
  - casestrainer-rqworker-prod
  - casestrainer-rqworker3-prod
  - casestrainer-frontend-prod
  - casestrainer-redis-prod
Stopping casestrainer-nginx-prod...
Stopping casestrainer-backend-prod...
Stopping casestrainer-rqworker2-prod...
Stopping casestrainer-rqworker-prod...
Stopping casestrainer-rqworker3-prod...
Stopping casestrainer-frontend-prod...
Stopping casestrainer-redis-prod...
Removing casestrainer-nginx-prod...
Removing casestrainer-backend-prod...
Removing casestrainer-rqworker2-prod...
Removing casestrainer-rqworker-prod...
Removing casestrainer-rqworker3-prod...
Removing casestrainer-frontend-prod...
Removing casestrainer-redis-prod...
Successfully removed 7 CaseStrainer containers
Force rebuild: Removing volumes and orphaned containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30 --volumes --remove-orphans
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Force rebuild: Building all images from scratch with --no-cache...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml build --no-cache
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (60.91 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-07-31 22:56:13] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_230011.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
âš ï¸ Detected import/dependency changes - recommending full rebuild for safety
   - Python import changes detected
ðŸ„ Performing full rebuild due to detected changes...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Force flag specified - Vue build required
OK Docker is running
OK Sufficient disk space (60.87 GB free)
Processing Vue frontend build...
Vue build needed: True, ForceRebuild: True
Building Vue frontend (ForceRebuild: True)...
Force rebuild mode: Clearing Vue caches...
Removing existing dist directory...
Removing node_modules for clean install...
Removing package-lock.json for clean dependency resolution...
Clearing npm cache...
npm cache cleared
Vue directory: D:\dev\casestrainer\casestrainer-vue-new
Checking Node.js and npm...
OK Node.js v22.15.0, npm 8.19.2
Using npm at: npm
Installing npm dependencies...
Force rebuild: Running clean npm install...
Running: npm install
OK npm dependencies installed
Building Vue frontend...
Force rebuild: Building from clean state...
Running: npm run build
OK Vue frontend built successfully (0.61 MB)
Copying Vue build assets to static/assets...
Assets copied to D:\dev\casestrainer\static\assets
Stopping existing Docker containers...
Force rebuild: Removing all CaseStrainer containers...
Removing all CaseStrainer containers...
Found 7 CaseStrainer containers to remove
  - casestrainer-nginx-prod
  - casestrainer-rqworker3-prod
  - casestrainer-rqworker2-prod
  - casestrainer-rqworker-prod
  - casestrainer-backend-prod
  - casestrainer-redis-prod
  - casestrainer-frontend-prod
Stopping casestrainer-nginx-prod...
Stopping casestrainer-rqworker3-prod...
Stopping casestrainer-rqworker2-prod...
Stopping casestrainer-rqworker-prod...
Stopping casestrainer-backend-prod...
Stopping casestrainer-redis-prod...
Stopping casestrainer-frontend-prod...
Removing casestrainer-nginx-prod...
Removing casestrainer-rqworker3-prod...
Removing casestrainer-rqworker2-prod...
Removing casestrainer-rqworker-prod...
Removing casestrainer-backend-prod...
Removing casestrainer-redis-prod...
Removing casestrainer-frontend-prod...
Successfully removed 7 CaseStrainer containers
Force rebuild: Removing volumes and orphaned containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30 --volumes --remove-orphans
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Force rebuild: Building all images from scratch with --no-cache...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml build --no-cache
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.85 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-07-31 23:09:47] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>docker exec -it casestrainer-nginx-prod cat /var/log/nginx/error.log
�� Results Summary
=

�� Enhanced adaptive learning pipeline completed successfully!
Check the results in: enhanced_results
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  Health check attempt 1 failed: Unable to connect to the remote server
  Health check attempt 2 failed: Unable to connect to the remote server
  Health check attempt 3 failed: Unable to connect to the remote server
  âPS D:\dev\casestrainer> docker exec -it casestrainer-nginx-prod cat /var/log/nginx/er
ror.log
^C
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }; Invoke-WebRequest -Uri "https://localhost:5000/casestrainer/api/health" -UseBasicParsing
>> TerminatingError(Invoke-WebRequest): "The underlying connection was closed: An unexpected error occurred on a send."
Invoke-WebRequest : The underlying connection was closed: An unexpected error occurred on a send.
At line:1 char:84
+ ...  { $true }; Invoke-WebRequest -Uri "https://localhost:5000/casestrain ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-WebRequest], 
WebException
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand
Invoke-WebRequest : The underlying connection was closed: An unexpected error occurred
on a send.
At line:1 char:84
+ ...  { $true }; Invoke-WebRequest -Uri "https://localhost:5000/casestrain ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequ
   est) [Invoke-WebRequest], WebException
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Comma
   nds.InvokeWebRequestCommand

]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
]633;D]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250801_010311.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.73 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.73 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Health check attempt 3 failed: Unable to connect to the remote server
  âŒ API health check failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-08-01 01:05:39] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 ...

#4 [auth] library/python:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 DONE 0.8s

#5 [internal] load .dockerignore
#5 transferring context: 908B done
#5 DONE 0.0s

#6 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#6 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.0s done
#6 DONE 0.0s

#7 [internal] load build context
#7 transferring context: 307.21kB 0.1s done
#7 DONE 0.1s

#8 [ 2/15] WORKDIR /app
#8 CACHED

#9 [ 3/15] COPY requirements.txt requirements.txt
#9 CACHED

#10 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#10 CACHED

#11 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#11 CACHED

#12 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#12 CACHED

#13 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#13 CACHED

#14 [ 8/15] COPY --chown=app:app src/ /app/src/
#14 DONE 0.4s

#15 [ 9/15] COPY --chown=app:app app/ /app/app/
#15 DONE 0.1s

#16 [10/15] COPY --chown=app:app config/ /app/config/
#16 DONE 0.1s

#17 [11/15] COPY --chown=app:app templates/ /app/templates/
#17 DONE 0.1s

#18 [12/15] COPY --chown=app:app static/ /app/static/
#18 DONE 0.6s

#19 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#19 DONE 0.7s

#20 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#20 DONE 0.4s

#21 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#21 DONE 0.6s

#22 exporting to image
#22 exporting layers
#22 exporting layers 1.8s done
#22 exporting manifest sha256:e9fc006633c628c47e419a5138e692982a6966673e613f0aa9ae0972c3498bb5 0.0s done
#22 exporting config sha256:36c15258df0aea8df21cbe138809f6aac1374c01fdf2180c549009b4cefced99 0.0s done
#22 exporting attestation manifest sha256:3b6fa97b7c7bcc4a45a305fb49dc3d8f87ca8c857d1c5d1790e722cee582575d 0.0s done
#22 exporting manifest list sha256:9ea689f2c7a5094c5f2de02f7e1e1da021313af1156d12ac345c2e6619cfab3d
#22 exporting manifest list sha256:9ea689f2c7a5094c5f2de02f7e1e1da021313af1156d12ac345c2e6619cfab3d 0.0s done
#22 naming to docker.io/library/casestrainer-backend:latest done
#22 unpacking to docker.io/library/casestrainer-backend:latest
#22 unpacking to docker.io/library/casestrainer-backend:latest 0.6s done
#22 DONE 2.6s

#23 resolving provenance for metadata file
#23 DONE 0.0s
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250801_012244.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.72 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Processing test attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Processing test attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Processing test attempt 3 failed: Unable to connect to the remote server
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.72 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Processing test attempt 1 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Processing test attempt 2 failed: Unable to connect to the remote server
PS>TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
  Processing test attempt 3 failed: Unable to connect to the remote server
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-08-01 01:25:11] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 ...

#4 [auth] library/python:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 DONE 0.7s

#5 [internal] load .dockerignore
#5 transferring context: 908B done
#5 DONE 0.0s

#6 [internal] load build context
#6 DONE 0.0s

#7 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#7 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.1s done
#7 DONE 0.1s

#6 [internal] load build context
#6 transferring context: 74.34kB 0.1s done
#6 DONE 0.1s

#8 [ 3/15] COPY requirements.txt requirements.txt
#8 CACHED

#9 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#10 CACHED

#11 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#11 CACHED

#12 [ 2/15] WORKDIR /app
#12 CACHED

#13 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#13 CACHED

#14 [ 8/15] COPY --chown=app:app src/ /app/src/
#14 DONE 0.2s

#15 [ 9/15] COPY --chown=app:app app/ /app/app/
#15 DONE 0.1s

#16 [10/15] COPY --chown=app:app config/ /app/config/
#16 DONE 0.1s

#17 [11/15] COPY --chown=app:app templates/ /app/templates/
#17 DONE 0.1s

#18 [12/15] COPY --chown=app:app static/ /app/static/
#18 DONE 0.3s

#19 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#19 DONE 0.4s

#20 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#20 DONE 0.4s

#21 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#21 DONE 0.4s

#22 exporting to image
#22 exporting layers
#22 exporting layers 1.7s done
#22 exporting manifest sha256:c6fc7c4f70965aad313c9227e0b78534e8f1cd4538ef2886db10db155c1739e6 0.0s done
#22 exporting config sha256:e8bcc3e9ba13d82ae5433f50dc06ba1292a1d52f30d5c08b089be7b0b7a63755 0.0s done
#22 exporting attestation manifest sha256:621ec0c37b56de2d4e56b3e517ad408881cf6508d18eeeee111afa4f1d6b4ef7 0.0s done
#22 exporting manifest list sha256:55af54a80a64c02608ad463057d440b68164e1174999a7bbd74f6297d2a91bc3
#22 exporting manifest list sha256:55af54a80a64c02608ad463057d440b68164e1174999a7bbd74f6297d2a91bc3 0.0s done
#22 naming to docker.io/library/casestrainer-backend:latest done
#22 unpacking to docker.io/library/casestrainer-backend:latest
#22 unpacking to docker.io/library/casestrainer-backend:latest 0.5s done
#22 DONE 2.5s

#23 resolving provenance for metadata file
#23 DONE 0.0s
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250801_013541.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Source files newer than dist - build required
OK Docker is running
OK Sufficient disk space (57.71 GB free)
Processing Vue frontend build...
Vue build needed: True, ForceRebuild: False
Building Vue frontend (ForceRebuild: False)...
Vue directory: D:\dev\casestrainer\casestrainer-vue-new
Checking Node.js and npm...
OK Node.js v22.15.0, npm 8.19.2
Using npm at: npm
npm dependencies are up to date
OK node_modules up to date (skipping npm install)
Source files newer than dist - build required
Building Vue frontend...
Running: npm run build --verbose
OK Vue frontend built successfully (0.61 MB)
Copying Vue build assets to static/assets...
Assets copied to D:\dev\casestrainer\static\assets
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.71 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-08-01 01:37:37] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 ...

#4 [auth] library/python:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 DONE 0.7s

#5 [internal] load .dockerignore
#5 transferring context: 908B done
#5 DONE 0.0s

#6 [internal] load build context
#6 DONE 0.0s

#7 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#7 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.1s done
#7 DONE 0.1s

#6 [internal] load build context
#6 transferring context: 78.27kB 0.1s done
#6 DONE 0.1s

#8 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#8 CACHED

#9 [ 3/15] COPY requirements.txt requirements.txt
#9 CACHED

#10 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#10 CACHED

#11 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#11 CACHED

#12 [ 2/15] WORKDIR /app
#12 CACHED

#13 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#13 CACHED

#14 [ 8/15] COPY --chown=app:app src/ /app/src/
#14 DONE 0.2s

#15 [ 9/15] COPY --chown=app:app app/ /app/app/
#15 DONE 0.1s

#16 [10/15] COPY --chown=app:app config/ /app/config/
#16 DONE 0.1s

#17 [11/15] COPY --chown=app:app templates/ /app/templates/
#17 DONE 0.1s

#18 [12/15] COPY --chown=app:app static/ /app/static/
#18 DONE 0.3s

#19 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#19 DONE 0.5s

#20 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#20 DONE 0.4s

#21 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#21 DONE 0.5s

#22 exporting to image
#22 exporting layers
#22 exporting layers 2.0s done
#22 exporting manifest sha256:094852c484c369d6dad87702f68cbe4c5936903356a865776ff6f10e3711c822 0.0s done
#22 exporting config sha256:1f8465b630be70477cff0dbca0538cffff349fa344b84bc8f09ac87bcd7314de 0.0s done
#22 exporting attestation manifest sha256:9ebd6ee3cf0bc9ad091bc88325de04241a784e63e8710dbf416ee76b63c12f72
#22 exporting attestation manifest sha256:9ebd6ee3cf0bc9ad091bc88325de04241a784e63e8710dbf416ee76b63c12f72 0.0s done
#22 exporting manifest list sha256:09f47c65306f98ef0842feeb77f07e3b83855f15f6b6833b9d82d25380a32647 0.0s done
#22 naming to docker.io/library/casestrainer-backend:latest done
#22 unpacking to docker.io/library/casestrainer-backend:latest
#22 unpacking to docker.io/library/casestrainer-backend:latest 0.7s done
#22 DONE 3.0s

#23 resolving provenance for metadata file
#23 DONE 0.0s
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250801_014840.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.79 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.79 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-08-01 01:50:29] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
+
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib
   \s...cope" is unset.:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will
default to the fixture caching scope. Future versions of
pytest-asyncio will default the loop scope for
asynchronous fixtures to function scope. Set the default
fixture loop scope explicitly in order to avoid unexpected
behavior in the future. Valid fixture loop scopes are:
"function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_L
OOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found:
test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [auth] library/python:pull token for registry-1.docker.io
#3 DONE 0.0s

#4 [internal] load metadata for docker.io/library/python:3.10-slim
#4 DONE 0.7s

#5 [internal] load .dockerignore
#5 transferring context: 908B 0.0s done
#5 DONE 0.1s

#6 [internal] load build context
#6 DONE 0.0s

#7 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#7 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.0s done
#7 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 710.45kB 0.2s done
#6 DONE 0.2s

#8 [ 2/15] WORKDIR /app
#8 CACHED

#9 [ 3/15] COPY requirements.txt requirements.txt
#9 CACHED

#10 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#10 CACHED

#11 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#11 CACHED

#12 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#12 CACHED

#13 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#13 CACHED

#14 [ 8/15] COPY --chown=app:app src/ /app/src/
#14 DONE 0.2s

#15 [ 9/15] COPY --chown=app:app app/ /app/app/
#15 DONE 0.1s

#16 [10/15] COPY --chown=app:app config/ /app/config/
#16 DONE 0.1s

#17 [11/15] COPY --chown=app:app templates/ /app/templates/
#17 DONE 0.1s

#18 [12/15] COPY --chown=app:app static/ /app/static/
#18 DONE 0.3s

#19 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#19 DONE 0.5s

#20 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#20 DONE 0.6s

#21 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#21 DONE 0.5s

#22 exporting to image
#22 exporting layers
#22 exporting layers 2.0s done
#22 exporting manifest sha256:ceaaa68b1512c18e2eb0b4c5bfaf6a4d098bd0978a4aa620c693bc28aec98df8 0.0s done
#22 exporting config sha256:20b5dda3c6d42e669b1df03185e78a76d2a6ab0867a1f6eaec3fa55706f30ef2 0.0s done
#22 exporting attestation manifest sha256:2d2dc17f3aeb80af606b96b66facec457ea0f8428104695796941dd789fcdc35 0.0s done
#22 exporting manifest list sha256:a7328409624aa16f59e73435a4cb61d671cd29465338616eb406290f8aefef0b
#22 exporting manifest list sha256:a7328409624aa16f59e73435a4cb61d671cd29465338616eb406290f8aefef0b 0.0s done
#22 naming to docker.io/library/casestrainer-backend:latest done
#22 unpacking to docker.io/library/casestrainer-backend:latest
#22 unpacking to docker.io/library/casestrainer-backend:latest 0.6s done
#22 DONE 2.8s

#23 resolving provenance for metadata file
#23 DONE 0.0s
pytest.exe :
D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v
--maxfail=1 --disab ...
+
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib
   \s...cope" is unset.:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will
default to the fixture caching scope. Future versions of
pytest-asyncio will default the loop scope for
asynchronous fixtures to function scope. Set the default
fixture loop scope explicitly in order to avoid unexpected
behavior in the future. Valid fixture loop scopes are:
"function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_L
OOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found:
test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250801_015544.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.78 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.78 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-08-01 01:57:27] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
+
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib
   \s...cope" is unset.:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will
default to the fixture caching scope. Future versions of
pytest-asyncio will default the loop scope for
asynchronous fixtures to function scope. Set the default
fixture loop scope explicitly in order to avoid unexpected
behavior in the future. Valid fixture loop scopes are:
"function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_L
OOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found:
test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [auth] library/python:pull token for registry-1.docker.io
#3 DONE 0.0s

#4 [internal] load metadata for docker.io/library/python:3.10-slim
#4 DONE 0.7s

#5 [internal] load .dockerignore
#5 transferring context: 908B done
#5 DONE 0.0s

#6 [internal] load build context
#6 DONE 0.0s

#7 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#7 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.1s done
#7 DONE 0.1s

#6 [internal] load build context
#6 transferring context: 91.40kB 0.1s done
#6 DONE 0.1s

#8 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#8 CACHED

#9 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#10 CACHED

#11 [ 2/15] WORKDIR /app
#11 CACHED

#12 [ 3/15] COPY requirements.txt requirements.txt
#12 CACHED

#13 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#13 CACHED

#14 [ 8/15] COPY --chown=app:app src/ /app/src/
#14 DONE 0.2s

#15 [ 9/15] COPY --chown=app:app app/ /app/app/
#15 DONE 0.1s

#16 [10/15] COPY --chown=app:app config/ /app/config/
#16 DONE 0.1s

#17 [11/15] COPY --chown=app:app templates/ /app/templates/
#17 DONE 0.1s

#18 [12/15] COPY --chown=app:app static/ /app/static/
#18 DONE 0.3s

#19 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#19 DONE 0.4s

#20 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#20 DONE 0.6s

#21 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#21 DONE 0.5s

#22 exporting to image
#22 exporting layers
#22 exporting layers 2.0s done
#22 exporting manifest sha256:fce29ed9b7203ccc04906cdc623be62a4805b41e9eecc2e126a46e826c3d7dfc 0.0s done
#22 exporting config sha256:2094b3a7f5e70d53bd1dce043c5d401bc48e8d7f012b50a9b54718770ae820c5 0.0s done
#22 exporting attestation manifest sha256:9b54df0f9d8b9be38818ff12b25abfb93cb3813dd8af726e42d3519f5a0c4844 0.0s done
#22 exporting manifest list sha256:a5f9fb457d6fa57004fba543173c25454ffae5877f2ab99835bb1354284ba734
#22 exporting manifest list sha256:a5f9fb457d6fa57004fba543173c25454ffae5877f2ab99835bb1354284ba734 0.0s done
#22 naming to docker.io/library/casestrainer-backend:latest done
#22 unpacking to docker.io/library/casestrainer-backend:latest
#22 unpacking to docker.io/library/casestrainer-backend:latest 0.7s done
#22 DONE 2.9s

#23 resolving provenance for metadata file
#23 DONE 0.0s
pytest.exe :
D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v
--maxfail=1 --disab ...
+
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib
   \s...cope" is unset.:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will
default to the fixture caching scope. Future versions of
pytest-asyncio will default the loop scope for
asynchronous fixtures to function scope. Set the default
fixture loop scope explicitly in order to avoid unexpected
behavior in the future. Valid fixture loop scopes are:
"function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_L
OOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found:
test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250801_095307.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.32 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.32 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-08-01 09:54:56] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.04s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 ...

#4 [auth] library/python:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 DONE 0.7s

#5 [internal] load .dockerignore
#5 transferring context: 908B 0.0s done
#5 DONE 0.0s

#6 [internal] load build context
#6 DONE 0.0s

#7 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#7 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.0s done
#7 DONE 0.1s

#6 [internal] load build context
#6 transferring context: 160.48kB 0.1s done
#6 DONE 0.1s

#8 [ 3/15] COPY requirements.txt requirements.txt
#8 CACHED

#9 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [ 2/15] WORKDIR /app
#10 CACHED

#11 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#11 CACHED

#12 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#12 CACHED

#13 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#13 CACHED

#14 [ 8/15] COPY --chown=app:app src/ /app/src/
#14 DONE 0.2s

#15 [ 9/15] COPY --chown=app:app app/ /app/app/
#15 DONE 0.1s

#16 [10/15] COPY --chown=app:app config/ /app/config/
#16 DONE 0.1s

#17 [11/15] COPY --chown=app:app templates/ /app/templates/
#17 DONE 0.1s

#18 [12/15] COPY --chown=app:app static/ /app/static/
#18 DONE 0.3s

#19 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#19 DONE 0.5s

#20 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#20 DONE 0.6s

#21 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#21 DONE 0.4s

#22 exporting to image
#22 exporting layers
#22 exporting layers 1.9s done
#22 exporting manifest sha256:ff2e1367a4d899506eab0ebec72551bbe7bdafee1740152b06da522a619a64e4 0.0s done
#22 exporting config sha256:e1a614673c1235c5a945a5287b6b5fe41e2fcae44cd397776b94afbbd7c5cb0b 0.0s done
#22 exporting attestation manifest sha256:91f5ea49867eb98d0dc5133157f0d6fd3730f15154204f3d9c26e5e05103a1a6 0.0s done
#22 exporting manifest list sha256:a92e1f68846a43215a4fea80e20bafb97a993388912047bd439c99ca3d3814e5 0.0s done
#22 naming to docker.io/library/casestrainer-backend:latest done
#22 unpacking to docker.io/library/casestrainer-backend:latest
#22 unpacking to docker.io/library/casestrainer-backend:latest 0.7s done
#22 DONE 2.9s

#23 resolving provenance for metadata file
#23 DONE 0.0s
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.04s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>python -c "import sys; from src.app_final_vue import create_app; app = create_app()"

]633;D;0]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>curl -s http://localhost:5000/casestrainer/api/routes
>> TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250801_112856.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.3 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (57.3 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
OK All services are ready
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-08-01 11:30:45] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.04s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 ...

#4 [auth] library/python:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 DONE 0.8s

#5 [internal] load .dockerignore
#5 transferring context: 908B done
#5 DONE 0.0s

#6 [internal] load build context
#6 DONE 0.0s

#7 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#7 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.1s done
#7 DONE 0.1s

#6 [internal] load build context
#6 transferring context: 164.40kB 0.1s done
#6 DONE 0.1s

#8 [ 2/15] WORKDIR /app
#8 CACHED

#9 [ 3/15] COPY requirements.txt requirements.txt
#9 CACHED

#10 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#10 CACHED

#11 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#11 CACHED

#12 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#12 CACHED

#13 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#13 CACHED

#14 [ 8/15] COPY --chown=app:app src/ /app/src/
#14 DONE 0.2s

#15 [ 9/15] COPY --chown=app:app app/ /app/app/
#15 DONE 0.1s

#16 [10/15] COPY --chown=app:app config/ /app/config/
#16 DONE 0.1s

#17 [11/15] COPY --chown=app:app templates/ /app/templates/
#17 DONE 0.1s

#18 [12/15] COPY --chown=app:app static/ /app/static/
#18 DONE 0.4s

#19 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#19 DONE 0.5s

#20 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#20 DONE 0.5s

#21 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#21 DONE 0.4s

#22 exporting to image
#22 exporting layers
#22 exporting layers 1.9s done
#22 exporting manifest sha256:a8c763ff96e28ce83fd387518b56f2c96b0de048705e2dc7b81338af68827966 0.0s done
#22 exporting config sha256:bc52d0a5b5c4eada077f4b312d36316340b714d3b85afca5630219768642bc4e 0.0s done
#22 exporting attestation manifest sha256:cbe22db8390dd2176f2b74354364ca89ea0d9556c3b22047ee13d6d065ff9e1c 0.0s done
#22 exporting manifest list sha256:e607ea2d9046bc0f8c069165ee50a45199a992538a7f9c42d658d5076639759f
#22 exporting manifest list sha256:e607ea2d9046bc0f8c069165ee50a45199a992538a7f9c42d658d5076639759f 0.0s done
#22 naming to docker.io/library/casestrainer-backend:latest done
#22 unpacking to docker.io/library/casestrainer-backend:latest
#22 unpacking to docker.io/library/casestrainer-backend:latest 0.7s done
#22 DONE 2.7s

#23 resolving provenance for metadata file
#23 DONE 0.0s
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208:
PytestDeprecationWarning: The configuration option
"asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2354 char:17
+ ...             & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String)
    [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching
scope. Future versions of pytest-asyncio will default the loop scope for asynchronous
fixtures to function scope. Set the default fixture loop scope explicitly in order to
avoid unexpected behavior in the future. Valid fixture loop scopes are: "function",
"class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.04s ============================
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
