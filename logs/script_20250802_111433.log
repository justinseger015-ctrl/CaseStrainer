**********************
Windows PowerShell transcript start
Start time: 20250802111433
Username: NETID\jafrank
RunAs User: NETID\jafrank
Configuration Name: 
Machine: HAUMEA (Microsoft Windows NT 10.0.20348.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noexit -command try { . "c:\Users\jafrank\AppData\Local\Programs\cursor\resources\app\out\vs\workbench\contrib\terminal\common\scripts\shellIntegration.ps1" } catch {}
Process ID: 1432
PSVersion: 5.1.20348.3932
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.20348.3932
BuildVersion: 10.0.20348.3932
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is D:\dev\casestrainer\logs\script_20250802_111433.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>.\cslaunch.ps1 -MenuOption 1
Transcript started, output file is D:\dev\casestrainer\logs\script_20250802_111516.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Running menu option 1...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (55.01 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to become healthy (timeout: 10 minutes, requires 2 consecutive healthy checks)...
âœ… All services report healthy (1/2)...
No status change detected, waiting...
âœ… All services are ready and stable
  Backend: HEALTHY, Redis: HEALTHY, Worker: HEALTHY
âœ… API endpoint is responding: {"message":"Vue API is running","status":"ok","timestamp":"2025-08-02T18:15:45.770599"}

=== Docker Production Mode Ready ===
INFO Production Site:  https://wolf.law.uw.edu/casestrainer

Local Development URLs:
Backend API:    http://localhost:5001/casestrainer/api/
Frontend Prod:  http://localhost:8080/
Nginx (HTTP):   http://localhost:80/
Nginx (HTTPS):  https://localhost:443/
Local Frontend: https://localhost/casestrainer/
API Health:     https://localhost/casestrainer/api/health

Docker Commands:
  View logs:    docker-compose -f docker-compose.prod.yml logs [service]
  Stop all:     docker-compose -f docker-compose.prod.yml down
  Restart:      docker-compose -f docker-compose.prod.yml restart [service]

Running adaptive learning pipeline...
Starting adaptive learning pipeline...
Using enhanced adaptive learning pipeline...
Running adaptive learning pipeline...
âœ… Adaptive learning pipeline completed successfully
âœ… Adaptive learning completed successfully

Running post-startup validation...
  Testing API endpoints...
  âœ… API health check passed
  âŒ Text processing test failed after 3 attempts
WARNING: Post-startup validation failed - system may have issues
Running production test suite...
[2025-08-02 11:15:58] âŒ Some production tests failed (exit code: 4)!

Last 30 lines of test output:

============================ no tests ran in 0.03s ============================
pytest.exe : D:\Python\Lib\site-packages\pytest_asyncio\plugin.py:208: PytestDeprecationWarning: The
configuration option "asyncio_default_fixture_loop_scope" is unset.
At D:\dev\casestrainer\cslaunch.ps1:2620 char:39
+ ... estResult = & pytest test_production_server.py -v --maxfail=1 --disab ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (D:\Python\Lib\s...cope" is unset.:String) [], RemoteExce
   ption
    + FullyQualifiedErrorId : NativeCommandError

The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future
versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope.
Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future.
Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0 -- D:\Python\python.exe
cachedir: .pytest_cache
metadata: {'Python': '3.13.3', 'Platform': 'Windows-2022Server-10.0.20348-SP0', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'asyncio': '1.0.0', 'cov': '6.1.1', 'html': '4.1.1', 'httpx': '0.35.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.7.0'}}
rootdir: D:\dev\casestrainer
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, html-4.1.1, httpx-0.35.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.7.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
ERROR: file or directory not found: test_production_server.py

collecting ... collected 0 items

============================ no tests ran in 0.03s ============================

Full test log available at: D:\dev\casestrainer\logs\production_test.log
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>docker ps

]633;D;0]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>curl -s http://localhost:5001/casestrainer/api/health
>> TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>Invoke-WebRequest -Uri "http://localhost:5001/casestrainer/api/health" -UseBasicParsing
>> TerminatingError(Invoke-WebRequest): "Unable to connect to the remote server"
Invoke-WebRequest : Unable to connect to the remote server
At line:1 char:1
+ Invoke-WebRequest -Uri "http://localhost:5001/casestrainer/api/health ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-WebRequest], 
WebException
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand
Invoke-WebRequest : Unable to connect to the remote server
At line:1 char:1
+ Invoke-WebRequest -Uri "http://localhost:5001/casestrainer/api/health ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-We
   bRequest], WebException
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRe
   questCommand

]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>Invoke-WebRequest -Uri "https://localhost/casestrainer/api/health" -UseBasicParsing -SkipCertificateCheck
>> TerminatingError(Invoke-WebRequest): "A parameter cannot be found that matches parameter name 'SkipCertificateCheck'."
Invoke-WebRequest : A parameter cannot be found that matches parameter name 'SkipCertificateCheck'.
At line:1 char:85
+ ... lhost/casestrainer/api/health" -UseBasicParsing -SkipCertificateCheck
+                                                     ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Invoke-WebRequest], ParameterBindingException
    + FullyQualifiedErrorId : NamedParameterNotFound,Microsoft.PowerShell.Commands.InvokeWebRequestCommand
Invoke-WebRequest : A parameter cannot be found that matches parameter name 'SkipCertificateCheck'.
At line:1 char:85
+ ... lhost/casestrainer/api/health" -UseBasicParsing -SkipCertificateCheck
+                                                     ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Invoke-WebRequest], ParameterBindingException
    + FullyQualifiedErrorId : NamedParameterNotFound,Microsoft.PowerShell.Commands.InvokeWebRequestCo
   mmand

]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}; Invoke-WebRequest -Uri "https://localhost/casestrainer/api/health" -UseBasicParsing
>> TerminatingError(Invoke-WebRequest): "The underlying connection was closed: An unexpected error occurred on a send."
Invoke-WebRequest : The underlying connection was closed: An unexpected error occurred on a send.
At line:1 char:82
+ ...  = {$true}; Invoke-WebRequest -Uri "https://localhost/casestrainer/ap ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-WebRequest], 
WebException
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand
Invoke-WebRequest : The underlying connection was closed: An unexpected error occurred on a send.
At line:1 char:82
+ ...  = {$true}; Invoke-WebRequest -Uri "https://localhost/casestrainer/ap ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-We
   bRequest], WebException
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRe
   questCommand

]633;D;1]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
]633;D]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>docker-compose -f docker-compose.prod.yml logs backend --tail 20

]633;D;0]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>docker-compose -f docker-compose.prod.yml logs nginx --tail 10

]633;D;0]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>docker-compose -f docker-compose.prod.yml ps

]633;D;0]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
PS>Invoke-WebRequest -Uri "http://localhost:5000/casestrainer/api/health" -UseBasicParsing
>> TerminatingError(Invoke-WebRequest): "Cannot process the operation because the supplied coordinate is not valid. Specify a coordinate within the buffer area of 103,1.
Parameter name: origin.Y
Actual value was 2."
Invoke-WebRequest : Cannot process the operation because the supplied coordinate is not valid. Specify a coordinate 
within the buffer area of 103,1.
Parameter name: origin.Y
Actual value was 2.
At line:1 char:1
+ Invoke-WebRequest -Uri "http://localhost:5000/casestrainer/api/health ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Invoke-WebRequest], PSArgumentOutOfRangeException
    + FullyQualifiedErrorId : ArgumentOutOfRange,Microsoft.PowerShell.Commands.InvokeWebRequestCommand
Invoke-WebRequest : Cannot process the operation because the supplied coordinate is not valid.
>> TerminatingError(out-lineoutput): "Cannot process the operation because the supplied coordinate is not valid. Specify a coordinate within the buffer area of 103,1.
Parameter name: origin.Y
Actual value was 2."
Cannot process the operation because the supplied coordinate is not valid. Specify a coordinate within the buffer area of 103,1.
Parameter name: origin.Y
Actual value was 2.
**********************
Windows PowerShell transcript end
End time: 20250802112046
**********************
