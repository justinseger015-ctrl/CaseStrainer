**********************
Windows PowerShell transcript start
Start time: 20250731201110
Username: NETID\jafrank
RunAs User: NETID\jafrank
Configuration Name: 
Machine: HAUMEA (Microsoft Windows NT 10.0.20348.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -ExecutionPolicy Bypass -File .\cslaunch.ps1
Process ID: 3420
PSVersion: 5.1.20348.3932
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.20348.3932
BuildVersion: 10.0.20348.3932
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_201110.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (81.41 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
ERROR: Failed to start Docker containers (exit code: 1)
Checking Docker daemon status...
Docker daemon is running (version: 28.3.2)
The issue may be with the compose file or container configuration
ERROR: Failed to start Docker containers (exit code: 1)

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Using cached Vue build check result: False
OK Docker is running
OK Sufficient disk space (81.41 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
ERROR: Failed to start Docker containers (exit code: 1)
Checking Docker daemon status...
Docker daemon is running (version: 28.3.2)
The issue may be with the compose file or container configuration
ERROR: Failed to start Docker containers (exit code: 1)
âŒ Docker production failed
PS>TerminatingError(): "System error."
#1 [internal] load local bake definitions
#1 reading from stdin 354B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.62kB 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.10-slim
#3 DONE 0.2s

#4 [internal] load .dockerignore
#4 transferring context: 908B 0.0s done
#4 DONE 0.0s

#5 [internal] load build context
#5 DONE 0.0s

#6 [ 1/15] FROM docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#6 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5
#6 resolve docker.io/library/python:3.10-slim@sha256:81f1cdb3770d54ecfdbddcc52c2125fce674c14a1d976dfd8f65dc0734f9c3c5 0.7s done
#6 DONE 0.7s

#5 [internal] load build context
#5 transferring context: 37.52kB 0.1s done
#5 DONE 0.1s

#7 [ 9/15] COPY --chown=app:app app/ /app/app/
#7 CACHED

#8 [ 2/15] WORKDIR /app
#8 CACHED

#9 [ 4/15] RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
#9 CACHED

#10 [ 8/15] COPY --chown=app:app src/ /app/src/
#10 CACHED

#11 [ 3/15] COPY requirements.txt requirements.txt
#11 CACHED

#12 [12/15] COPY --chown=app:app static/ /app/static/
#12 CACHED

#13 [11/15] COPY --chown=app:app templates/ /app/templates/
#13 CACHED

#14 [ 6/15] RUN apt-get update && apt-get install -y     build-essential     gcc     curl     git     libmagic1     && rm -rf /var/lib/apt/lists/*
#14 CACHED

#15 [14/15] RUN mkdir -p /app/logs && chown app:app /app/logs
#15 CACHED

#16 [ 7/15] RUN useradd --create-home --shell /bin/bash app
#16 CACHED

#17 [13/15] RUN find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -delete
#17 CACHED

#18 [ 5/15] RUN pip install --no-cache-dir -r requirements.txt
#18 CACHED

#19 [10/15] COPY --chown=app:app config/ /app/config/
#19 CACHED

#20 [15/15] RUN mkdir -p /home/app/data /home/app/logs /home/app/uploads /home/app/temp_uploads /app/citation_cache
#20 CACHED

#21 exporting to image
#21 exporting layers 0.0s done
#21 exporting manifest sha256:898d25708a05c3397ca012606b81c83c130d70eeeb89a3b3fe259e4890fe63d1 0.0s done
#21 exporting config sha256:91fd0e945eab2ed3db951def9d9661c3d2bceacd3b8454df6da02a65aefcb849 0.0s done
#21 exporting attestation manifest sha256:50f13fd7be4a1e2c940fecee171c0b52c567223944eb83c3b1ed32fbe79ae8f7
#21 exporting attestation manifest sha256:50f13fd7be4a1e2c940fecee171c0b52c567223944eb83c3b1ed32fbe79ae8f7 0.2s done
#21 exporting manifest list sha256:ae30f37f2931c675ede3fd0c62d450307a8eef39f1be2828d641d28d95522f02
#21 exporting manifest list sha256:ae30f37f2931c675ede3fd0c62d450307a8eef39f1be2828d641d28d95522f02 0.1s done
#21 naming to docker.io/library/casestrainer-backend:latest 0.0s done
#21 unpacking to docker.io/library/casestrainer-backend:latest 0.1s done
#21 DONE 0.7s

#22 resolving provenance for metadata file
#22 DONE 0.0s
PS>TerminatingError(): "System error."
**********************
Windows PowerShell transcript end
End time: 20250731201145
**********************
