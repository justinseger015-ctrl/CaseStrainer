**********************
Windows PowerShell transcript start
Start time: 20250731205317
Username: NETID\jafrank
RunAs User: NETID\jafrank
Configuration Name: 
Machine: HAUMEA (Microsoft Windows NT 10.0.20348.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noexit -command try { . "c:\Users\jafrank\AppData\Local\Programs\Windsurf\resources\app\out\vs\workbench\contrib\terminal\common\scripts\shellIntegration.ps1" } catch {}
Process ID: 6148
PSVersion: 5.1.20348.3932
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.20348.3932
BuildVersion: 10.0.20348.3932
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_205317.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (81 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
Services not ready (attempt 1): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 2): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 3): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 4): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 5): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 6): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 7): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 8): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 9): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 10): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 11): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 12): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 13): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 14): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 15): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 16): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 17): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 18): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 19): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 20): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 21): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 22): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 23): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 24): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 25): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 26): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 27): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 28): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 29): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 30): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 31): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 32): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 33): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 34): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 35): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 36): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 37): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 38): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 39): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 40): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 41): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 42): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 43): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 44): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 45): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 46): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 47): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS>TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
]633;D;0]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
(.venv) ./cslaunch
Transcript started, output file is D:\dev\casestrainer\logs\script_20250731_211442.log

=== Checking Docker Availability ===
[OK] Docker CLI is available: Docker version 28.3.2, build 578ccf6
[INFO] Docker is running in Linux containers mode
[OK] Docker Compose is available: Docker Compose version v2.38.2-desktop.1
[cslaunch] Starting interactive menu...

========================================
 Enhanced CaseStrainer Docker Launcher
                v1.3 (ENHANCED)
========================================

 1.  Quick Production Start (FASTEST)
    - Minimal checks, maximum speed

 2.  Smart Production Start (RECOMMENDED)
    - Intelligent build detection, balanced speed

 3.  Force Full Rebuild
    - Complete rebuild, use when needed

 4.   Advanced Diagnostics
 5.   Cache Management
 6.   Stop All Services
 7.  Quick Status Check
 8.  Run Production Server Test
 0.  Exit

TIP: Use option 1 for fastest startup!

Deleting all .pyc files and __pycache__ directories to prevent stale bytecode...
Analyzing code changes to determine rebuild strategy...
ðŸ„ Rebuilding backend image to ensure Python code changes are included...

=== Starting Docker Production Mode ===
Checking if Vue build is needed...
Vue build is up to date
OK Docker is running
OK Sufficient disk space (80.98 GB free)
Processing Vue frontend build...
Using cached Vue build check result: False
Vue build needed: False, ForceRebuild: False
OK Vue build up to date (skipping build)
Stopping existing Docker containers...
Running: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml down --timeout 30
Containers stopped successfully
Checking for any remaining 'casestrainer' containers...
No remaining 'casestrainer' containers found.

Starting Docker containers...
Using existing images (no rebuild needed)...
Docker compose command: docker-compose -f D:\dev\casestrainer\docker-compose.prod.yml up -d
OK Docker containers started successfully
Waiting for containers to initialize...

Waiting for services to initialize...
Services not ready (attempt 1): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 2): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 3): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 4): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
Services not ready (attempt 5): Backend (127.0.0.1:5001): DOWN, Redis (127.0.0.1:6380): UP, RQ Worker: HEALTHY
(.venv) TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
(.venv) TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
(.venv) TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
]633;D;0]633;A]633;P;Cwd=D:\x5cdev\x5ccasestrainerPS D:\dev\casestrainer> ]633;B
