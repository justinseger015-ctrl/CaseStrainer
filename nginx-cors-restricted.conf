# Map allowed origins to a variable
map $http_origin $cors_origin {
    default "";
    "~^https?://(localhost(:[0-9]+)?|wolf\.law\.uw\.edu|case\.law\.uw\.edu|legalresearch\.org)(:[0-9]+)?$" $http_origin;
    # Add other allowed domains as needed
}

# Main server block with CORS restrictions
server {
    # ... existing server configuration ...

    # API proxy with restricted CORS
    location ^~ /casestrainer/api/ {
        proxy_pass http://casestrainer-backend-prod:5000/casestrainer/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers - only for allowed origins
        if ($cors_origin != '') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            if ($cors_origin != '') {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            return 403;
        }
    }

    # ... rest of the configuration ...
}
