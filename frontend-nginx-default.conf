server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    
    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html;
    
    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # API proxy to backend - this will be handled by the main nginx proxy
    # So we don't need to handle /api/ here

    # Handle /casestrainer/ path for static assets
    location ^~ /casestrainer/assets/ {
        alias /usr/share/nginx/html/assets/;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
    }

    # Serve static files directly with proper caching (without /casestrainer/ prefix)
    location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|woff|woff2|ttf|svg|eot)$ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
    }

    # Handle the /casestrainer/ path for the SPA
    location ^~ /casestrainer/ {
        alias /usr/share/nginx/html/;
        try_files $uri $uri/ /index.html;
        
        # Add headers for single page app
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }

    # Handle all other requests with the SPA (without /casestrainer/ prefix)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Add headers for single page app
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }

    # Handle 404 errors
    error_page 404 /index.html;
    
    # Disable logging for favicon.ico
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    # Security headers for all responses
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
}
