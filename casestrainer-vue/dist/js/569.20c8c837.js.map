{"version":3,"file":"js/569.20c8c837.js","mappings":"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","sources":["webpack://casestrainer-vue/./src/views/CitationTester.vue","webpack://casestrainer-vue/./src/views/CitationTester.vue?085c"],"sourcesContent":["<template>\n  <div class=\"citation-tester\">\n    <h2>Citation Verification Tester</h2>\n    <p class=\"lead\">Test the citation verification system with random assortments of citations</p>\n    \n    <div class=\"card mb-4\">\n      <div class=\"card-header bg-primary text-white\">\n        <h5 class=\"mb-0\">Test Configuration</h5>\n      </div>\n      <div class=\"card-body\">\n        <form @submit.prevent=\"runTest\">\n          <div class=\"row mb-3\">\n            <div class=\"col-md-4\">\n              <label for=\"citationCount\" class=\"form-label\">Number of Citations:</label>\n              <input \n                type=\"number\" \n                class=\"form-control\" \n                id=\"citationCount\" \n                v-model.number=\"testConfig.count\"\n                min=\"1\" \n                max=\"20\"\n                required\n              >\n            </div>\n            <div class=\"col-md-8\">\n              <label class=\"form-label\">Citation Types:</label>\n              <div class=\"d-flex\">\n                <div class=\"form-check me-4\">\n                  <input \n                    class=\"form-check-input\" \n                    type=\"checkbox\" \n                    id=\"confirmedCheckbox\" \n                    v-model=\"testConfig.includeConfirmed\"\n                    @change=\"updateCheckboxes\"\n                  >\n                  <label class=\"form-check-label\" for=\"confirmedCheckbox\">\n                    Include Confirmed Citations\n                  </label>\n                </div>\n                <div class=\"form-check\">\n                  <input \n                    class=\"form-check-input\" \n                    type=\"checkbox\" \n                    id=\"unconfirmedCheckbox\" \n                    v-model=\"testConfig.includeUnconfirmed\"\n                    @change=\"updateCheckboxes\"\n                  >\n                  <label class=\"form-check-label\" for=\"unconfirmedCheckbox\">\n                    Include Unconfirmed Citations\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"apiKey\" class=\"form-label\">CourtListener API Key (Optional):</label>\n            <input \n              type=\"text\" \n              class=\"form-control\" \n              id=\"apiKey\" \n              v-model=\"testConfig.apiKey\"\n              placeholder=\"Enter your CourtListener API key\"\n            >\n            <div class=\"form-text\">If you have a CourtListener API key, enter it here for better citation verification.</div>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"testing\">\n            <span v-if=\"testing\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n            Run Test\n          </button>\n        </form>\n      </div>\n    </div>\n    \n    <div v-if=\"testResults.length > 0\" class=\"card mb-4\">\n      <div class=\"card-header bg-info text-white\">\n  <h5 class=\"mb-0\">Test Results</h5>\n</div>\n<div class=\"card-body\">\n        <div class=\"mb-4\">\n          <h5>Summary</h5>\n          <div class=\"row text-center\">\n            <div class=\"col-md-3 mb-3\">\n              <div class=\"card bg-light\">\n                <div class=\"card-body\">\n                  <h3>{{ testResults.length }}</h3>\n                  <p class=\"mb-0\">Total Citations</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-3 mb-3\">\n              <div class=\"card bg-success text-white\">\n                <div class=\"card-body\">\n                  <h3>{{ correctlyVerified }}</h3>\n                  <p class=\"mb-0\">Correctly Verified</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-3 mb-3\">\n              <div class=\"card bg-danger text-white\">\n                <div class=\"card-body\">\n                  <h3>{{ incorrectlyVerified }}</h3>\n                  <p class=\"mb-0\">Incorrectly Verified</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-3 mb-3\">\n              <div class=\"card bg-warning\">\n                <div class=\"card-body\">\n                  <h3>{{ (accuracy * 100).toFixed(1) }}%</h3>\n                  <p class=\"mb-0\">Accuracy</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"table-responsive\">\n          <table class=\"table table-striped table-hover\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Citation</th>\n                <th>Actual Status</th>\n                <th>Verified Status</th>\n                <th>Verification Source</th>\n                <th>Time (ms)</th>\n                <th>Result</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(result, index) in testResults\" :key=\"index\">\n                <td>{{ index + 1 }}</td>\n                <td>\n                  <strong>{{ result.citation_text }}</strong>\n                  <div v-if=\"result.case_name\" class=\"small text-muted\">{{ result.case_name }}</div>\n                </td>\n                <td>\n                  <span \n                    class=\"badge\" \n                    :class=\"result.actual_status === 'confirmed' ? 'bg-success' : 'bg-danger'\"\n                  >\n                    {{ result.actual_status === 'confirmed' ? 'Real' : 'Hallucinated' }}\n                  </span>\n                </td>\n                <td>\n                  <span \n                    class=\"badge\" \n                    :class=\"result.verified_status === 'confirmed' ? 'bg-success' : 'bg-danger'\"\n                  >\n                    {{ result.verified_status === 'confirmed' ? 'Confirmed' : 'Unconfirmed' }}\n                  </span>\n                </td>\n                <td>{{ result.verification_source || 'None' }}</td>\n                <td>{{ result.verification_time_ms }}</td>\n                <td>\n                  <span \n                    class=\"badge\" \n                    :class=\"result.actual_status === result.verified_status ? 'bg-success' : 'bg-danger'\"\n                  >\n                    {{ result.actual_status === result.verified_status ? 'Correct' : 'Incorrect' }}\n                  </span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        \n        <div class=\"mt-4\">\n          <h5>Performance by Verification Source</h5>\n          <div class=\"table-responsive\">\n            <table class=\"table table-sm\">\n              <thead>\n                <tr>\n                  <th>Verification Source</th>\n                  <th>Citations</th>\n                  <th>Correct</th>\n                  <th>Incorrect</th>\n                  <th>Accuracy</th>\n                  <th>Avg. Time (ms)</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"(stats, source) in sourceStats\" :key=\"source\">\n                  <td>{{ source }}</td>\n                  <td>{{ stats.count }}</td>\n                  <td>{{ stats.correct }}</td>\n                  <td>{{ stats.incorrect }}</td>\n                  <td>{{ (stats.accuracy * 100).toFixed(1) }}%</td>\n                  <td>{{ stats.avgTime.toFixed(0) }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-header bg-light\">\n        <h5 class=\"mb-0\">About the Citation Tester</h5>\n      </div>\n      <div class=\"card-body\">\n        <p>The Citation Tester helps evaluate the performance of our citation verification system by:</p>\n        <ul>\n          <li>Testing with a mix of confirmed and unconfirmed citations</li>\n          <li>Measuring verification accuracy and speed</li>\n          <li>Comparing performance across different verification sources</li>\n          <li>Identifying patterns in verification errors</li>\n        </ul>\n        <p>This tool is valuable for:</p>\n        <ul>\n          <li>Benchmarking system improvements</li>\n          <li>Identifying verification sources that need enhancement</li>\n          <li>Testing with different API keys to compare performance</li>\n          <li>Validating the multi-source verification approach</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '@/api/citations';\n\nexport default {\n  name: 'CitationTester',\n  data() {\n    return {\n      testConfig: {\n        count: 5,\n        includeConfirmed: true,\n        includeUnconfirmed: true,\n        apiKey: ''\n      },\n      testing: false,\n      testResults: [],\n      debugInfo: ''\n    };\n  },\n  computed: {\n    correctlyVerified() {\n      return this.testResults.filter(result => \n        result.actual_status === result.verified_status\n      ).length;\n    },\n    incorrectlyVerified() {\n      return this.testResults.filter(result => \n        result.actual_status !== result.verified_status\n      ).length;\n    },\n    accuracy() {\n      return this.testResults.length > 0 \n        ? this.correctlyVerified / this.testResults.length \n        : 0;\n    },\n    sourceStats() {\n      const stats = {};\n      \n      this.testResults.forEach(result => {\n        const source = result.verification_source || 'None';\n        \n        if (!stats[source]) {\n          stats[source] = {\n            count: 0,\n            correct: 0,\n            incorrect: 0,\n            totalTime: 0\n          };\n        }\n        \n        stats[source].count++;\n        \n        if (result.actual_status === result.verified_status) {\n          stats[source].correct++;\n        } else {\n          stats[source].incorrect++;\n        }\n        \n        stats[source].totalTime += result.verification_time_ms;\n      });\n      \n      // Calculate accuracy and average time\n      Object.keys(stats).forEach(source => {\n        const sourceStats = stats[source];\n        sourceStats.accuracy = sourceStats.count > 0 \n          ? sourceStats.correct / sourceStats.count \n          : 0;\n        sourceStats.avgTime = sourceStats.count > 0 \n          ? sourceStats.totalTime / sourceStats.count \n          : 0;\n      });\n      \n      return stats;\n    }\n  },\n  methods: {\n    updateCheckboxes() {\n      // Ensure at least one checkbox is checked\n      if (!this.testConfig.includeConfirmed && !this.testConfig.includeUnconfirmed) {\n        // If both are unchecked, check the one that was just unchecked\n        if (!this.testConfig.includeConfirmed) {\n          this.testConfig.includeConfirmed = true;\n        } else {\n          this.testConfig.includeUnconfirmed = true;\n        }\n      }\n    },\n    \n    async runTest() {\n      this.testing = true;\n      // Start debug info\n      this.debugInfo = 'Debug: Starting citation test...\\n';\n      this.debugInfo += `Request: count=${this.testConfig.count}, includeConfirmed=${this.testConfig.includeConfirmed}, includeUnconfirmed=${this.testConfig.includeUnconfirmed}\\n`;\n      try {\n        const response = await api.getTestCitations(\n          this.testConfig.count,\n          this.testConfig.includeConfirmed,\n          this.testConfig.includeUnconfirmed\n        );\n        this.debugInfo += `Response received: Success\\n`;\n        this.debugInfo += `Response data: ${JSON.stringify(response.data, null, 2)}\\n`;\n        this.testResults = response.data.results || [];\n      } catch (error) {\n        console.error('Error running citation test:', error);\n        this.debugInfo += `Error: ${error.message}\\n`;\n        if (error.response) {\n          this.debugInfo += `Response status: ${error.response.status}\\n`;\n          this.debugInfo += `Response data: ${JSON.stringify(error.response.data, null, 2)}\\n`;\n        }\n        alert('Error running citation test. Please try again.');\n      } finally {\n        // Send debugInfo to backend for logging\n        api.logDebugInfo(this.debugInfo);\n        this.testing = false;\n      }\n    }\n  }\n}\n</script>\n","import { render } from \"./CitationTester.vue?vue&type=template&id=190e0bf0\"\nimport script from \"./CitationTester.vue?vue&type=script&lang=js\"\nexport * from \"./CitationTester.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","key","role","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","$options","runTest","apply","arguments","_hoisted_4","_hoisted_5","for","type","id","$event","$data","testConfig","count","min","max","required","number","_hoisted_6","_hoisted_7","_hoisted_8","includeConfirmed","onChange","updateCheckboxes","_hoisted_9","includeUnconfirmed","_hoisted_10","apiKey","placeholder","disabled","testing","_hoisted_12","_createCommentVNode","_createTextVNode","_hoisted_11","testResults","length","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_toDisplayString","_hoisted_20","_hoisted_21","_hoisted_22","correctlyVerified","_hoisted_23","_hoisted_24","_hoisted_25","incorrectlyVerified","_hoisted_26","_hoisted_27","_hoisted_28","accuracy","toFixed","_hoisted_29","_hoisted_30","_Fragment","_renderList","result","index","citation_text","case_name","_hoisted_31","_normalizeClass","actual_status","verified_status","verification_source","verification_time_ms","_hoisted_32","_hoisted_33","_hoisted_34","sourceStats","stats","source","correct","incorrect","avgTime","_createStaticVNode","name","data","debugInfo","computed","this","filter","forEach","totalTime","Object","keys","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","concat","api","getTestCitations","sent","JSON","stringify","results","t0","console","error","message","status","alert","logDebugInfo","finish","stop","__exports__","render"],"sourceRoot":""}