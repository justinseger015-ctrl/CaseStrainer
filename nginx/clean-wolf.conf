# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name wolf.law.uw.edu;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Redirect all HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name wolf.law.uw.edu;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/WolfCertBundle.crt;
    ssl_certificate_key /etc/nginx/ssl/wolf.law.uw.edu.key;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;

    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html;

    # Handle the /casestrainer/ path
    location /casestrainer/ {
        alias /usr/share/nginx/html/casestrainer/;
        try_files $uri $uri/ /casestrainer/index.html;
        
        # Cache control for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|woff|woff2|ttf|svg|eot)$ {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            access_log off;
        }
    }

    # API proxy
    location /api/ {
        proxy_pass http://backend:5000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Error pages
    error_page 404 /casestrainer/404.html;
    error_page 500 502 503 504 /casestrainer/50x.html;
    
    location = /casestrainer/50x.html {
        root /usr/share/nginx/html;
    }
}
