# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name wolf.law.uw.edu;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name wolf.law.uw.edu;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/WolfCertBundle.crt;
    ssl_certificate_key /etc/nginx/ssl/wolf.law.uw.edu.key;
    
    # SSL settings - using global settings from nginx.conf
    # ssl_session_* and ssl_protocols are defined in the main nginx.conf

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Handle the root path with a redirect to /casestrainer/
    location = / {
        return 301 https://$host/casestrainer/;
    }

    # API proxy
    location ^~ /api/ {
        proxy_pass http://casestrainer-backend-prod:5000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static assets with proper MIME types
    location ~* ^/assets/ {
        root /usr/share/nginx/html/casestrainer;
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        access_log off;
        include mime.types;
    }

    # JavaScript files
    location ~* \.(js|mjs)$ {
        root /usr/share/nginx/html/casestrainer;
        try_files $uri =404;
        include mime.types;
        default_type application/javascript;
        access_log off;
    }

    # CSS files
    location ~* \.css$ {
        root /usr/share/nginx/html/casestrainer;
        try_files $uri =404;
        include mime.types;
        default_type text/css;
        access_log off;
    }

    # Other static files
    location ~* \.(?:png|jpg|jpeg|gif|ico|woff|woff2|ttf|svg|eot)$ {
        root /usr/share/nginx/html/casestrainer;
        try_files $uri =404;
        access_log off;
        include mime.types;
    }

    # Handle the SPA
    location / {
        root /usr/share/nginx/html/casestrainer;
        try_files $uri $uri/ /index.html;
        include mime.types;
    }

    # Error pages
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
}
