# Redirect HTTP to HTTPS (except health endpoint)
server {
    listen 80;
    server_name localhost wolf.law.uw.edu;  # Added localhost for testing
    
    # Health check endpoint - allow HTTP access
    location = /casestrainer/api/health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status": "healthy"}';
    }
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin" always;
    
    # Redirect all other HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl;
    http2 on;  # Moved http2 to its own directive
    server_name localhost wolf.law.uw.edu;  # Added localhost for testing
    
    # SSL Configuration
    ssl_certificate     /etc/nginx/ssl/WolfCertBundle.crt;
    ssl_certificate_key /etc/nginx/ssl/wolf.law.uw.edu.key;
    
    # SSL Protocols and Ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    
    # SSL Session Cache
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https:; frame-ancestors 'self';" always;
    
    client_max_body_size 100M;
    
    # Health check endpoint - HTTPS version
    location = /casestrainer/api/health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status": "healthy"}';
    }

    # API Proxy
    location /casestrainer/api/ {
        # Remove the rewrite rule since we want to keep the /casestrainer/api/ prefix
        proxy_pass http://casestrainer-backend-prod:5000;  # Using container name
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "https://wolf.law.uw.edu" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://wolf.law.uw.edu" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Frontend - Vue.js app
    location /casestrainer/ {
        alias /usr/share/nginx/html/;
        try_files $uri $uri/ /index.html;
        
        # Cache control for static assets - cache busting for development
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0" always;
            add_header Pragma "no-cache" always;
            add_header Expires "Thu, 01 Jan 1970 00:00:00 GMT" always;
            add_header Last-Modified "Thu, 01 Jan 1970 00:00:00 GMT" always;
            access_log off;
        }
        
        # Cache busting for HTML files
        location ~* \.(html)$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0" always;
            add_header Pragma "no-cache" always;
            add_header Expires "Thu, 01 Jan 1970 00:00:00 GMT" always;
            add_header Last-Modified "Thu, 01 Jan 1970 00:00:00 GMT" always;
        }
    }

    # Root redirect
    location = / {
        return 301 /casestrainer/;
    }

    # Error pages
    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /50x.html;
    
    location = /50x.html {
        internal;
        alias /usr/share/nginx/html/50x.html;
    }
}