worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name wolf.law.uw.edu localhost 127.0.0.1 128.208.154.3;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name wolf.law.uw.edu localhost 127.0.0.1 128.208.154.3;

        # SSL configuration
        ssl_certificate D:/CaseStrainer/ssl/WolfCertBundle.crt;
        ssl_certificate_key D:/CaseStrainer/ssl/wolf.law.uw.edu.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy strict-origin-when-cross-origin;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";

        # Error logging
        error_log logs/casestrainer_error.log debug;
        access_log logs/casestrainer_access.log combined;

        # Block and don't log RDP connections
        if ($http_user_agent ~* "(ms-term-serv|mstshash|tsclient-host)") {
            access_log off;
            return 444;
        }

        # Root location - redirect to /casestrainer
        location = / {
            return 301 https://$host/casestrainer/;
        }

        # Route /casestrainer to Vue dev server
        location /casestrainer/ {
            # Remove the /casestrainer prefix when forwarding to Vue dev server
            rewrite ^/casestrainer/(.*)$ /$1 break;
            
            proxy_pass http://127.0.0.1:3000/;  # Vue dev server on port 3000
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # API location
        location /casestrainer/api/ {
            # Proxy to backend (Flask on 5001)
            proxy_pass http://127.0.0.1:5001/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

            # File upload settings
            client_max_body_size 50M;
            proxy_request_buffering off;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 300s;
        }
    }

    # Default server block - catch all other HTTPS requests
    server {
        listen 443 ssl default_server;
        http2 on;
        server_name _;
        
        # SSL configuration (same as main server block)
        ssl_certificate D:/CaseStrainer/ssl/WolfCertBundle.crt;
        ssl_certificate_key D:/CaseStrainer/ssl/wolf.law.uw.edu.key;
        
        # Return 444 for all requests (no response)
        return 444;
    }
}
