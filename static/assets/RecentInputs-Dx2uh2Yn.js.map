{"version":3,"file":"RecentInputs-Dx2uh2Yn.js","sources":["../../src/api/api.js","../../src/composables/useRecentInputs.js","../../src/components/RecentInputs.vue"],"sourcesContent":["import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Get base URL from environment variables\nconst baseURL = import.meta.env.VITE_API_BASE_URL || '/casestrainer/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL,\n  timeout: 120000, // 2 minutes default timeout\n  // Remove default Content-Type header to let browser set it for FormData\n});\n\n// Log API configuration in development\nif (import.meta.env.DEV) {\n  console.log('API Configuration:', {\n    baseURL,\n    environment: import.meta.env.MODE,\n    apiBaseUrl: import.meta.env.VITE_API_BASE_URL,\n    fullUrl: `${baseURL}/analyze`\n  });\n}\n\n// Add request interceptor to set specific timeouts for different endpoints\napi.interceptors.request.use(config => {\n  // Set longer timeout for URL analysis\n  if (config.url === '/analyze' && config.data && config.data.type === 'url') {\n    config.timeout = 300000; // 5 minutes for URL analysis\n    config.retryCount = 0;\n    config.maxRetries = 3;\n  } else {\n    config.timeout = 120000; // 2 minutes for other endpoints\n    config.retryCount = 0;\n    config.maxRetries = 1;\n  }\n  return config;\n});\n\n// Add response interceptor for retry logic\napi.interceptors.response.use(\n  response => response,\n  async error => {\n    const config = error.config;\n    \n    // Only retry on timeout or network errors\n    if (!config || !config.retryCount || \n      config.retryCount >= config.maxRetries || \n      !(error.code === 'ECONNABORTED' || error.message.includes('timeout') || error.message.includes('Network Error'))) {\n      return Promise.reject(error);\n    }\n\n    // Increment retry count\n    config.retryCount += 1;\n    \n    // Calculate delay with exponential backoff\n    const delay = Math.min(1000 * Math.pow(2, config.retryCount), 30000);\n    \n    // Log retry attempt\n    console.log(`Retrying request to ${config.url} (attempt ${config.retryCount}/${config.maxRetries}) after ${delay}ms delay`);\n    \n    // Wait before retrying\n    await new Promise(resolve => setTimeout(resolve, delay));\n    \n    // Retry the request\n    return api(config);\n  }\n);\n\n// Request interceptor for API requests\napi.interceptors.request.use(\n  (config) => {\n    // Add API key to headers\n    config.headers['X-API-Key'] = import.meta.env.VITE_COURTLISTENER_API_KEY || '443a87912e4f444fb818fca454364d71e4aa9f91';\n    \n    // Only set Content-Type for non-FormData requests\n    if (!(config.data instanceof FormData)) {\n      config.headers['Content-Type'] = 'application/json';\n    }\n    \n    // Log request details in development\n    if (import.meta.env.DEV) {\n      console.log('API Request:', {\n        method: config.method,\n        url: config.url,\n        baseURL: config.baseURL,\n        headers: config.headers,\n        dataType: config.data instanceof FormData ? 'FormData' : 'JSON'\n      });\n    }\n    \n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    // Log successful responses in development\n    if (import.meta.env.DEV) {\n      console.log('API Response:', {\n        status: response.status,\n        url: response.config.url,\n        data: response.data\n      });\n    }\n    return response;\n  },\n  (error) => {\n    // Enhanced error logging\n    if (error.response) {\n      console.error('API Error Response:', {\n        status: error.response.status,\n        url: error.config?.url,\n        data: error.response.data,\n        headers: error.response.headers\n      });\n    } else if (error.request) {\n      console.error('API Request Error (No Response):', {\n        url: error.config?.url,\n        message: error.message\n      });\n    } else {\n      console.error('API Error:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for better error handling\napi.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.config && error.config.url === '/analyze' && error.config.data && error.config.data.type === 'url') {\n      // Handle URL-specific errors\n      if (error.response) {\n        switch (error.response.status) {\n          case 400:\n            error.message = 'Invalid URL or content type not supported';\n            break;\n          case 404:\n            error.message = 'URL not found or content not accessible';\n            break;\n          case 429:\n            error.message = 'Too many requests. Please try again in a few minutes';\n            break;\n          case 502:\n            error.message = 'Failed to fetch URL content. The server may be temporarily unavailable';\n            break;\n          case 504:\n            error.message = 'Request timed out while fetching URL content';\n            break;\n          default:\n            error.message = `Error fetching URL: ${error.response.status} ${error.response.statusText}`;\n        }\n      } else if (error.code === 'ECONNABORTED') {\n        error.message = 'Request timed out while fetching URL content';\n      } else if (error.code === 'ECONNREFUSED') {\n        error.message = 'Could not connect to the server';\n      } else if (error.code === 'ENOTFOUND') {\n        error.message = 'URL not found or domain does not exist';\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Add polling configuration\nconst POLLING_INTERVAL = 2000; // 2 seconds\nconst MAX_POLLING_TIME = 600000; // 10 minutes\nconst MAX_RETRIES = 3;\n\n// Add request tracking\nconst activeRequests = new Map();\n\n// Helper function to poll for results\nasync function pollForResults(requestId, startTime = Date.now()) {\n  if (Date.now() - startTime > MAX_POLLING_TIME) {\n    throw new Error('Request timed out after 10 minutes');\n  }\n  \n  try {\n    // Log the polling attempt\n    console.log('Polling for results:', {\n      taskId: requestId,\n      endpoint: `/task_status/${requestId}`,\n      elapsed: Date.now() - startTime,\n      baseURL\n    });\n\n    // Use the correct endpoint structure with explicit baseURL\n    const response = await api.get(`/task_status/${requestId}`, {\n      timeout: 30000, // 30 second timeout for status checks\n      validateStatus: function (status) {\n        return status < 500; // Accept any status less than 500\n      }\n    });\n    \n    // Log the response\n    console.log('Status check response:', {\n      taskId: requestId,\n      status: response.status,\n      data: response.data,\n      headers: response.headers\n    });\n    \n    // Add more detailed status handling\n    if (response.status === 404) {\n      // If we get a 404, the task might not be ready yet\n      console.log('Task not ready yet, retrying...', {\n        taskId: requestId,\n        elapsed: Date.now() - startTime,\n        endpoint: `/task_status/${requestId}`\n      });\n      await new Promise(resolve => setTimeout(resolve, POLLING_INTERVAL));\n      return pollForResults(requestId, startTime);\n    }\n    \n    if (response.data.status === 'completed') {\n      console.log('Task completed:', {\n        taskId: requestId,\n        elapsed: Date.now() - startTime,\n        citations: response.data.citations?.length || 0\n      });\n      return response.data;\n    } else if (response.data.status === 'failed') {\n      console.error('Task failed:', {\n        taskId: requestId,\n        error: response.data.error,\n        elapsed: Date.now() - startTime\n      });\n      throw new Error(response.data.error || 'Request failed');\n    } else if (response.data.status === 'processing' || response.data.status === 'queued' || response.data.status === 'pending') {\n      // Log processing status for debugging\n      console.log('Processing status:', {\n        taskId: requestId,\n        status: response.data.status,\n        progress: response.data.progress,\n        message: response.data.message,\n        queuePosition: response.data.queue_position,\n        estimatedWaitTime: response.data.estimated_wait_time,\n        citations: response.data.citations?.length || 0\n      });\n      \n      // Continue polling\n      await new Promise(resolve => setTimeout(resolve, POLLING_INTERVAL));\n      return pollForResults(requestId, startTime);\n    } else {\n      // Handle unknown status\n      console.warn('Unknown status received:', {\n        taskId: requestId,\n        status: response.data.status,\n        data: response.data\n      });\n      await new Promise(resolve => setTimeout(resolve, POLLING_INTERVAL));\n      return pollForResults(requestId, startTime);\n    }\n  } catch (error) {\n    // Enhanced error handling with detailed logging\n    if (error.response) {\n      if (error.response.status === 404) {\n        console.log('Status endpoint not found, retrying...', {\n          taskId: requestId,\n          elapsed: Date.now() - startTime,\n          endpoint: `/task_status/${requestId}`,\n          baseURL,\n          response: error.response.data\n        });\n        await new Promise(resolve => setTimeout(resolve, POLLING_INTERVAL));\n        return pollForResults(requestId, startTime);\n      } else {\n        console.error('Status check failed:', {\n          taskId: requestId,\n          status: error.response.status,\n          data: error.response.data,\n          headers: error.response.headers,\n          endpoint: `/task_status/${requestId}`,\n          baseURL\n        });\n        throw new Error(`Status check failed: ${error.response.status} ${error.response.statusText}`);\n      }\n    } else if (error.request) {\n      console.error('No response received for status check:', {\n        taskId: requestId,\n        message: error.message,\n        endpoint: `/task_status/${requestId}`,\n        baseURL\n      });\n      throw new Error('No response received from server');\n    } else {\n      console.error('Error checking status:', {\n        taskId: requestId,\n        message: error.message,\n        endpoint: `/task_status/${requestId}`,\n        baseURL\n      });\n      throw error;\n    }\n  }\n}\n\n// Update the analyze function to use the consolidated /analyze endpoint\nexport const analyze = async (requestData) => {\n    // Set appropriate timeout based on input type\n    const timeout = requestData.type === 'url' ? 300000 : 120000; // 5 minutes for URLs, 2 minutes for others\n    \n    try {\n        // Log the analyze request\n        console.log('Starting analysis:', {\n            type: requestData.type,\n            isFormData: requestData instanceof FormData,\n            baseURL,\n            endpoint: '/analyze'\n        });\n        \n        // If it's FormData, log its contents\n        if (requestData instanceof FormData) {\n            console.log('FormData contents:');\n            for (let [key, value] of requestData.entries()) {\n                if (value instanceof File) {\n                    console.log(`- ${key}: File(${value.name}, ${value.size} bytes, ${value.type})`);\n                } else {\n                    console.log(`- ${key}: ${value}`);\n                }\n            }\n        }\n\n        // If requestData is FormData (file upload), don't set Content-Type header\n        // Otherwise, use application/json for other requests\n        const headers = requestData instanceof FormData ? {} : {\n            'Content-Type': 'application/json'\n        };\n        \n        const response = await api.post('/analyze', requestData, {\n            timeout,\n            headers,\n            validateStatus: function (status) {\n                return status < 500; // Accept any status less than 500\n            }\n        });\n        \n        // Log the analyze response\n        console.log('Analysis response:', {\n            status: response.status,\n            data: response.data,\n            headers: response.headers\n        });\n        \n        // Log the actual response data structure\n        console.log('Response data details:', {\n            hasCitations: !!response.data.citations,\n            citationsLength: response.data.citations ? response.data.citations.length : 0,\n            hasValidationResults: !!response.data.validation_results,\n            validationResultsLength: response.data.validation_results ? response.data.validation_results.length : 0,\n            hasError: !!response.data.error,\n            error: response.data.error,\n            status: response.data.status,\n            message: response.data.message\n        });\n        \n        // If we get a processing status with task_id, start polling\n        if (response.data.status === 'processing' && response.data.task_id) {\n            console.log('Starting polling for task:', {\n                taskId: response.data.task_id,\n                status: response.data.status,\n                message: response.data.message\n            });\n            return await pollForResults(response.data.task_id);\n        }\n        \n        return response.data;\n    } catch (error) {\n        console.error('Error in analyze request:', {\n            error,\n            type: requestData.type,\n            isFormData: requestData instanceof FormData,\n            baseURL,\n            endpoint: '/analyze'\n        });\n        throw error;\n    }\n};\n\n// Add function to cancel active requests\nexport function cancelRequest(requestId) {\n  if (activeRequests.has(requestId)) {\n    activeRequests.delete(requestId);\n    return api.post(`/analyze/cancel/${requestId}`);\n  }\n  return Promise.resolve();\n}\n\n// Add function to get request status\nexport function getRequestStatus(requestId) {\n  return activeRequests.get(requestId) || null;\n}\n\n// Add function to get all active requests\nexport function getActiveRequests() {\n  return Array.from(activeRequests.entries()).map(([id, data]) => ({\n    id,\n    ...data\n  }));\n}\n\nexport default api;\n","import { ref, computed } from 'vue'\r\n\r\n// Global state for recent inputs\r\nconst recentInputs = ref([])\r\nconst isInitialized = ref(false)\r\n\r\n// Storage key with user-specific prefix\r\nconst getStorageKey = () => {\r\n  // For now, use a generic key. In a real app, you'd use the user's ID\r\n  return 'casestrainer_recent_inputs'\r\n}\r\n\r\n// Initialize recent inputs from localStorage\r\nconst initializeRecentInputs = () => {\r\n  if (isInitialized.value) return\r\n  \r\n  try {\r\n    const saved = localStorage.getItem(getStorageKey())\r\n    if (saved) {\r\n      const parsed = JSON.parse(saved)\r\n      // Validate the structure and filter out invalid entries\r\n      recentInputs.value = parsed\r\n        .filter(input => input && input.tab && input.timestamp)\r\n        .slice(0, 10) // Keep last 10 instead of 5\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading recent inputs:', error)\r\n    // Clear corrupted data\r\n    localStorage.removeItem(getStorageKey())\r\n  }\r\n  \r\n  isInitialized.value = true\r\n}\r\n\r\n// Save recent inputs to localStorage\r\nconst saveRecentInputs = () => {\r\n  try {\r\n    localStorage.setItem(getStorageKey(), JSON.stringify(recentInputs.value))\r\n  } catch (error) {\r\n    console.error('Error saving recent inputs:', error)\r\n  }\r\n}\r\n\r\n// Add a new input to recent inputs\r\nconst addRecentInput = (inputData) => {\r\n  // Ensure we have the required fields\r\n  if (!inputData || !inputData.tab || !inputData.timestamp) {\r\n    console.warn('Invalid input data:', inputData)\r\n    return\r\n  }\r\n  \r\n  // Remove duplicates based on content\r\n  recentInputs.value = recentInputs.value.filter(input => {\r\n    if (input.tab !== inputData.tab) return true\r\n    \r\n    switch (inputData.tab) {\r\n      case 'paste':\r\n        return input.text !== inputData.text\r\n      case 'url':\r\n        return input.url !== inputData.url\r\n      case 'file':\r\n        return input.fileName !== inputData.fileName\r\n      default:\r\n        return true\r\n    }\r\n  })\r\n  \r\n  // Add to beginning\r\n  recentInputs.value.unshift(inputData)\r\n  \r\n  // Keep only last 10\r\n  recentInputs.value = recentInputs.value.slice(0, 10)\r\n  \r\n  saveRecentInputs()\r\n}\r\n\r\n// Remove a recent input by index\r\nconst removeRecentInput = (index) => {\r\n  if (index >= 0 && index < recentInputs.value.length) {\r\n    recentInputs.value.splice(index, 1)\r\n    saveRecentInputs()\r\n  }\r\n}\r\n\r\n// Clear all recent inputs\r\nconst clearRecentInputs = () => {\r\n  recentInputs.value = []\r\n  saveRecentInputs()\r\n}\r\n\r\n// Get recent inputs for a specific tab\r\nconst getRecentInputsByTab = (tab) => {\r\n  return recentInputs.value.filter(input => input.tab === tab)\r\n}\r\n\r\n// Get input icon class\r\nconst getInputIcon = (tab) => {\r\n  switch (tab) {\r\n    case 'paste': return 'bi bi-clipboard-text'\r\n    case 'file': return 'bi bi-file-earmark-text'\r\n    case 'url': return 'bi bi-link-45deg'\r\n    default: return 'bi bi-question-circle'\r\n  }\r\n}\r\n\r\n// Get input title\r\nconst getInputTitle = (input) => {\r\n  switch (input.tab) {\r\n    case 'paste': return 'Text Input'\r\n    case 'file': return `File: ${input.fileName || 'Unknown'}`\r\n    case 'url': return 'URL Input'\r\n    default: return 'Unknown Input'\r\n  }\r\n}\r\n\r\n// Get input preview text\r\nconst getInputPreview = (input) => {\r\n  switch (input.tab) {\r\n    case 'paste': \r\n      return input.text ? input.text.substring(0, 60) + (input.text.length > 60 ? '...' : '') : 'No text'\r\n    case 'file': \r\n      return input.fileName || 'Unknown file'\r\n    case 'url': \r\n      return input.url || 'No URL'\r\n    default: \r\n      return 'Unknown input type'\r\n  }\r\n}\r\n\r\n// Format timestamp\r\nconst formatTimestamp = (timestamp) => {\r\n  try {\r\n    const date = new Date(timestamp)\r\n    const now = new Date()\r\n    const diffMs = now - date\r\n    const diffMins = Math.floor(diffMs / 60000)\r\n    const diffHours = Math.floor(diffMs / 3600000)\r\n    const diffDays = Math.floor(diffMs / 86400000)\r\n    \r\n    if (diffMins < 1) return 'Just now'\r\n    if (diffMins < 60) return `${diffMins}m ago`\r\n    if (diffHours < 24) return `${diffHours}h ago`\r\n    if (diffDays < 7) return `${diffDays}d ago`\r\n    \r\n    return date.toLocaleDateString()\r\n  } catch {\r\n    return 'Unknown time'\r\n  }\r\n}\r\n\r\n// Computed properties\r\nconst hasRecentInputs = computed(() => recentInputs.value.length > 0)\r\nconst recentInputsCount = computed(() => recentInputs.value.length)\r\n\r\nexport function useRecentInputs() {\r\n  // Initialize on first use\r\n  if (!isInitialized.value) {\r\n    initializeRecentInputs()\r\n  }\r\n  \r\n  return {\r\n    // State\r\n    recentInputs: computed(() => recentInputs.value),\r\n    hasRecentInputs,\r\n    recentInputsCount,\r\n    \r\n    // Methods\r\n    addRecentInput,\r\n    removeRecentInput,\r\n    clearRecentInputs,\r\n    getRecentInputsByTab,\r\n    getInputIcon,\r\n    getInputTitle,\r\n    getInputPreview,\r\n    formatTimestamp,\r\n    \r\n    // Utility\r\n    initializeRecentInputs\r\n  }\r\n} ","<template>\r\n  <div v-if=\"hasRecentInputs\" class=\"recent-inputs-sidebar\">\r\n    <div class=\"sidebar-header\">\r\n      <div class=\"sidebar-title\">\r\n        <i class=\"bi bi-clock-history me-2\"></i>\r\n        Recent Inputs\r\n        <span class=\"badge bg-secondary ms-2\">{{ recentInputsCount }}</span>\r\n      </div>\r\n      <button \r\n        @click=\"clearAll\"\r\n        class=\"btn btn-sm btn-outline-secondary\"\r\n        title=\"Clear all recent inputs\"\r\n      >\r\n        <i class=\"bi bi-trash\"></i>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"sidebar-content\">\r\n      <div class=\"recent-inputs-list\">\r\n        <div \r\n          v-for=\"(input, index) in recentInputs\" \r\n          :key=\"`${input.tab}-${input.timestamp}-${index}`\"\r\n          class=\"recent-input-card\"\r\n          @click=\"loadInput(input)\"\r\n        >\r\n          <div class=\"input-card-header\">\r\n            <div class=\"input-type-badge\">\r\n              <i :class=\"getInputIcon(input.tab)\"></i>\r\n              {{ getInputTypeLabel(input.tab) }}\r\n            </div>\r\n            <div class=\"input-time\">\r\n              {{ formatTimestamp(input.timestamp) }}\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"input-card-content\">\r\n            <div class=\"input-title\">{{ getInputTitle(input) }}</div>\r\n            <div class=\"input-preview\">{{ getInputPreview(input) }}</div>\r\n            \r\n            <!-- File-specific warning -->\r\n            <div v-if=\"input.tab === 'file'\" class=\"file-warning\">\r\n              <i class=\"bi bi-exclamation-triangle text-warning me-1\"></i>\r\n              <small>File will need to be re-uploaded</small>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"input-card-actions\">\r\n            <button \r\n              @click.stop=\"removeInput(index)\"\r\n              class=\"btn btn-sm btn-outline-danger\"\r\n              title=\"Remove from history\"\r\n            >\r\n              <i class=\"bi bi-x\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Empty state -->\r\n      <div v-if=\"!hasRecentInputs\" class=\"empty-state\">\r\n        <i class=\"bi bi-clock-history text-muted\"></i>\r\n        <p class=\"text-muted\">No recent inputs</p>\r\n        <small class=\"text-muted\">Your recent uploads and inputs will appear here</small>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\nimport { useRecentInputs } from '@/composables/useRecentInputs'\r\n\r\nconst props = defineProps({\r\n  // Optional: filter by specific tab\r\n  filterTab: {\r\n    type: String,\r\n    default: null\r\n  },\r\n  // Optional: maximum number to show\r\n  maxItems: {\r\n    type: Number,\r\n    default: 10\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['load-input'])\r\n\r\nconst {\r\n  recentInputs,\r\n  hasRecentInputs,\r\n  recentInputsCount,\r\n  removeRecentInput,\r\n  clearRecentInputs,\r\n  getInputIcon,\r\n  getInputTitle,\r\n  getInputPreview,\r\n  formatTimestamp\r\n} = useRecentInputs()\r\n\r\n// Filter inputs if needed\r\nconst filteredInputs = computed(() => {\r\n  let inputs = recentInputs.value\r\n  \r\n  if (props.filterTab) {\r\n    inputs = inputs.filter(input => input.tab === props.filterTab)\r\n  }\r\n  \r\n  return inputs.slice(0, props.maxItems)\r\n})\r\n\r\nconst getInputTypeLabel = (tab) => {\r\n  switch (tab) {\r\n    case 'text': return 'Text'\r\n    case 'file': return 'File'\r\n    case 'url': return 'URL'\r\n    case 'quick': return 'Citation'\r\n    default: return 'Input'\r\n  }\r\n}\r\n\r\nconst loadInput = (input) => {\r\n  // Show warning for files\r\n  if (input.tab === 'file') {\r\n    if (!confirm('This will restore the file name, but you\\'ll need to re-upload the file. Continue?')) {\r\n      return\r\n    }\r\n  }\r\n  \r\n  emit('load-input', input)\r\n}\r\n\r\nconst removeInput = (index) => {\r\n  // Find the actual index in the full array\r\n  const actualIndex = recentInputs.value.findIndex(item => \r\n    item.tab === filteredInputs.value[index].tab &&\r\n    item.timestamp === filteredInputs.value[index].timestamp\r\n  )\r\n  \r\n  if (actualIndex !== -1) {\r\n    removeRecentInput(actualIndex)\r\n  }\r\n}\r\n\r\nconst clearAll = () => {\r\n  if (confirm('Are you sure you want to clear all recent inputs?')) {\r\n    clearRecentInputs()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.recent-inputs-sidebar {\r\n  background: #f8f9fa;\r\n  border: 1px solid #e9ecef;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.sidebar-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  background: #ffffff;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.sidebar-title {\r\n  font-weight: 600;\r\n  color: #495057;\r\n  font-size: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.sidebar-content {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.recent-inputs-list {\r\n  padding: 0.75rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n}\r\n\r\n.recent-input-card {\r\n  background: white;\r\n  border: 1px solid #e9ecef;\r\n  border-radius: 8px;\r\n  padding: 0.75rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  position: relative;\r\n}\r\n\r\n.recent-input-card:hover {\r\n  border-color: #007bff;\r\n  box-shadow: 0 2px 8px rgba(0, 123, 255, 0.15);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.input-card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.input-type-badge {\r\n  background: #e3f2fd;\r\n  color: #1976d2;\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 12px;\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.input-time {\r\n  font-size: 0.7rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.input-card-content {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.input-title {\r\n  font-weight: 600;\r\n  color: #495057;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 0.25rem;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.input-preview {\r\n  font-size: 0.8rem;\r\n  color: #6c757d;\r\n  line-height: 1.4;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.file-warning {\r\n  background: #fff3cd;\r\n  border: 1px solid #ffeaa7;\r\n  border-radius: 4px;\r\n  padding: 0.25rem 0.5rem;\r\n  font-size: 0.7rem;\r\n  color: #856404;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.input-card-actions {\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  right: 0.5rem;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.recent-input-card:hover .input-card-actions {\r\n  opacity: 1;\r\n}\r\n\r\n.input-card-actions .btn {\r\n  padding: 0.25rem 0.5rem;\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 2rem 1rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.empty-state i {\r\n  font-size: 2rem;\r\n  margin-bottom: 0.5rem;\r\n  display: block;\r\n}\r\n\r\n.empty-state p {\r\n  margin: 0.5rem 0;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Scrollbar styling */\r\n.sidebar-content::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.sidebar-content::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 3px;\r\n}\r\n\r\n.sidebar-content::-webkit-scrollbar-thumb {\r\n  background: #c1c1c1;\r\n  border-radius: 3px;\r\n}\r\n\r\n.sidebar-content::-webkit-scrollbar-thumb:hover {\r\n  background: #a8a8a8;\r\n}\r\n\r\n/* Responsive design */\r\n@media (max-width: 768px) {\r\n  .recent-inputs-sidebar {\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .sidebar-content {\r\n    max-height: 300px;\r\n  }\r\n  \r\n  .input-card-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 0.25rem;\r\n  }\r\n  \r\n  .input-time {\r\n    font-size: 0.65rem;\r\n  }\r\n}\r\n</style> "],"names":["recentInputs","hasRecentInputs","recentInputsCount","removeRecentInput","clearRecentInputs","getInputIcon","getInputTitle","getInputPreview","formatTimestamp","_unref","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","_Fragment","_renderList","_normalizeClass","_createTextVNode","_withModifiers"],"mappings":";;AAIA,MAAM,UAAU;AAGhB,MAAM,MAAM,MAAM,OAAO;AAAA,EACvB;AAAA,EACA,SAAS;AAAA;AAAA;AAEX,CAAC;AAaD,IAAI,aAAa,QAAQ,IAAI,CAAA,WAAU;AAErC,MAAI,OAAO,QAAQ,cAAc,OAAO,QAAQ,OAAO,KAAK,SAAS,OAAO;AAC1E,WAAO,UAAU;AACjB,WAAO,aAAa;AACpB,WAAO,aAAa;AAAA,EACtB,OAAO;AACL,WAAO,UAAU;AACjB,WAAO,aAAa;AACpB,WAAO,aAAa;AAAA,EACtB;AACA,SAAO;AACT,CAAC;AAGD,IAAI,aAAa,SAAS;AAAA,EACxB,CAAA,aAAY;AAAA,EACZ,OAAM,UAAS;AACb,UAAM,SAAS,MAAM;AAGrB,QAAI,CAAC,UAAU,CAAC,OAAO,cACrB,OAAO,cAAc,OAAO,cAC5B,EAAE,MAAM,SAAS,kBAAkB,MAAM,QAAQ,SAAS,SAAS,KAAK,MAAM,QAAQ,SAAS,eAAe,IAAI;AAClH,aAAO,QAAQ,OAAO,KAAK;AAAA,IAC7B;AAGA,WAAO,cAAc;AAGrB,UAAM,QAAQ,KAAK,IAAI,MAAO,KAAK,IAAI,GAAG,OAAO,UAAU,GAAG,GAAK;AAGnE,YAAQ,IAAI,uBAAuB,OAAO,GAAG,aAAa,OAAO,UAAU,IAAI,OAAO,UAAU,WAAW,KAAK,UAAU;AAG1H,UAAM,IAAI,QAAQ,CAAA,YAAW,WAAW,SAAS,KAAK,CAAC;AAGvD,WAAO,IAAI,MAAM;AAAA,EACnB;AACF;AAGA,IAAI,aAAa,QAAQ;AAAA,EACvB,CAAC,WAAW;AAEV,WAAO,QAAQ,WAAW,IAAkD;AAG5E,QAAI,EAAE,OAAO,gBAAgB,WAAW;AACtC,aAAO,QAAQ,cAAc,IAAI;AAAA,IACnC;AAaA,WAAO;AAAA,EACT;AAAA,EACA,CAAC,UAAU;AACT,YAAQ,MAAM,sBAAsB,KAAK;AACzC,WAAO,QAAQ,OAAO,KAAK;AAAA,EAC7B;AACF;AAGA,IAAI,aAAa,SAAS;AAAA,EACxB,CAAC,aAAa;AASZ,WAAO;AAAA,EACT;AAAA,EACA,CAAC,UAAU;;AAET,QAAI,MAAM,UAAU;AAClB,cAAQ,MAAM,uBAAuB;AAAA,QACnC,QAAQ,MAAM,SAAS;AAAA,QACvB,MAAK,WAAM,WAAN,mBAAc;AAAA,QACnB,MAAM,MAAM,SAAS;AAAA,QACrB,SAAS,MAAM,SAAS;AAAA,MAAA,CACzB;AAAA,IACH,WAAW,MAAM,SAAS;AACxB,cAAQ,MAAM,oCAAoC;AAAA,QAChD,MAAK,WAAM,WAAN,mBAAc;AAAA,QACnB,SAAS,MAAM;AAAA,MAAA,CAChB;AAAA,IACH,OAAO;AACL,cAAQ,MAAM,cAAc,MAAM,OAAO;AAAA,IAC3C;AACA,WAAO,QAAQ,OAAO,KAAK;AAAA,EAC7B;AACF;AAGA,IAAI,aAAa,SAAS;AAAA,EACxB,CAAA,aAAY;AAAA,EACZ,CAAA,UAAS;AACP,QAAI,MAAM,UAAU,MAAM,OAAO,QAAQ,cAAc,MAAM,OAAO,QAAQ,MAAM,OAAO,KAAK,SAAS,OAAO;AAE5G,UAAI,MAAM,UAAU;AAClB,gBAAQ,MAAM,SAAS,QAAA;AAAA,UACrB,KAAK;AACH,kBAAM,UAAU;AAChB;AAAA,UACF,KAAK;AACH,kBAAM,UAAU;AAChB;AAAA,UACF,KAAK;AACH,kBAAM,UAAU;AAChB;AAAA,UACF,KAAK;AACH,kBAAM,UAAU;AAChB;AAAA,UACF,KAAK;AACH,kBAAM,UAAU;AAChB;AAAA,UACF;AACE,kBAAM,UAAU,uBAAuB,MAAM,SAAS,MAAM,IAAI,MAAM,SAAS,UAAU;AAAA,QAAA;AAAA,MAE/F,WAAW,MAAM,SAAS,gBAAgB;AACxC,cAAM,UAAU;AAAA,MAClB,WAAW,MAAM,SAAS,gBAAgB;AACxC,cAAM,UAAU;AAAA,MAClB,WAAW,MAAM,SAAS,aAAa;AACrC,cAAM,UAAU;AAAA,MAClB;AAAA,IACF;AACA,WAAO,QAAQ,OAAO,KAAK;AAAA,EAC7B;AACF;AAGA,MAAM,mBAAmB;AACzB,MAAM,mBAAmB;AAOzB,eAAe,eAAe,WAAW,YAAY,KAAK,OAAO;;AAC/D,MAAI,KAAK,QAAQ,YAAY,kBAAkB;AAC7C,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACtD;AAEA,MAAI;AAEF,YAAQ,IAAI,wBAAwB;AAAA,MAClC,QAAQ;AAAA,MACR,UAAU,gBAAgB,SAAS;AAAA,MACnC,SAAS,KAAK,IAAA,IAAQ;AAAA,MACtB;AAAA,IAAA,CACD;AAGD,UAAM,WAAW,MAAM,IAAI,IAAI,gBAAgB,SAAS,IAAI;AAAA,MAC1D,SAAS;AAAA;AAAA,MACT,gBAAgB,SAAU,QAAQ;AAChC,eAAO,SAAS;AAAA,MAClB;AAAA,IAAA,CACD;AAGD,YAAQ,IAAI,0BAA0B;AAAA,MACpC,QAAQ;AAAA,MACR,QAAQ,SAAS;AAAA,MACjB,MAAM,SAAS;AAAA,MACf,SAAS,SAAS;AAAA,IAAA,CACnB;AAGD,QAAI,SAAS,WAAW,KAAK;AAE3B,cAAQ,IAAI,mCAAmC;AAAA,QAC7C,QAAQ;AAAA,QACR,SAAS,KAAK,IAAA,IAAQ;AAAA,QACtB,UAAU,gBAAgB,SAAS;AAAA,MAAA,CACpC;AACD,YAAM,IAAI,QAAQ,CAAA,YAAW,WAAW,SAAS,gBAAgB,CAAC;AAClE,aAAO,eAAe,WAAW,SAAS;AAAA,IAC5C;AAEA,QAAI,SAAS,KAAK,WAAW,aAAa;AACxC,cAAQ,IAAI,mBAAmB;AAAA,QAC7B,QAAQ;AAAA,QACR,SAAS,KAAK,IAAA,IAAQ;AAAA,QACtB,aAAW,cAAS,KAAK,cAAd,mBAAyB,WAAU;AAAA,MAAA,CAC/C;AACD,aAAO,SAAS;AAAA,IAClB,WAAW,SAAS,KAAK,WAAW,UAAU;AAC5C,cAAQ,MAAM,gBAAgB;AAAA,QAC5B,QAAQ;AAAA,QACR,OAAO,SAAS,KAAK;AAAA,QACrB,SAAS,KAAK,QAAQ;AAAA,MAAA,CACvB;AACD,YAAM,IAAI,MAAM,SAAS,KAAK,SAAS,gBAAgB;AAAA,IACzD,WAAW,SAAS,KAAK,WAAW,gBAAgB,SAAS,KAAK,WAAW,YAAY,SAAS,KAAK,WAAW,WAAW;AAE3H,cAAQ,IAAI,sBAAsB;AAAA,QAChC,QAAQ;AAAA,QACR,QAAQ,SAAS,KAAK;AAAA,QACtB,UAAU,SAAS,KAAK;AAAA,QACxB,SAAS,SAAS,KAAK;AAAA,QACvB,eAAe,SAAS,KAAK;AAAA,QAC7B,mBAAmB,SAAS,KAAK;AAAA,QACjC,aAAW,cAAS,KAAK,cAAd,mBAAyB,WAAU;AAAA,MAAA,CAC/C;AAGD,YAAM,IAAI,QAAQ,CAAA,YAAW,WAAW,SAAS,gBAAgB,CAAC;AAClE,aAAO,eAAe,WAAW,SAAS;AAAA,IAC5C,OAAO;AAEL,cAAQ,KAAK,4BAA4B;AAAA,QACvC,QAAQ;AAAA,QACR,QAAQ,SAAS,KAAK;AAAA,QACtB,MAAM,SAAS;AAAA,MAAA,CAChB;AACD,YAAM,IAAI,QAAQ,CAAA,YAAW,WAAW,SAAS,gBAAgB,CAAC;AAClE,aAAO,eAAe,WAAW,SAAS;AAAA,IAC5C;AAAA,EACF,SAAS,OAAO;AAEd,QAAI,MAAM,UAAU;AAClB,UAAI,MAAM,SAAS,WAAW,KAAK;AACjC,gBAAQ,IAAI,0CAA0C;AAAA,UACpD,QAAQ;AAAA,UACR,SAAS,KAAK,IAAA,IAAQ;AAAA,UACtB,UAAU,gBAAgB,SAAS;AAAA,UACnC;AAAA,UACA,UAAU,MAAM,SAAS;AAAA,QAAA,CAC1B;AACD,cAAM,IAAI,QAAQ,CAAA,YAAW,WAAW,SAAS,gBAAgB,CAAC;AAClE,eAAO,eAAe,WAAW,SAAS;AAAA,MAC5C,OAAO;AACL,gBAAQ,MAAM,wBAAwB;AAAA,UACpC,QAAQ;AAAA,UACR,QAAQ,MAAM,SAAS;AAAA,UACvB,MAAM,MAAM,SAAS;AAAA,UACrB,SAAS,MAAM,SAAS;AAAA,UACxB,UAAU,gBAAgB,SAAS;AAAA,UACnC;AAAA,QAAA,CACD;AACD,cAAM,IAAI,MAAM,wBAAwB,MAAM,SAAS,MAAM,IAAI,MAAM,SAAS,UAAU,EAAE;AAAA,MAC9F;AAAA,IACF,WAAW,MAAM,SAAS;AACxB,cAAQ,MAAM,0CAA0C;AAAA,QACtD,QAAQ;AAAA,QACR,SAAS,MAAM;AAAA,QACf,UAAU,gBAAgB,SAAS;AAAA,QACnC;AAAA,MAAA,CACD;AACD,YAAM,IAAI,MAAM,kCAAkC;AAAA,IACpD,OAAO;AACL,cAAQ,MAAM,0BAA0B;AAAA,QACtC,QAAQ;AAAA,QACR,SAAS,MAAM;AAAA,QACf,UAAU,gBAAgB,SAAS;AAAA,QACnC;AAAA,MAAA,CACD;AACD,YAAM;AAAA,IACR;AAAA,EACF;AACF;AAGO,MAAM,UAAU,OAAO,gBAAgB;AAE1C,QAAM,UAAU,YAAY,SAAS,QAAQ,MAAS;AAEtD,MAAI;AAEA,YAAQ,IAAI,sBAAsB;AAAA,MAC9B,MAAM,YAAY;AAAA,MAClB,YAAY,uBAAuB;AAAA,MACnC;AAAA,MACA,UAAU;AAAA,IAAA,CACb;AAGD,QAAI,uBAAuB,UAAU;AACjC,cAAQ,IAAI,oBAAoB;AAChC,eAAS,CAAC,KAAK,KAAK,KAAK,YAAY,WAAW;AAC5C,YAAI,iBAAiB,MAAM;AACvB,kBAAQ,IAAI,KAAK,GAAG,UAAU,MAAM,IAAI,KAAK,MAAM,IAAI,WAAW,MAAM,IAAI,GAAG;AAAA,QACnF,OAAO;AACH,kBAAQ,IAAI,KAAK,GAAG,KAAK,KAAK,EAAE;AAAA,QACpC;AAAA,MACJ;AAAA,IACJ;AAIA,UAAM,UAAU,uBAAuB,WAAW,KAAK;AAAA,MACnD,gBAAgB;AAAA,IAAA;AAGpB,UAAM,WAAW,MAAM,IAAI,KAAK,YAAY,aAAa;AAAA,MACrD;AAAA,MACA;AAAA,MACA,gBAAgB,SAAU,QAAQ;AAC9B,eAAO,SAAS;AAAA,MACpB;AAAA,IAAA,CACH;AAGD,YAAQ,IAAI,sBAAsB;AAAA,MAC9B,QAAQ,SAAS;AAAA,MACjB,MAAM,SAAS;AAAA,MACf,SAAS,SAAS;AAAA,IAAA,CACrB;AAGD,YAAQ,IAAI,0BAA0B;AAAA,MAClC,cAAc,CAAC,CAAC,SAAS,KAAK;AAAA,MAC9B,iBAAiB,SAAS,KAAK,YAAY,SAAS,KAAK,UAAU,SAAS;AAAA,MAC5E,sBAAsB,CAAC,CAAC,SAAS,KAAK;AAAA,MACtC,yBAAyB,SAAS,KAAK,qBAAqB,SAAS,KAAK,mBAAmB,SAAS;AAAA,MACtG,UAAU,CAAC,CAAC,SAAS,KAAK;AAAA,MAC1B,OAAO,SAAS,KAAK;AAAA,MACrB,QAAQ,SAAS,KAAK;AAAA,MACtB,SAAS,SAAS,KAAK;AAAA,IAAA,CAC1B;AAGD,QAAI,SAAS,KAAK,WAAW,gBAAgB,SAAS,KAAK,SAAS;AAChE,cAAQ,IAAI,8BAA8B;AAAA,QACtC,QAAQ,SAAS,KAAK;AAAA,QACtB,QAAQ,SAAS,KAAK;AAAA,QACtB,SAAS,SAAS,KAAK;AAAA,MAAA,CAC1B;AACD,aAAO,MAAM,eAAe,SAAS,KAAK,OAAO;AAAA,IACrD;AAEA,WAAO,SAAS;AAAA,EACpB,SAAS,OAAO;AACZ,YAAQ,MAAM,6BAA6B;AAAA,MACvC;AAAA,MACA,MAAM,YAAY;AAAA,MAClB,YAAY,uBAAuB;AAAA,MACnC;AAAA,MACA,UAAU;AAAA,IAAA,CACb;AACD,UAAM;AAAA,EACV;AACJ;AC7XA,MAAM,eAAe,IAAI,EAAE;AAC3B,MAAM,gBAAgB,IAAI,KAAK;AAG/B,MAAM,gBAAgB,MAAM;AAE1B,SAAO;AACT;AAGA,MAAM,yBAAyB,MAAM;AACnC,MAAI,cAAc,MAAO;AAEzB,MAAI;AACF,UAAM,QAAQ,aAAa,QAAQ,cAAa,CAAE;AAClD,QAAI,OAAO;AACT,YAAM,SAAS,KAAK,MAAM,KAAK;AAE/B,mBAAa,QAAQ,OAClB,OAAO,WAAS,SAAS,MAAM,OAAO,MAAM,SAAS,EACrD,MAAM,GAAG,EAAE;AAAA,IAChB;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,gCAAgC,KAAK;AAEnD,iBAAa,WAAW,eAAe;AAAA,EACzC;AAEA,gBAAc,QAAQ;AACxB;AAGA,MAAM,mBAAmB,MAAM;AAC7B,MAAI;AACF,iBAAa,QAAQ,cAAa,GAAI,KAAK,UAAU,aAAa,KAAK,CAAC;AAAA,EAC1E,SAAS,OAAO;AACd,YAAQ,MAAM,+BAA+B,KAAK;AAAA,EACpD;AACF;AAGA,MAAM,iBAAiB,CAAC,cAAc;AAEpC,MAAI,CAAC,aAAa,CAAC,UAAU,OAAO,CAAC,UAAU,WAAW;AACxD,YAAQ,KAAK,uBAAuB,SAAS;AAC7C;AAAA,EACF;AAGA,eAAa,QAAQ,aAAa,MAAM,OAAO,WAAS;AACtD,QAAI,MAAM,QAAQ,UAAU,IAAK,QAAO;AAExC,YAAQ,UAAU,KAAG;AAAA,MACnB,KAAK;AACH,eAAO,MAAM,SAAS,UAAU;AAAA,MAClC,KAAK;AACH,eAAO,MAAM,QAAQ,UAAU;AAAA,MACjC,KAAK;AACH,eAAO,MAAM,aAAa,UAAU;AAAA,MACtC;AACE,eAAO;AAAA,IACf;AAAA,EACE,CAAC;AAGD,eAAa,MAAM,QAAQ,SAAS;AAGpC,eAAa,QAAQ,aAAa,MAAM,MAAM,GAAG,EAAE;AAEnD,mBAAgB;AAClB;AAGA,MAAM,oBAAoB,CAAC,UAAU;AACnC,MAAI,SAAS,KAAK,QAAQ,aAAa,MAAM,QAAQ;AACnD,iBAAa,MAAM,OAAO,OAAO,CAAC;AAClC,qBAAgB;AAAA,EAClB;AACF;AAGA,MAAM,oBAAoB,MAAM;AAC9B,eAAa,QAAQ,CAAA;AACrB,mBAAgB;AAClB;AAGA,MAAM,uBAAuB,CAAC,QAAQ;AACpC,SAAO,aAAa,MAAM,OAAO,WAAS,MAAM,QAAQ,GAAG;AAC7D;AAGA,MAAM,eAAe,CAAC,QAAQ;AAC5B,UAAQ,KAAG;AAAA,IACT,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAO,aAAO;AAAA,IACnB;AAAS,aAAO;AAAA,EACpB;AACA;AAGA,MAAM,gBAAgB,CAAC,UAAU;AAC/B,UAAQ,MAAM,KAAG;AAAA,IACf,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAQ,aAAO,SAAS,MAAM,YAAY,SAAS;AAAA,IACxD,KAAK;AAAO,aAAO;AAAA,IACnB;AAAS,aAAO;AAAA,EACpB;AACA;AAGA,MAAM,kBAAkB,CAAC,UAAU;AACjC,UAAQ,MAAM,KAAG;AAAA,IACf,KAAK;AACH,aAAO,MAAM,OAAO,MAAM,KAAK,UAAU,GAAG,EAAE,KAAK,MAAM,KAAK,SAAS,KAAK,QAAQ,MAAM;AAAA,IAC5F,KAAK;AACH,aAAO,MAAM,YAAY;AAAA,IAC3B,KAAK;AACH,aAAO,MAAM,OAAO;AAAA,IACtB;AACE,aAAO;AAAA,EACb;AACA;AAGA,MAAM,kBAAkB,CAAC,cAAc;AACrC,MAAI;AACF,UAAM,OAAO,IAAI,KAAK,SAAS;AAC/B,UAAM,MAAM,oBAAI,KAAI;AACpB,UAAM,SAAS,MAAM;AACrB,UAAM,WAAW,KAAK,MAAM,SAAS,GAAK;AAC1C,UAAM,YAAY,KAAK,MAAM,SAAS,IAAO;AAC7C,UAAM,WAAW,KAAK,MAAM,SAAS,KAAQ;AAE7C,QAAI,WAAW,EAAG,QAAO;AACzB,QAAI,WAAW,GAAI,QAAO,GAAG,QAAQ;AACrC,QAAI,YAAY,GAAI,QAAO,GAAG,SAAS;AACvC,QAAI,WAAW,EAAG,QAAO,GAAG,QAAQ;AAEpC,WAAO,KAAK,mBAAkB;AAAA,EAChC,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AAGA,MAAM,kBAAkB,SAAS,MAAM,aAAa,MAAM,SAAS,CAAC;AACpE,MAAM,oBAAoB,SAAS,MAAM,aAAa,MAAM,MAAM;AAE3D,SAAS,kBAAkB;AAEhC,MAAI,CAAC,cAAc,OAAO;AACxB,2BAAsB;AAAA,EACxB;AAEA,SAAO;AAAA;AAAA,IAEL,cAAc,SAAS,MAAM,aAAa,KAAK;AAAA,IAC/C;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,EACJ;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA,UAAM,QAAQ;AAad,UAAM,OAAO;AAEb,UAAM;AAAA,MACJ,cAAAA;AAAA,MACA,iBAAAC;AAAA,MACA,mBAAAC;AAAA,MACA,mBAAAC;AAAA,MACA,mBAAAC;AAAA,MACA,cAAAC;AAAA,MACA,eAAAC;AAAA,MACA,iBAAAC;AAAA,MACA,iBAAAC;AAAA,IACF,IAAI,gBAAe;AAGnB,UAAM,iBAAiB,SAAS,MAAM;AACpC,UAAI,SAASR,cAAa;AAE1B,UAAI,MAAM,WAAW;AACnB,iBAAS,OAAO,OAAO,WAAS,MAAM,QAAQ,MAAM,SAAS;AAAA,MAC/D;AAEA,aAAO,OAAO,MAAM,GAAG,MAAM,QAAQ;AAAA,IACvC,CAAC;AAED,UAAM,oBAAoB,CAAC,QAAQ;AACjC,cAAQ,KAAG;AAAA,QACT,KAAK;AAAQ,iBAAO;AAAA,QACpB,KAAK;AAAQ,iBAAO;AAAA,QACpB,KAAK;AAAO,iBAAO;AAAA,QACnB,KAAK;AAAS,iBAAO;AAAA,QACrB;AAAS,iBAAO;AAAA,MACpB;AAAA,IACA;AAEA,UAAM,YAAY,CAAC,UAAU;AAE3B,UAAI,MAAM,QAAQ,QAAQ;AACxB,YAAI,CAAC,QAAQ,mFAAoF,GAAG;AAClG;AAAA,QACF;AAAA,MACF;AAEA,WAAK,cAAc,KAAK;AAAA,IAC1B;AAEA,UAAM,cAAc,CAAC,UAAU;AAE7B,YAAM,cAAcA,cAAa,MAAM;AAAA,QAAU,UAC/C,KAAK,QAAQ,eAAe,MAAM,KAAK,EAAE,OACzC,KAAK,cAAc,eAAe,MAAM,KAAK,EAAE;AAAA,MACnD;AAEE,UAAI,gBAAgB,IAAI;AACtB,QAAAG,mBAAkB,WAAW;AAAA,MAC/B;AAAA,IACF;AAEA,UAAM,WAAW,MAAM;AACrB,UAAI,QAAQ,mDAAmD,GAAG;AAChE,QAAAC,mBAAiB;AAAA,MACnB;AAAA,IACF;;aAlJaK,MAAAR,gBAAA,KAAXS,aAAAC,mBAgEM,OAhEN,YAgEM;AAAA,QA/DJC,gBAaM,OAbN,YAaM;AAAA,UAZJA,gBAIM,OAJN,YAIM;AAAA,sCAHJA,gBAAwC,KAAA,EAArC,OAAM,2BAA0B,GAAA,MAAA,EAAA;AAAA,sDAAK,iBAExC;AAAA,YAAAA,gBAAoE,QAApE,YAAoEC,gBAA3BJ,MAAAP,kBAAA,CAAiB,GAAA,CAAA;AAAA;UAE5DU,gBAMS,UAAA;AAAA,YALN,SAAO;AAAA,YACR,OAAM;AAAA,YACN,OAAM;AAAA;YAENA,gBAA2B,KAAA,EAAxB,OAAM,cAAa,GAAA,MAAA,EAAA;AAAA;;QAI1BA,gBA+CM,OA/CN,YA+CM;AAAA,UA9CJA,gBAsCM,OAtCN,YAsCM;AAAA,aArCJF,UAAA,IAAA,GAAAC,mBAoCMG,UAAA,MAAAC,WAnCqBN,MAAAT,aAAA,GAAY,CAA7B,OAAO,UAAK;kCADtBW,mBAoCM,OAAA;AAAA,gBAlCH,KAAG,GAAK,MAAM,GAAG,IAAI,MAAM,SAAS,IAAI,KAAK;AAAA,gBAC9C,OAAM;AAAA,gBACL,SAAK,YAAE,UAAU,KAAK;AAAA;gBAEvBC,gBAQM,OARN,YAQM;AAAA,kBAPJA,gBAGM,OAHN,YAGM;AAAA,oBAFJA,gBAAwC,KAAA;AAAA,sBAApC,OAAKI,eAAEP,MAAAJ,aAAA,EAAa,MAAM,GAAG,CAAA;AAAA;oBAAOY,gBAAA,MACxCJ,gBAAG,kBAAkB,MAAM,GAAG,CAAA,GAAA,CAAA;AAAA;kBAEhCD,gBAEM,OAFN,aAEMC,gBADDJ,wBAAgB,MAAM,SAAS,CAAA,GAAA,CAAA;AAAA;gBAItCG,gBASM,OATN,aASM;AAAA,kBARJA,gBAAyD,OAAzD,aAAyDC,gBAA7BJ,MAAAH,cAAA,EAAc,KAAK,CAAA,GAAA,CAAA;AAAA,kBAC/CM,gBAA6D,OAA7D,aAA6DC,gBAA/BJ,MAAAF,gBAAA,EAAgB,KAAK,CAAA,GAAA,CAAA;AAAA,kBAGxC,MAAM,QAAG,UAApBG,UAAA,GAAAC,mBAGM,OAHN,aAGM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA;AAAA,oBAFJC,gBAA4D,KAAA,EAAzD,OAAM,+CAA8C,GAAA,MAAA,EAAA;AAAA,oBACvDA,gBAA+C,eAAxC,oCAAgC,EAAA;AAAA;;gBAI3CA,gBAQM,OARN,aAQM;AAAA,kBAPJA,gBAMS,UAAA;AAAA,oBALN,SAAKM,cAAA,YAAO,YAAY,KAAK,GAAA,CAAA,MAAA,CAAA;AAAA,oBAC9B,OAAM;AAAA,oBACN,OAAM;AAAA;oBAENN,gBAAuB,KAAA,EAApB,OAAM,UAAS,GAAA,MAAA,EAAA;AAAA;;;;;WAOdH,MAAAR,gBAAA,KAAZS,UAAA,GAAAC,mBAIM,OAJN,aAIM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA;AAAA,YAHJC,gBAA8C,KAAA,EAA3C,OAAM,iCAAgC,GAAA,MAAA,EAAA;AAAA,YACzCA,gBAA0C,KAAA,EAAvC,OAAM,aAAY,GAAC,oBAAgB,EAAA;AAAA,YACtCA,gBAAiF,SAAA,EAA1E,OAAM,aAAY,GAAC,mDAA+C,EAAA;AAAA;;;;;;;"}