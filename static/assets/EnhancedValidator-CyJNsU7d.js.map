{"version":3,"file":"EnhancedValidator-CyJNsU7d.js","sources":["../../src/composables/useApi.js","../../src/composables/useLoadingState.js","../../src/composables/useProcessingTime.js","../../src/components/CitationResults.vue","../../src/components/UnifiedInput.vue","../../src/components/Toast.vue","../../src/components/SkeletonLoader.vue","../../src/views/EnhancedValidator.vue"],"sourcesContent":["import { ref, onUnmounted } from 'vue';\nimport { createLoader } from '@/utils/loading';\n\n/**\n * Composable for making API calls with loading and error states\n * @param {Object} options - Options for the API call\n * @param {string} [options.loadingMessage] - Loading message to show during the request\n * @param {boolean} [options.showLoading=true] - Whether to show loading state\n * @param {Function} [options.onSuccess] - Callback for successful response\n * @param {Function} [options.onError] - Callback for error response\n * @param {Function} [options.onFinally] - Callback after request completes (success or error)\n * @returns {Object} API call utilities\n */\nexport function useApi(options = {}) {\n  const {\n    loadingMessage = 'Loading...',\n    showLoading = true,\n    onSuccess,\n    onError,\n    onFinally,\n  } = options;\n  \n  const data = ref(null);\n  const error = ref(null);\n  const isLoading = ref(false);\n  const status = ref(null);\n  let loader = null;\n  let controller = null;\n  \n  // Create a unique ID for this API call\n  const callId = `api_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  \n  // Cleanup on component unmount\n  onUnmounted(() => {\n    if (controller) {\n      controller.abort();\n    }\n    if (loader) {\n      loader.remove();\n    }\n  });\n  \n  /**\n   * Execute an API call\n   * @param {Function} apiCall - Function that returns a promise (usually an axios call)\n   * @param {Object} callOptions - Options for this specific call\n   * @returns {Promise} The API call promise\n   */\n  async function execute(apiCall, callOptions = {}) {\n    const {\n      message = loadingMessage,\n      showLoader = showLoading,\n      signal,\n      ...requestConfig\n    } = { ...options, ...callOptions };\n    \n    // Reset state\n    error.value = null;\n    status.value = null;\n    data.value = null;\n    \n    // Set up loading state\n    if (showLoader) {\n      loader = createLoader(callId, { message });\n    }\n    \n    isLoading.value = true;\n    \n    // Create abort controller for this request\n    if (typeof AbortController !== 'undefined') {\n      controller = new AbortController();\n      requestConfig.signal = signal || controller.signal;\n    }\n    \n    try {\n      const response = await apiCall({\n        ...requestConfig,\n        signal: requestConfig.signal,\n      });\n      \n      data.value = response.data || response;\n      status.value = response.status || 200;\n      \n      if (onSuccess) {\n        onSuccess(response);\n      }\n      \n      return response;\n    } catch (err) {\n      error.value = err;\n      status.value = err.response?.status || 0;\n      \n      if (onError) {\n        onError(err);\n      }\n      \n      // Re-throw the error so the calling code can handle it if needed\n      throw err;\n    } finally {\n      isLoading.value = false;\n      \n      if (loader) {\n        if (error.value) {\n          loader.error(error.value);\n        } else {\n          loader.complete();\n        }\n        loader = null;\n      }\n      \n      if (onFinally) {\n        onFinally();\n      }\n      \n      controller = null;\n    }\n  }\n  \n  /**\n   * Cancel the current request\n   */\n  function cancel() {\n    if (controller) {\n      controller.abort();\n      controller = null;\n    }\n    \n    if (loader) {\n      loader.remove();\n      loader = null;\n    }\n    \n    isLoading.value = false;\n  }\n  \n  return {\n    execute,\n    cancel,\n    data,\n    error,\n    isLoading,\n    status,\n  };\n}\n\n/**\n * Composable for making GET requests\n * @param {string} url - API endpoint URL\n * @param {Object} options - Options for the API call\n * @returns {Object} API call utilities\n */\nexport function useGet(url, options = {}) {\n  const { execute, ...rest } = useApi(options);\n  \n  async function get(params = {}, config = {}) {\n    return execute(api => api.get(url, { params, ...config }));\n  }\n  \n  return {\n    get,\n    ...rest,\n  };\n}\n\n/**\n * Composable for making POST requests\n * @param {string} url - API endpoint URL\n * @param {Object} options - Options for the API call\n * @returns {Object} API call utilities\n */\nexport function usePost(url, options = {}) {\n  const { execute, ...rest } = useApi(options);\n  \n  async function post(data = {}, config = {}) {\n    return execute(api => api.post(url, data, config));\n  }\n  \n  return {\n    post,\n    ...rest,\n  };\n}\n\n/**\n * Composable for making PUT requests\n * @param {string} url - API endpoint URL\n * @param {Object} options - Options for the API call\n * @returns {Object} API call utilities\n */\nexport function usePut(url, options = {}) {\n  const { execute, ...rest } = useApi(options);\n  \n  async function put(data = {}, config = {}) {\n    return execute(api => api.put(url, data, config));\n  }\n  \n  return {\n    put,\n    ...rest,\n  };\n}\n\n/**\n * Composable for making DELETE requests\n * @param {string} url - API endpoint URL\n * @param {Object} options - Options for the API call\n * @returns {Object} API call utilities\n */\nexport function useDelete(url, options = {}) {\n  const { execute, ...rest } = useApi(options);\n  \n  async function del(config = {}) {\n    return execute(api => api.delete(url, config));\n  }\n  \n  return {\n    delete: del,\n    ...rest,\n  };\n}\n","import { ref, computed } from 'vue';\n\n// Global loading state\nconst isLoading = ref(false);\nconst loadingMessage = ref('Loading...');\n\n/**\n * Composable for managing loading state across the application\n * @returns {Object} Loading state utilities\n */\nexport function useLoadingState() {\n  /**\n   * Set loading state\n   * @param {boolean} value - Whether loading is active\n   * @param {string} [message='Loading...'] - Loading message to display\n   */\n  const setLoading = (value, message = 'Loading...') => {\n    isLoading.value = value;\n    if (message) {\n      loadingMessage.value = message;\n    }\n  };\n\n  /**\n   * Show loading with optional message\n   * @param {string} [message] - Optional loading message\n   */\n  const showLoading = (message) => {\n    setLoading(true, message);\n  };\n\n  /**\n   * Hide loading\n   */\n  const hideLoading = () => {\n    setLoading(false);\n  };\n\n  /**\n   * Toggle loading state\n   * @param {string} [message] - Optional loading message when toggling on\n   */\n  const toggleLoading = (message) => {\n    setLoading(!isLoading.value, message);\n  };\n\n  return {\n    // State\n    isLoading: computed(() => isLoading.value),\n    loadingMessage: computed(() => loadingMessage.value),\n    \n    // Actions\n    setLoading,\n    showLoading,\n    hideLoading,\n    toggleLoading\n  };\n}\n\n// Export the loading state for direct access if needed\nexport const globalLoading = {\n  get isLoading() {\n    return isLoading.value;\n  },\n  get message() {\n    return loadingMessage.value;\n  },\n  set message(value) {\n    loadingMessage.value = value;\n  }\n};\n","import { ref, computed } from 'vue';\r\n\r\nexport function useProcessingTime() {\r\n  const startTime = ref(null);\r\n  const estimatedTotalTime = ref(0);\r\n  const currentStep = ref('');\r\n  const stepProgress = ref(0);\r\n  const processingSteps = ref([]);\r\n  const actualTimes = ref({});\r\n  \r\n  // Add missing reactive variables\r\n  const citationInfo = ref(null);\r\n  const rateLimitInfo = ref(null);\r\n  const timeout = ref(null);\r\n  const processingError = ref(null);\r\n  const canRetry = ref(false);\r\n  \r\n  const elapsedTime = computed(() => {\r\n    if (!startTime.value) return 0;\r\n    return (Date.now() - startTime.value) / 1000;\r\n  });\r\n  \r\n  const remainingTime = computed(() => {\r\n    if (!estimatedTotalTime.value) return 0;\r\n    return Math.max(0, estimatedTotalTime.value - elapsedTime.value);\r\n  });\r\n  \r\n  const totalProgress = computed(() => {\r\n    if (!estimatedTotalTime.value) return 0;\r\n    return Math.min(100, (elapsedTime.value / estimatedTotalTime.value) * 100);\r\n  });\r\n  \r\n  const currentStepProgress = computed(() => {\r\n    if (!processingSteps.value.length) return 0;\r\n    const currentStepIndex = processingSteps.value.findIndex(step => step.step === currentStep.value);\r\n    if (currentStepIndex === -1) return 0;\r\n    \r\n    const step = processingSteps.value[currentStepIndex];\r\n    const stepElapsed = elapsedTime.value - (step.startTime || 0);\r\n    return Math.min(100, (stepElapsed / step.estimated_time) * 100);\r\n  });\r\n  \r\n  const formatTime = (seconds) => {\r\n    if (seconds < 60) {\r\n      return `${Math.round(seconds)}s`;\r\n    }\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = Math.round(seconds % 60);\r\n    return `${minutes}m ${remainingSeconds}s`;\r\n  };\r\n  \r\n  const startProcessing = (timeEstimate) => {\r\n    startTime.value = Date.now();\r\n    if (typeof timeEstimate === 'object' && timeEstimate !== null && Array.isArray(timeEstimate.steps)) {\r\n      estimatedTotalTime.value = timeEstimate.estimated_total_time;\r\n      processingSteps.value = timeEstimate.steps.map(step => ({\r\n        step: step[0],\r\n        estimated_time: step[1],\r\n        startTime: null,\r\n        progress: 0\r\n      }));\r\n      currentStep.value = processingSteps.value[0]?.step || '';\r\n    } else if (typeof timeEstimate === 'number') {\r\n      estimatedTotalTime.value = timeEstimate;\r\n      processingSteps.value = [];\r\n      currentStep.value = '';\r\n    } else {\r\n      estimatedTotalTime.value = 0;\r\n      processingSteps.value = [];\r\n      currentStep.value = '';\r\n    }\r\n    stepProgress.value = 0;\r\n  };\r\n  \r\n  // Add missing functions\r\n  const stopProcessing = () => {\r\n    startTime.value = null;\r\n    estimatedTotalTime.value = 0;\r\n    currentStep.value = '';\r\n    stepProgress.value = 0;\r\n  };\r\n  \r\n  const updateProgress = (progress) => {\r\n    if (typeof progress === 'object' && progress.step) {\r\n      updateStep(progress.step, progress.progress || 0);\r\n    } else if (typeof progress === 'number') {\r\n      stepProgress.value = progress;\r\n    }\r\n  };\r\n  \r\n  const setSteps = (steps) => {\r\n    if (Array.isArray(steps)) {\r\n      processingSteps.value = steps.map(step => ({\r\n        step: typeof step === 'string' ? step : step.step,\r\n        estimated_time: typeof step === 'object' ? step.estimated_time : 10,\r\n        startTime: null,\r\n        progress: 0\r\n      }));\r\n    }\r\n  };\r\n  \r\n  const resetProcessing = () => {\r\n    startTime.value = null;\r\n    estimatedTotalTime.value = 0;\r\n    currentStep.value = '';\r\n    stepProgress.value = 0;\r\n    processingSteps.value = [];\r\n    actualTimes.value = {};\r\n    citationInfo.value = null;\r\n    rateLimitInfo.value = null;\r\n    timeout.value = null;\r\n    processingError.value = null;\r\n    canRetry.value = false;\r\n  };\r\n  \r\n  const setProcessingError = (error) => {\r\n    processingError.value = error;\r\n    canRetry.value = true;\r\n  };\r\n  \r\n  const updateStep = (stepName, progress) => {\r\n    const stepIndex = processingSteps.value.findIndex(step => step.step === stepName);\r\n    if (stepIndex === -1) return;\r\n    \r\n    if (stepIndex === 0 || processingSteps.value[stepIndex - 1].progress === 100) {\r\n      currentStep.value = stepName;\r\n      if (!processingSteps.value[stepIndex].startTime) {\r\n        processingSteps.value[stepIndex].startTime = Date.now();\r\n      }\r\n    }\r\n    \r\n    processingSteps.value[stepIndex].progress = progress;\r\n    stepProgress.value = progress;\r\n  };\r\n  \r\n  const completeStep = (stepName) => {\r\n    updateStep(stepName, 100);\r\n    const nextStepIndex = processingSteps.value.findIndex(step => step.step === stepName) + 1;\r\n    if (nextStepIndex < processingSteps.value.length) {\r\n      currentStep.value = processingSteps.value[nextStepIndex].step;\r\n      processingSteps.value[nextStepIndex].startTime = Date.now();\r\n    }\r\n  };\r\n  \r\n  const updateActualTimes = (times) => {\r\n    actualTimes.value = times;\r\n  };\r\n  \r\n  const reset = () => {\r\n    startTime.value = null;\r\n    estimatedTotalTime.value = 0;\r\n    currentStep.value = '';\r\n    stepProgress.value = 0;\r\n    processingSteps.value = [];\r\n    actualTimes.value = {};\r\n    citationInfo.value = null;\r\n    rateLimitInfo.value = null;\r\n    timeout.value = null;\r\n    processingError.value = null;\r\n    canRetry.value = false;\r\n  };\r\n  \r\n  return {\r\n    // State\r\n    startTime,\r\n    estimatedTotalTime,\r\n    currentStep,\r\n    stepProgress,\r\n    processingSteps,\r\n    actualTimes,\r\n    citationInfo,\r\n    rateLimitInfo,\r\n    timeout,\r\n    processingError,\r\n    canRetry,\r\n    \r\n    // Computed\r\n    elapsedTime,\r\n    remainingTime,\r\n    totalProgress,\r\n    currentStepProgress,\r\n    \r\n    // Methods\r\n    startProcessing,\r\n    stopProcessing,\r\n    updateProgress,\r\n    setSteps,\r\n    resetProcessing,\r\n    setProcessingError,\r\n    updateStep,\r\n    completeStep,\r\n    updateActualTimes,\r\n    reset,\r\n    formatTime\r\n  };\r\n} ","<template>\n  <div class=\"citation-results\">\n    <!-- Loading State -->\n    <div v-if=\"loading\" class=\"loading-state\">\n      <div class=\"loading-spinner\"></div>\n      <h3>Analyzing citations...</h3>\n    </div>\n    \n    <!-- Error State -->\n    <div v-else-if=\"error\" class=\"error-state\">\n      <div class=\"error-icon\">❌</div>\n      <h3>Analysis Error</h3>\n      <p>{{ error }}</p>\n    </div>\n    \n    <!-- Results -->\n    <div v-else-if=\"results && results.citations && results.citations.length > 0\" class=\"results-content\">\n      <!-- Header with Summary -->\n      <div class=\"results-header\">\n        <div class=\"header-content\">\n          <h2>Citation Analysis Results</h2>\n          <div class=\"summary-stats\">\n            <div class=\"stat-item\">\n              <span class=\"stat-number\">{{ results.citations.length }}</span>\n              <span class=\"stat-label\">Total</span>\n            </div>\n            <div class=\"stat-item verified\">\n              <span class=\"stat-number\">{{ validCount }}</span>\n              <span class=\"stat-label\">Verified</span>\n            </div>\n            <div class=\"stat-item invalid\">\n              <span class=\"stat-number\">{{ invalidCount }}</span>\n              <span class=\"stat-label\">Invalid</span>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Action Buttons -->\n        <div class=\"action-buttons\">\n          <button @click=\"copyResults\" class=\"action-btn copy-btn\">\n            <span class=\"btn-icon\">📋</span>\n            Copy Results\n          </button>\n          <button @click=\"downloadResults\" class=\"action-btn download-btn\">\n            <span class=\"btn-icon\">💾</span>\n            Download\n          </button>\n        </div>\n      </div>\n\n      <!-- Processing Stats (if available) -->\n      <div v-if=\"results.stats\" class=\"stats-section\">\n        <h3>Processing Breakdown</h3>\n        <div class=\"stats-grid\">\n          <div class=\"stat-card\">\n            <span class=\"stat-value\">{{ results.stats.total_extracted }}</span>\n            <span class=\"stat-title\">Extracted</span>\n          </div>\n          <div class=\"stat-card\">\n            <span class=\"stat-value\">{{ results.stats.deduplicated }}</span>\n            <span class=\"stat-title\">Unique</span>\n          </div>\n          <div class=\"stat-card verified\">\n            <span class=\"stat-value\">{{ results.stats.verified_in_cache + results.stats.verified_in_json_array + results.stats.verified_in_text_blob + results.stats.verified_in_single + results.stats.verified_in_langsearch }}</span>\n            <span class=\"stat-title\">Verified</span>\n          </div>\n          <div class=\"stat-card invalid\">\n            <span class=\"stat-value\">{{ results.stats.not_verified }}</span>\n            <span class=\"stat-title\">Not Verified</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Filter Controls -->\n      <div class=\"filter-section\">\n        <div class=\"filter-controls\">\n          <button \n            v-for=\"filter in filters\" \n            :key=\"filter.value\"\n            :class=\"['filter-btn', { active: activeFilter === filter.value }]\"\n            @click=\"activeFilter = filter.value\"\n          >\n            {{ filter.label }}\n            <span class=\"filter-count\">({{ filter.count }})</span>\n          </button>\n        </div>\n        \n        <div class=\"search-box\">\n          <input \n            v-model=\"searchQuery\" \n            type=\"text\" \n            placeholder=\"Search citations...\"\n            class=\"search-input\"\n          />\n        </div>\n      </div>\n\n      <!-- Citations List -->\n      <div v-if=\"filteredCitations.length > 0\" class=\"citations-list\">\n        <!-- Grouped and sorted citations -->\n        <template v-for=\"(group, groupIndex) in groupedCitations\" :key=\"group.status\">\n          <div class=\"group-header\" :class=\"group.status\">\n            <span v-if=\"group.status === 'verified'\" class=\"group-icon\">✔️</span>\n            <span v-else-if=\"group.status === 'unverified'\" class=\"group-icon\">❌</span>\n            <span class=\"group-title\">\n              {{ group.status === 'verified' ? 'Verified Citations' : 'Unverified Citations' }}\n              ({{ group.citations.length }})\n            </span>\n          </div>\n          \n          <!-- Citation Clusters -->\n          <div v-for=\"cluster in citationClusters.filter(c => {\n            const isVerified = c.primary?.verified || c.parallels.some(p => p.verified);\n            return group.status === 'verified' ? isVerified : !isVerified;\n          })\" :key=\"cluster.primary?.citation || 'cluster'\" class=\"citation-cluster\">\n            \n            <!-- Primary Citation -->\n            <div v-if=\"cluster.primary\" :class=\"['citation-item', { verified: cluster.primary.verified, invalid: !cluster.primary.verified }]\">\n              <div class=\"citation-header\">\n                <div class=\"citation-main\">\n                  <!-- Primary Citation Badge -->\n                  <div class=\"primary-badge\" title=\"Primary citation in this cluster\">\n                    🎯 Primary\n                  </div>\n                  \n                  <!-- Score Flag -->\n                  <div :class=\"['score-flag', `score-${cluster.primary.scoreColor}`]\"\n                       :title=\"getScoreDescription(cluster.primary.score)\"\n                       @mouseenter=\"showScoreTooltip(cluster.primary)\"\n                       @mouseleave=\"hideScoreTooltip\"\n                       @click=\"toggleScoreTooltip(cluster.primary)\"\n                       style=\"cursor: pointer; position: relative;\">\n                    {{ cluster.primary.score }}/4\n                    <div v-if=\"scoreTooltipGroup === cluster.primary\" class=\"score-tooltip\">\n                      <div><strong>Score Breakdown:</strong></div>\n                      <div>Case name match: <span :class=\"{ 'text-success': cluster.primary.case_name && cluster.primary.case_name !== 'N/A' }\">{{ cluster.primary.case_name && cluster.primary.case_name !== 'N/A' ? '+2' : '0' }}</span></div>\n                      <div>Hinted name similarity: <span :class=\"{ 'text-success': getCaseNameSimilarity(cluster.primary) >= 0.5 }\">{{ getCaseNameSimilarity(cluster.primary) >= 0.5 ? '+1' : '0' }}</span></div>\n                      <div>Year match: <span :class=\"{ 'text-success': getExtractedDate(cluster.primary) && getCanonicalDate(cluster.primary) && getExtractedDate(cluster.primary).substring(0,4) === getCanonicalDate(cluster.primary).substring(0,4) }\">{{ getExtractedDate(cluster.primary) && getCanonicalDate(cluster.primary) && getExtractedDate(cluster.primary).substring(0,4) === getCanonicalDate(cluster.primary).substring(0,4) ? '+1' : '0' }}</span></div>\n                    </div>\n                  </div>\n                  \n                  <!-- Case Name with Hyperlink -->\n                  <div class=\"case-name\">\n                    <a \n                      v-if=\"cluster.primary.verified && getCitationUrl(cluster.primary)\"\n                      :href=\"getCitationUrl(cluster.primary)\"\n                      target=\"_blank\"\n                      class=\"case-name-link\"\n                      title=\"View case details\"\n                    >\n                      {{ getCaseName(cluster.primary) || 'Unknown Case' }}\n                    </a>\n                    <span v-else>\n                      {{ getCaseName(cluster.primary) || 'Unknown Case' }}\n                    </span>\n                  </div>\n                  \n                  <!-- Citation with Hyperlink -->\n                  <div class=\"citation-link\">\n                    <a \n                      v-if=\"cluster.primary.verified && getCitationUrl(cluster.primary)\"\n                      :href=\"getCitationUrl(cluster.primary)\"\n                      target=\"_blank\"\n                      class=\"citation-hyperlink\"\n                      title=\"View case details\"\n                    >\n                      {{ getMainCitationText(cluster.primary) }}\n                    </a>\n                    <span v-else class=\"citation-text\">\n                      {{ getMainCitationText(cluster.primary) }}\n                    </span>\n                    <!-- Complex Citation Indicator -->\n                    <span v-if=\"cluster.isComplex\" class=\"complex-indicator\" title=\"Complex citation with multiple components\">\n                      🔗\n                    </span>\n                  </div>\n                </div>\n                \n                <!-- Expand/Collapse Button -->\n                <div class=\"citation-actions\">\n                  <button\n                    @click=\"toggleCitationDetails(cluster.primary)\"\n                    class=\"expand-btn\"\n                    :class=\"{ expanded: expandedCitations.has(cluster.primary.citation) }\"\n                    :title=\"expandedCitations.has(cluster.primary.citation) ? 'Hide details' : 'Show details'\"\n                  >\n                    {{ expandedCitations.has(cluster.primary.citation) ? '▼' : '▶' }}\n                  </button>\n                </div>\n              </div>\n              \n              <!-- Expandable Details Section for Primary -->\n              <div v-if=\"expandedCitations.has(cluster.primary.citation)\" class=\"citation-details\">\n                <!-- Include all the existing detail sections here -->\n                <!-- Basic Citation Info -->\n                <div class=\"detail-section\">\n                  <h4 class=\"section-title\">Citation Information</h4>\n                  <div class=\"detail-row\"><span class=\"detail-label\">Citation Text:</span> <span class=\"detail-value\">{{ getMainCitationText(cluster.primary) }}</span></div>\n                  <div class=\"detail-row\" v-if=\"cluster.primary.id\"><span class=\"detail-label\">Database ID:</span> <span class=\"detail-value\">{{ cluster.primary.id }}</span></div>\n                  <div class=\"detail-row\"><span class=\"detail-label\">Status:</span> <span :class=\"['detail-value', cluster.primary.verified ? 'verified' : 'invalid']\">{{ cluster.primary.verified ? 'Verified' : 'Not Verified' }}</span></div>\n                </div>\n\n                <!-- Case Name Comparison -->\n                <div class=\"detail-section\">\n                  <h4 class=\"section-title\">Case Information</h4>\n                  <div class=\"detail-row\"><span class=\"detail-label\">Canonical Case Name:</span> <span class=\"detail-value\">{{ getCaseName(cluster.primary) || 'N/A' }}</span></div>\n                  <div class=\"detail-row\"><span class=\"detail-label\">Extracted Case Name:</span> <span class=\"detail-value\">{{ getExtractedCaseName(cluster.primary) || 'N/A' }}</span></div>\n                  <div class=\"detail-row\"><span class=\"detail-label\">Hinted Case Name:</span> <span class=\"detail-value\">{{ cluster.primary.hinted_case_name || 'N/A' }}</span></div>\n                  <div v-if=\"getCaseNameSimilarity(cluster.primary) !== null\" class=\"detail-row\"><span class=\"detail-label\">Name Similarity:</span> <span :class=\"['detail-value', getSimilarityClass(getCaseNameSimilarity(cluster.primary))]\">{{ (getCaseNameSimilarity(cluster.primary) * 100).toFixed(1) }}%</span></div>\n                  <div v-if=\"getCaseNameMismatch(cluster.primary)\" class=\"detail-row\"><span class=\"detail-label\">Name Mismatch:</span> <span class=\"detail-value warning\">⚠️ Case names differ significantly</span></div>\n                </div>\n\n                <!-- Citation Components -->\n                <div class=\"detail-section\">\n                  <h4 class=\"section-title\">Citation Components</h4>\n                  <div class=\"detail-row\" v-if=\"cluster.primary.volume\"><span class=\"detail-label\">Volume:</span> <span class=\"detail-value\">{{ cluster.primary.volume }}</span></div>\n                  <div class=\"detail-row\" v-if=\"cluster.primary.reporter\"><span class=\"detail-label\">Reporter:</span> <span class=\"detail-value\">{{ cluster.primary.reporter }}</span></div>\n                  <div class=\"detail-row\" v-if=\"cluster.primary.page\"><span class=\"detail-label\">Page:</span> <span class=\"detail-value\">{{ cluster.primary.page }}</span></div>\n                  <div class=\"detail-row\" v-if=\"cluster.primary.year\"><span class=\"detail-label\">Year:</span> <span class=\"detail-value\">{{ cluster.primary.year }}</span></div>\n                  <div class=\"detail-row\" v-if=\"cluster.primary.court\"><span class=\"detail-label\">Court:</span> <span class=\"detail-value\">{{ cluster.primary.court }}</span></div>\n                </div>\n\n                <!-- Decision Date -->\n                <div v-if=\"getDateFiled(cluster.primary) || getExtractedDate(cluster.primary) || getCanonicalDate(cluster.primary)\" class=\"detail-section\">\n                  <h4 class=\"section-title\">Decision Information</h4>\n                  <div class=\"detail-row\"><span class=\"detail-label\">Extracted Date:</span> <span class=\"detail-value\">{{ formatDate(getExtractedDate(cluster.primary)) || 'N/A' }}</span></div>\n                  <div v-if=\"getCanonicalDate(cluster.primary)\" class=\"detail-row\"><span class=\"detail-label\">Canonical Date (Case Name):</span> <span class=\"detail-value\">{{ formatDate(getCanonicalDate(cluster.primary)) }}</span></div>\n                  <div v-if=\"getDateFiled(cluster.primary)\" class=\"detail-row\"><span class=\"detail-label\">Canonical Date (Verified):</span> <span class=\"detail-value\">{{ formatDate(getDateFiled(cluster.primary)) }}</span></div>\n                  <div v-if=\"getExtractedDate(cluster.primary) && getDateFiled(cluster.primary)\" class=\"detail-row\"><span class=\"detail-label\">Date Match:</span> <span :class=\"['detail-value', getExtractedDate(cluster.primary) === getDateFiled(cluster.primary) ? 'high-similarity' : 'low-similarity']\">{{ getExtractedDate(cluster.primary) === getDateFiled(cluster.primary) ? '✓ Match' : '✗ Different' }}</span></div>\n                </div>\n\n                <!-- Context -->\n                <div v-if=\"cluster.primary.context\" class=\"detail-section\">\n                  <h4 class=\"section-title\">Context</h4>\n                  <div class=\"context-box\">{{ cluster.primary.context }}</div>\n                </div>\n\n                <!-- Parallel Citations -->\n                <div v-if=\"cluster.parallels.length > 0\" class=\"detail-section\">\n                  <h4 class=\"section-title\">Parallel Citations in This Cluster</h4>\n                  <div class=\"parallel-citations\">\n                    <div v-for=\"(parallel, index) in cluster.parallels\" :key=\"index\" class=\"parallel-citation-item\">\n                      <span class=\"parallel-badge\" title=\"Parallel citation\">🔗 Parallel</span>\n                      <span class=\"parallel-citation-text\">{{ parallel.citation }}</span>\n                      <span v-if=\"parallel.verified === 'true_by_parallel'\" class=\"inherited-badge\" title=\"Verified by association with primary\">✓ Inherited</span>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- Source Information -->\n                <div class=\"detail-section\">\n                  <h4 class=\"section-title\">Verification Details</h4>\n                  <div class=\"detail-row\"><span class=\"detail-label\">Source:</span> <span class=\"detail-value\">{{ getSource(cluster.primary) || 'N/A' }}</span></div>\n                  <div class=\"detail-row\" v-if=\"cluster.primary.confidence !== undefined\"><span class=\"detail-label\">Confidence:</span> <span class=\"detail-value\">{{ (cluster.primary.confidence * 100).toFixed(1) }}%</span></div>\n                  <div v-if=\"getNote(cluster.primary)\" class=\"detail-row\"><span class=\"detail-label\">Note:</span> <span class=\"detail-value note\">{{ getNote(cluster.primary) }}</span></div>\n                </div>\n\n                <!-- Complex Citation Information -->\n                <div v-if=\"cluster.isComplex && cluster.primary.complex_metadata\" class=\"detail-section\">\n                  <h4 class=\"section-title\">Complex Citation Details</h4>\n                  <div class=\"complex-citation-info\">\n                    <div class=\"detail-row\" v-if=\"cluster.primary.complex_metadata.primary_citation\">\n                      <span class=\"detail-label\">Primary Citation:</span> \n                      <span class=\"detail-value\">{{ cluster.primary.complex_metadata.primary_citation }}</span>\n                    </div>\n                    <div class=\"detail-row\" v-if=\"cluster.primary.complex_metadata.parallel_citations && cluster.primary.complex_metadata.parallel_citations.length > 0\">\n                      <span class=\"detail-label\">Parallel Citations:</span> \n                      <div class=\"detail-value\">\n                        <span v-for=\"(parallel, index) in cluster.primary.complex_metadata.parallel_citations\" :key=\"index\" class=\"parallel-citation-tag\">\n                          {{ parallel }}\n                        </span>\n                      </div>\n                    </div>\n                    <div class=\"detail-row\" v-if=\"cluster.primary.complex_metadata.pinpoint_pages && cluster.primary.complex_metadata.pinpoint_pages.length > 0\">\n                      <span class=\"detail-label\">Pinpoint Pages:</span> \n                      <span class=\"detail-value\">{{ cluster.primary.complex_metadata.pinpoint_pages.join(', ') }}</span>\n                    </div>\n                    <div class=\"detail-row\" v-if=\"cluster.primary.complex_metadata.docket_numbers && cluster.primary.complex_metadata.docket_numbers.length > 0\">\n                      <span class=\"detail-label\">Docket Numbers:</span> \n                      <span class=\"detail-value\">{{ cluster.primary.complex_metadata.docket_numbers.join(', ') }}</span>\n                    </div>\n                    <div class=\"detail-row\" v-if=\"cluster.primary.complex_metadata.case_history && cluster.primary.complex_metadata.case_history.length > 0\">\n                      <span class=\"detail-label\">Case History:</span> \n                      <span class=\"detail-value\">{{ cluster.primary.complex_metadata.case_history.join(', ') }}</span>\n                    </div>\n                    <div class=\"detail-row\" v-if=\"cluster.primary.complex_metadata.publication_status\">\n                      <span class=\"detail-label\">Publication Status:</span> \n                      <span class=\"detail-value\">{{ cluster.primary.complex_metadata.publication_status }}</span>\n                    </div>\n                    <div class=\"detail-row\" v-if=\"cluster.primary.complex_metadata.year\">\n                      <span class=\"detail-label\">Year:</span> \n                      <span class=\"detail-value\">{{ cluster.primary.complex_metadata.year }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Parallel Citations (if any) -->\n            <div v-if=\"cluster.parallels.length > 0\" class=\"parallel-citations-section\">\n              <div v-for=\"parallel in cluster.parallels\" :key=\"parallel.citation\" :class=\"['citation-item', 'parallel-item', { verified: parallel.verified, invalid: !parallel.verified }]\">\n                <div class=\"citation-header\">\n                  <div class=\"citation-main\">\n                    <!-- Parallel Citation Badge -->\n                    <div class=\"parallel-badge\" title=\"Parallel citation\">\n                      🔗 Parallel\n                    </div>\n                    \n                    <!-- Inherited Status Badge -->\n                    <div v-if=\"parallel.verified === 'true_by_parallel'\" class=\"inherited-badge\" title=\"Verified by association with primary\">\n                      ✓ Inherited\n                    </div>\n                    \n                    <!-- Case Name (inherited from primary) -->\n                    <div class=\"case-name\">\n                      <span>{{ getCaseName(parallel) || 'Unknown Case' }}</span>\n                    </div>\n                    \n                    <!-- Citation Text -->\n                    <div class=\"citation-link\">\n                      <span class=\"citation-text\">{{ getMainCitationText(parallel) }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </template>\n        \n        <!-- Pagination -->\n        <div v-if=\"totalPages > 1\" class=\"pagination\">\n          <button \n            @click=\"currentPage--\" \n            :disabled=\"currentPage <= 1\"\n            class=\"pagination-btn\"\n          >\n            ← Previous\n          </button>\n          <span class=\"page-info\">Page {{ currentPage }} of {{ totalPages }}</span>\n          <button \n            @click=\"currentPage++\" \n            :disabled=\"currentPage >= totalPages\"\n            class=\"pagination-btn\"\n          >\n            Next →\n          </button>\n        </div>\n      </div>\n\n      <!-- Empty Filter State -->\n      <div v-if=\"filteredCitations.length === 0 && results.citations.length > 0\" class=\"empty-filter\">\n        <div class=\"empty-icon\">🔍</div>\n        <h3>No citations match your filter</h3>\n        <p>Try adjusting your search or filter criteria</p>\n      </div>\n    </div>\n\n    <!-- No Results State -->\n    <div v-else class=\"no-results\">\n      <div class=\"no-results-icon\">📄</div>\n      <h3>No Citations Found</h3>\n      <p>The document didn't contain any recognizable legal citations</p>\n    </div>\n\n    <!-- Citation Details Modal -->\n    <div v-if=\"selectedCitation\" class=\"modal-overlay\" @click=\"closeCitationDetails\">\n      <div class=\"modal-content\" @click.stop>\n        <div class=\"modal-header\">\n          <h3>Citation Details</h3>\n          <button @click=\"closeCitationDetails\" class=\"modal-close\">×</button>\n        </div>\n        <div class=\"modal-body\">\n          <!-- Basic Citation Info -->\n          <div class=\"detail-section\">\n            <h4>Citation Information</h4>\n            <div class=\"detail-grid\">\n              <div class=\"detail-item\">\n                <span class=\"detail-label\">Citation Text:</span>\n                <span class=\"detail-value\">{{ getMainCitationText(selectedCitation) }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <span class=\"detail-label\">Database ID:</span>\n                <span class=\"detail-value\">{{ selectedCitation.id || 'N/A' }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <span class=\"detail-label\">Status:</span>\n                <span :class=\"['detail-value', selectedCitation.verified ? 'verified' : 'invalid']\">\n                  {{ selectedCitation.verified ? 'Verified' : 'Not Verified' }}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Citation Components -->\n          <div class=\"detail-section\">\n            <h4>Citation Components</h4>\n            <div class=\"detail-grid\">\n              <div class=\"detail-item\" v-if=\"selectedCitation.volume\">\n                <span class=\"detail-label\">Volume:</span>\n                <span class=\"detail-value\">{{ selectedCitation.volume }}</span>\n              </div>\n              <div class=\"detail-item\" v-if=\"selectedCitation.reporter\">\n                <span class=\"detail-label\">Reporter:</span>\n                <span class=\"detail-value\">{{ selectedCitation.reporter }}</span>\n              </div>\n              <div class=\"detail-item\" v-if=\"selectedCitation.page\">\n                <span class=\"detail-label\">Page:</span>\n                <span class=\"detail-value\">{{ selectedCitation.page }}</span>\n              </div>\n              <div class=\"detail-item\" v-if=\"selectedCitation.year\">\n                <span class=\"detail-label\">Year:</span>\n                <span class=\"detail-value\">{{ selectedCitation.year }}</span>\n              </div>\n              <div class=\"detail-item\" v-if=\"selectedCitation.court\">\n                <span class=\"detail-label\">Court:</span>\n                <span class=\"detail-value\">{{ selectedCitation.court }}</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Verification Details -->\n          <div class=\"detail-section\">\n            <h4>Verification Details</h4>\n            <div class=\"detail-grid\">\n              <div class=\"detail-item\" v-if=\"selectedCitation.verification_source\">\n                <span class=\"detail-label\">Verification Source:</span>\n                <span class=\"detail-value\">{{ selectedCitation.verification_source }}</span>\n              </div>\n              <div class=\"detail-item\" v-if=\"selectedCitation.verification_confidence !== undefined\">\n                <span class=\"detail-label\">Verification Confidence:</span>\n                <span class=\"detail-value\">{{ (selectedCitation.verification_confidence * 100).toFixed(1) }}%</span>\n              </div>\n              <div class=\"detail-item\" v-if=\"selectedCitation.verification_count !== undefined\">\n                <span class=\"detail-label\">Times Verified:</span>\n                <span class=\"detail-value\">{{ selectedCitation.verification_count }}</span>\n              </div>\n              <div class=\"detail-item\" v-if=\"selectedCitation.error_count !== undefined\">\n                <span class=\"detail-label\">Verification Errors:</span>\n                <span class=\"detail-value\">{{ selectedCitation.error_count }}</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Timestamps -->\n          <div class=\"detail-section\">\n            <h4>Database Timestamps</h4>\n            <div class=\"detail-grid\">\n              <div class=\"detail-item\" v-if=\"selectedCitation.created_at\">\n                <span class=\"detail-label\">First Added:</span>\n                <span class=\"detail-value\">{{ formatTimestamp(selectedCitation.created_at) }}</span>\n              </div>\n              <div class=\"detail-item\" v-if=\"selectedCitation.updated_at\">\n                <span class=\"detail-label\">Last Updated:</span>\n                <span class=\"detail-value\">{{ formatTimestamp(selectedCitation.updated_at) }}</span>\n              </div>\n              <div class=\"detail-item\" v-if=\"selectedCitation.last_verified_at\">\n                <span class=\"detail-label\">Last Verified:</span>\n                <span class=\"detail-value\">{{ formatTimestamp(selectedCitation.last_verified_at) }}</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Raw Verification Result -->\n          <div class=\"detail-section\" v-if=\"selectedCitation.verification_result\">\n            <h4>Raw Verification Data</h4>\n            <div class=\"raw-data\">\n              <pre>{{ formatJson(selectedCitation.verification_result) }}</pre>\n            </div>\n          </div>\n\n          <!-- Parallel Citations -->\n          <div class=\"detail-section\" v-if=\"getOtherParallelCitations(selectedCitation) && getOtherParallelCitations(selectedCitation).length > 0\">\n            <h4>Additional Parallel Citations</h4>\n            <div class=\"parallel-citations\">\n              <span \n                v-for=\"(parallel, index) in getOtherParallelCitations(selectedCitation)\" \n                :key=\"index\"\n                class=\"parallel-citation\"\n              >\n                {{ formatParallelCitation(parallel) }}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button @click=\"closeCitationDetails\" class=\"btn btn-secondary\">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue';\n\nconst props = defineProps({\n  results: {\n    type: Object,\n    default: null\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  },\n  error: {\n    type: String,\n    default: ''\n  }\n});\n\nconst emit = defineEmits(['apply-correction', 'copy-results', 'download-results', 'toast']);\n\n// Reactive state\nconst activeFilter = ref('all');\nconst searchQuery = ref('');\nconst currentPage = ref(1);\nconst itemsPerPage = 50;\nconst selectedCitation = ref(null);\nconst expandedCitations = ref(new Set());\nconst scoreTooltipGroup = ref(null);\n\n// Computed properties\nconst validCount = computed(() => {\n  if (!props.results?.citations) return 0;\n  return props.results.citations.filter(c => c.verified).length;\n});\n\nconst invalidCount = computed(() => {\n  if (!props.results?.citations) return 0;\n  return props.results.citations.filter(c => !c.verified).length;\n});\n\nconst filteredCitations = computed(() => {\n  if (!props.results?.citations) return [];\n  \n  let filtered = props.results.citations;\n  \n  // Apply filter\n  if (activeFilter.value === 'verified') {\n    filtered = filtered.filter(c => c.verified);\n  } else if (activeFilter.value === 'invalid') {\n    filtered = filtered.filter(c => !c.verified);\n  }\n  \n  // Apply search\n  if (searchQuery.value.trim()) {\n    const query = searchQuery.value.toLowerCase();\n    filtered = filtered.filter(c => \n      c.citation.toLowerCase().includes(query) ||\n      (getCaseName(c) && getCaseName(c).toLowerCase().includes(query)) ||\n      (getExtractedCaseName(c) && getExtractedCaseName(c).toLowerCase().includes(query)) ||\n      (getCourt(c) && getCourt(c).toLowerCase().includes(query)) ||\n      (getDocket(c) && getDocket(c).toLowerCase().includes(query)) ||\n      (getDateFiled(c) && getDateFiled(c).toLowerCase().includes(query)) ||\n      (getExtractedDate(c) && getExtractedDate(c).toLowerCase().includes(query)) ||\n      (getParallelCitations(c) && getParallelCitations(c).some(p => p.toLowerCase().includes(query))) ||\n      (getSource(c) && getSource(c).toLowerCase().includes(query))\n    );\n  }\n  \n  // Sort by score from worst to best (ascending order)\n  filtered.sort((a, b) => {\n    const scoreA = a.score || 0;\n    const scoreB = b.score || 0;\n    return scoreA - scoreB;\n  });\n  \n  return filtered;\n});\n\nconst totalPages = computed(() => {\n  return Math.ceil(filteredCitations.value.length / itemsPerPage);\n});\n\nconst paginatedCitations = computed(() => {\n  const start = (currentPage.value - 1) * itemsPerPage;\n  const end = start + itemsPerPage;\n  return filteredCitations.value.slice(start, end);\n});\n\nconst filters = computed(() => [\n  { value: 'all', label: 'All', count: props.results?.citations?.length || 0 },\n  { value: 'verified', label: 'Verified', count: validCount.value },\n  { value: 'invalid', label: 'Invalid', count: invalidCount.value }\n]);\n\nconst groupedCitations = computed(() => {\n  // Group and sort citations by status\n  const verified = paginatedCitations.value.filter(c => c.verified);\n  const unverified = paginatedCitations.value.filter(c => !c.verified);\n  return [\n    { status: 'verified', citations: verified },\n    { status: 'unverified', citations: unverified }\n  ].filter(group => group.citations.length > 0);\n});\n\n// New computed property for citation clusters\nconst citationClusters = computed(() => {\n  if (!props.results?.citations) return [];\n\n  // Group citations by primary citation\n  const clusters = new Map();\n  \n  paginatedCitations.value.forEach(citation => {\n    const primaryCitation = citation.primary_citation || citation.citation;\n    \n    if (!clusters.has(primaryCitation)) {\n      clusters.set(primaryCitation, {\n        primary: null,\n        parallels: [],\n        isComplex: false\n      });\n    }\n    \n    const cluster = clusters.get(primaryCitation);\n    \n    // Determine if this is the primary or a parallel\n    if (citation.citation === primaryCitation || !citation.is_parallel_citation) {\n      cluster.primary = citation;\n    } else {\n      cluster.parallels.push(citation);\n    }\n    \n    // Mark as complex if any citation in the cluster is complex\n    if (citation.is_complex_citation) {\n      cluster.isComplex = true;\n    }\n  });\n\n  // Deduplicate parallels in each cluster by canonical_citation or citation string\n  clusters.forEach(cluster => {\n    const seen = new Set();\n    cluster.parallels = cluster.parallels.filter(parallel => {\n      const key = parallel.canonical_citation || parallel.citation;\n      if (seen.has(key)) return false;\n      seen.add(key);\n      return true;\n    });\n  });\n  \n  // Convert to array and sort by verification status\n  return Array.from(clusters.values())\n    .sort((a, b) => {\n      // Sort verified clusters first\n      const aVerified = a.primary?.verified || a.parallels.some(p => p.verified);\n      const bVerified = b.primary?.verified || b.parallels.some(p => p.verified);\n      if (aVerified !== bVerified) return bVerified ? 1 : -1;\n      \n      // Then sort by primary citation text\n      const aText = a.primary?.citation || '';\n      const bText = b.primary?.citation || '';\n      return aText.localeCompare(bText);\n    });\n});\n\n// Methods\nconst copyCitation = async (citation) => {\n  try {\n    await navigator.clipboard.writeText(citation);\n    emit('toast', 'Citation copied to clipboard!', 'success');\n  } catch (err) {\n    emit('toast', 'Failed to copy citation', 'error');\n  }\n};\n\nconst openCitation = (url) => {\n  window.open(url, '_blank');\n};\n\n// Helper functions for enhanced data structure compatibility\nconst getCaseName = (citation) => {\n  // Canonical case name (from API or database)\n  const canonical = citation.case_name || citation.metadata?.case_name || citation.group_metadata?.case_name;\n  if (canonical && canonical !== 'N/A' && canonical.trim() !== '') return canonical;\n  // Extracted case name (from document text)\n  const extracted = citation.extracted_case_name || null;\n  if (extracted && extracted !== 'N/A' && extracted.trim() !== '') return extracted;\n  // Fallback\n  return 'N/A';\n};\n\nconst getExtractedCaseName = (citation) => {\n  return citation.extracted_case_name || null;\n};\n\nconst getCaseNameSimilarity = (citation) => {\n  return citation.case_name_similarity || null;\n};\n\nconst getCaseNameMismatch = (citation) => {\n  return citation.case_name_mismatch || false;\n};\n\nconst getCourt = (citation) => {\n  return citation.court || citation.metadata?.court || citation.group_metadata?.court || null;\n};\n\nconst getDocket = (citation) => {\n  return citation.docket_number || citation.metadata?.docket || citation.group_metadata?.docket || null;\n};\n\nconst getDateFiled = (citation) => {\n  return citation.date_filed || citation.group_metadata?.date_filed || null;\n};\n\nconst getExtractedDate = (citation) => {\n  return citation.extracted_date || null;\n};\n\nconst getCanonicalDate = (citation) => {\n  return citation.canonical_date || citation.group_metadata?.canonical_date || null;\n};\n\nconst getParallelCitations = (citation) => {\n  return citation.parallel_citations && citation.parallel_citations.length > 0 ? citation.parallel_citations : (citation.all_citations || []);\n};\n\nconst getCitationUrl = (citation) => {\n  return citation.url || citation.metadata?.url || citation.group_metadata?.url || null;\n};\n\nconst getSource = (citation) => {\n  // Prefer the domain of the 'url' field if present (for web_search and others)\n  const urlField = citation.url || '';\n  if (urlField) {\n    try {\n      const domain = (new URL(urlField)).hostname.replace(/^www\\./, '');\n      return domain;\n    } catch (e) {\n      return urlField;\n    }\n  }\n  // Next, try the canonical citation_url\n  const citationUrl = citation.citation_url || '';\n  if (citationUrl) {\n    try {\n      const domain = (new URL(citationUrl)).hostname.replace(/^www\\./, '');\n      return domain;\n    } catch (e) {\n      return citationUrl;\n    }\n  }\n  // Fallback to previous logic\n  return citation.source || citation.metadata?.source || 'Unknown';\n};\n\nconst getNote = (citation) => {\n  return citation.note || null;\n};\n\nconst formatDate = (dateString) => {\n  if (!dateString) return 'N/A';\n  // If the string matches YYYY or YYYY-MM-DD, return just the year\n  const yearMatch = /^\\d{4}/.exec(dateString);\n  if (yearMatch) return yearMatch[0];\n  try {\n    const date = new Date(dateString);\n    return date.getFullYear();\n  } catch (err) {\n    return dateString; // Return as-is if parsing fails\n  }\n};\n\nconst getSimilarityClass = (similarity) => {\n  if (similarity >= 0.8) return 'high-similarity';\n  if (similarity >= 0.6) return 'medium-similarity';\n  return 'low-similarity';\n};\n\nconst copyResults = async () => {\n  try {\n    const resultsText = filteredCitations.value\n      .map(c => `${c.citation} - ${c.verified ? 'Verified' : 'Invalid'}`)\n      .join('\\n');\n    \n    await navigator.clipboard.writeText(resultsText);\n    emit('copy-results');\n    emit('toast', 'Results copied to clipboard!', 'success');\n  } catch (err) {\n    emit('toast', 'Failed to copy results', 'error');\n  }\n};\n\nconst downloadResults = () => {\n  try {\n    const data = {\n      timestamp: new Date().toISOString(),\n      total: filteredCitations.value.length,\n      verified: validCount.value,\n      invalid: invalidCount.value,\n      citations: filteredCitations.value.map(c => ({\n        citation: c.citation,\n        verified: c.verified,\n        case_name: getCaseName(c),\n        extracted_case_name: getExtractedCaseName(c),\n        case_name_similarity: getCaseNameSimilarity(c),\n        case_name_mismatch: getCaseNameMismatch(c),\n        court: getCourt(c),\n        docket_number: getDocket(c),\n        date_filed: getDateFiled(c),\n        extracted_date: getExtractedDate(c),\n        parallel_citations: getParallelCitations(c),\n        url: getCitationUrl(c),\n        source: getSource(c),\n        note: getNote(c),\n        metadata: c.metadata // Keep original metadata for backward compatibility\n      }))\n    };\n    \n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `citation-results-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    \n    emit('download-results');\n    emit('toast', 'Results downloaded successfully!', 'success');\n  } catch (err) {\n    emit('toast', 'Failed to download results', 'error');\n  }\n};\n\n// Reset pagination when filter changes\nconst resetPagination = () => {\n  currentPage.value = 1;\n};\n\n// Watch for filter changes\nwatch(activeFilter, resetPagination);\nwatch(searchQuery, resetPagination);\n\nconst formatParallelCitation = (parallel) => {\n  if (!parallel) return '';\n  \n  // If it's a string, return as is\n  if (typeof parallel === 'string') return parallel;\n  \n  // If it's an object, extract the citation text\n  if (typeof parallel === 'object') {\n    // Try to get the clean citation text from various possible properties\n    if (parallel.citation) return parallel.citation;\n    if (parallel.cite) return parallel.cite;\n    if (parallel.text) return parallel.text;\n    \n    // If it has volume, reporter, page structure, format it\n    if (parallel.volume || parallel.reporter || parallel.page) {\n      const v = parallel.volume || '';\n      const r = parallel.reporter || '';\n      const p = parallel.page || '';\n      const y = parallel.year || '';\n      let citation = [v, r, p].filter(Boolean).join(' ');\n      if (y && citation && !citation.includes(y)) citation += ` (${y})`;\n      if (citation) return citation;\n    }\n    \n    // Last resort: try to get a string representation\n    return String(parallel);\n  }\n  \n  return String(parallel);\n};\n\n// Helper function to get the main citation text for display\nconst getMainCitationText = (group) => {\n  if (!group) return '';\n\n  // Prefer 'citation' field\n  let citation = group.citation;\n  if (Array.isArray(citation)) {\n    if (citation.length > 0) return citation[0];\n  } else if (typeof citation === 'string') {\n    return citation;\n  }\n\n  // Fallback to canonical_citation\n  let canonical = group.canonical_citation;\n  if (Array.isArray(canonical)) {\n    if (canonical.length > 0) return canonical[0];\n  } else if (typeof canonical === 'string') {\n    return canonical;\n  }\n\n  // Fallback to any citation-like property\n  if (group.cite) return group.cite;\n  if (group.text) return group.text;\n\n  return 'Citation not available';\n};\n\n// Helper function to get all parallel citations (excluding the main one)\nconst getOtherParallelCitations = (group) => {\n  let citation = group.citation;\n  if (Array.isArray(citation) && citation.length > 1) {\n    return citation.slice(1);\n  }\n  // If canonical_citation is an array and citation is not, use canonical as parallel\n  if (!Array.isArray(citation) && Array.isArray(group.canonical_citation) && group.canonical_citation.length > 1) {\n    return group.canonical_citation.slice(1);\n  }\n  // If parallel_citations exists and is non-empty, use it\n  if (Array.isArray(group.parallel_citations) && group.parallel_citations.length > 0) {\n    return group.parallel_citations;\n  }\n  return [];\n};\n\n// Citation Details Modal Methods\nconst showCitationDetails = (citation) => {\n  selectedCitation.value = citation;\n};\n\nconst closeCitationDetails = () => {\n  selectedCitation.value = null;\n};\n\nconst formatTimestamp = (timestamp) => {\n  if (!timestamp) return 'N/A';\n  try {\n    return new Date(timestamp).toLocaleString();\n  } catch (e) {\n    return timestamp;\n  }\n};\n\nconst formatJson = (jsonString) => {\n  if (!jsonString) return 'N/A';\n  try {\n    const parsed = typeof jsonString === 'string' ? JSON.parse(jsonString) : jsonString;\n    return JSON.stringify(parsed, null, 2);\n  } catch (e) {\n    return jsonString;\n  }\n};\n\nconst parseParallelCitations = (parallelCitations) => {\n  if (!parallelCitations) return [];\n  try {\n    if (typeof parallelCitations === 'string') {\n      return JSON.parse(parallelCitations);\n    }\n    return Array.isArray(parallelCitations) ? parallelCitations : [];\n  } catch (e) {\n    return [parallelCitations];\n  }\n};\n\nconst toggleCitationDetails = (citation) => {\n  if (expandedCitations.value.has(citation.citation)) {\n    expandedCitations.value.delete(citation.citation);\n  } else {\n    expandedCitations.value.add(citation.citation);\n  }\n};\n\nconst getScoreDescription = (score) => {\n  const descriptions = {\n    0: 'No verification data available',\n    1: 'Limited verification - some data available',\n    2: 'Good verification - case name found',\n    3: 'Very good verification - case name and additional data',\n    4: 'Excellent verification - all data matches'\n  };\n  return descriptions[score] || 'Unknown score';\n};\n\nconst showScoreTooltip = (group) => {\n  scoreTooltipGroup.value = group;\n};\n\nconst hideScoreTooltip = () => {\n  scoreTooltipGroup.value = null;\n};\n\nconst toggleScoreTooltip = (group) => {\n  scoreTooltipGroup.value = scoreTooltipGroup.value === group ? null : group;\n};\n</script>\n\n<style scoped>\n.citation-results {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Loading State */\n.loading-state {\n  text-align: center;\n  padding: 3rem;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #007bff;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin: 0 auto 1rem;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Error State */\n.error-state {\n  text-align: center;\n  padding: 3rem;\n  background: #fff5f5;\n  border-radius: 12px;\n  border: 1px solid #fed7d7;\n}\n\n.error-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n}\n\n/* Results Header */\n.results-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 2rem;\n  padding-bottom: 1.5rem;\n  border-bottom: 2px solid #f8f9fa;\n}\n\n.header-content h2 {\n  margin: 0 0 1rem 0;\n  color: #2c3e50;\n}\n\n.summary-stats {\n  display: flex;\n  gap: 2rem;\n}\n\n.stat-item {\n  text-align: center;\n}\n\n.stat-number {\n  display: block;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #007bff;\n}\n\n.stat-item.verified .stat-number {\n  color: #28a745;\n}\n\n.stat-item.invalid .stat-number {\n  color: #dc3545;\n}\n\n.stat-label {\n  font-size: 0.9rem;\n  color: #6c757d;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n/* Action Buttons */\n.action-buttons {\n  display: flex;\n  gap: 1rem;\n}\n\n.action-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.copy-btn {\n  background: #007bff;\n  color: white;\n}\n\n.copy-btn:hover {\n  background: #0056b3;\n}\n\n.download-btn {\n  background: #28a745;\n  color: white;\n}\n\n.download-btn:hover {\n  background: #1e7e34;\n}\n\n/* Stats Section */\n.stats-section {\n  background: #f8f9fa;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.stats-section h3 {\n  margin: 0 0 1rem 0;\n  color: #495057;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 1rem;\n}\n\n.stat-card {\n  background: white;\n  border-radius: 8px;\n  padding: 1rem;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.stat-card.verified {\n  border-left: 4px solid #28a745;\n}\n\n.stat-card.invalid {\n  border-left: 4px solid #dc3545;\n}\n\n.stat-value {\n  display: block;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n.stat-title {\n  font-size: 0.8rem;\n  color: #6c757d;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n/* Filter Section */\n.filter-section {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  gap: 1rem;\n}\n\n.filter-controls {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.filter-btn {\n  padding: 0.5rem 1rem;\n  border: 2px solid #e9ecef;\n  background: white;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 0.9rem;\n}\n\n.filter-btn:hover {\n  border-color: #007bff;\n}\n\n.filter-btn.active {\n  background: #007bff;\n  color: white;\n  border-color: #007bff;\n}\n\n.filter-count {\n  font-size: 0.8rem;\n  opacity: 0.8;\n}\n\n.search-box {\n  flex: 1;\n  max-width: 300px;\n}\n\n.search-input {\n  width: 100%;\n  padding: 0.5rem 1rem;\n  border: 2px solid #e9ecef;\n  border-radius: 8px;\n  font-size: 0.9rem;\n}\n\n.search-input:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\n/* Citations List */\n.citations-list {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.citation-item {\n  background: white;\n  border: 1px solid #e9ecef;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n  transition: all 0.2s;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.citation-item:hover {\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n  transform: translateY(-1px);\n}\n\n.citation-item.verified {\n  border-left: 4px solid #28a745;\n}\n\n.citation-item.invalid {\n  border-left: 4px solid #dc3545;\n}\n\n.citation-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 1rem;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.citation-main {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.score-flag {\n  padding: 0.25rem 0.75rem;\n  border-radius: 20px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  text-align: center;\n  min-width: 40px;\n  color: white;\n}\n\n.score-flag.score-green {\n  background: #28a745;\n}\n\n.score-flag.score-yellow {\n  background: #ffc107;\n  color: #212529;\n}\n\n.score-flag.score-orange {\n  background: #fd7e14;\n}\n\n.score-flag.score-red {\n  background: #dc3545;\n}\n\n.case-name {\n  font-weight: 600;\n  color: #2c3e50;\n  flex: 1;\n  min-width: 0;\n}\n\n.citation-link {\n  flex: 1;\n  min-width: 0;\n}\n\n.citation-hyperlink {\n  color: #007bff;\n  text-decoration: none;\n  font-weight: 600;\n  font-family: 'Courier New', monospace;\n}\n\n.citation-hyperlink:hover {\n  text-decoration: underline;\n  color: #0056b3;\n}\n\n.case-name-link {\n  color: #007bff;\n  text-decoration: none;\n  font-weight: 600;\n}\n\n.case-name-link:hover {\n  text-decoration: underline;\n  color: #0056b3;\n}\n\n.parallel-citation-link {\n  color: #007bff;\n  text-decoration: none;\n  font-weight: 500;\n  font-family: 'Courier New', monospace;\n}\n\n.parallel-citation-link:hover {\n  text-decoration: underline;\n  color: #0056b3;\n}\n\n.citation-text {\n  font-weight: 600;\n  color: #2c3e50;\n  font-family: 'Courier New', monospace;\n}\n\n.citation-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.expand-btn {\n  background: none;\n  border: none;\n  padding: 0.5rem;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n  color: #6c757d;\n  transition: all 0.2s;\n}\n\n.expand-btn:hover {\n  background: #f8f9fa;\n  color: #495057;\n}\n\n.expand-btn.expanded {\n  background: #e9ecef;\n  color: #495057;\n}\n\n/* Citation Details */\n.citation-details {\n  margin-top: 1rem;\n  padding: 1rem;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border-left: 4px solid #007bff;\n}\n\n.detail-section {\n  margin-bottom: 1.5rem;\n}\n\n.detail-section:last-child {\n  margin-bottom: 0;\n}\n\n.section-title {\n  margin: 0 0 0.75rem 0;\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #495057;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  border-bottom: 1px solid #dee2e6;\n  padding-bottom: 0.25rem;\n}\n\n.detail-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 0.5rem;\n  padding: 0.25rem 0;\n}\n\n.detail-row:last-child {\n  margin-bottom: 0;\n}\n\n.detail-label {\n  font-weight: 600;\n  color: #495057;\n  min-width: 140px;\n  flex-shrink: 0;\n}\n\n.detail-value {\n  color: #2c3e50;\n  text-align: right;\n  flex: 1;\n  word-break: break-word;\n}\n\n.detail-value.warning {\n  color: #dc3545;\n  font-weight: 600;\n}\n\n.detail-value.note {\n  color: #6c757d;\n  font-style: italic;\n}\n\n.detail-value.high-similarity {\n  color: #28a745;\n  font-weight: 600;\n}\n\n.detail-value.medium-similarity {\n  color: #ffc107;\n  font-weight: 600;\n}\n\n.detail-value.low-similarity {\n  color: #dc3545;\n  font-weight: 600;\n}\n\n/* Parallel Citations */\n.parallel-citations {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.parallel-citation {\n  display: inline-block;\n  background: #f8f9fa;\n  padding: 4px 8px;\n  margin: 2px;\n  border-radius: 4px;\n  font-size: 0.9em;\n  border: 1px solid #dee2e6;\n}\n\n/* Empty States */\n.empty-filter,\n.no-results {\n  text-align: center;\n  padding: 3rem;\n  color: #6c757d;\n}\n\n.empty-icon,\n.no-results-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .results-header {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .summary-stats {\n    gap: 1rem;\n  }\n  \n  .filter-section {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .search-box {\n    max-width: none;\n  }\n  \n  .citation-header {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .citation-main {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n  \n  .citation-details {\n    grid-template-columns: 1fr;\n  }\n}\n\n/* Modal Styles */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 20px;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 8px;\n  max-width: 800px;\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 20px 0 20px;\n  border-bottom: 1px solid #dee2e6;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.modal-close {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #666;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: background-color 0.2s;\n}\n\n.modal-close:hover {\n  background-color: #f8f9fa;\n  color: #333;\n}\n\n.modal-body {\n  padding: 20px;\n}\n\n.modal-footer {\n  padding: 0 20px 20px 20px;\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.detail-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 15px;\n  margin-top: 10px;\n}\n\n.detail-item {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.detail-label {\n  font-weight: 600;\n  color: #666;\n  font-size: 0.9em;\n}\n\n.detail-value {\n  color: #333;\n  word-break: break-word;\n}\n\n.detail-value.verified {\n  color: #28a745;\n  font-weight: 600;\n}\n\n.detail-value.invalid {\n  color: #dc3545;\n  font-weight: 600;\n}\n\n.raw-data {\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 4px;\n  padding: 15px;\n  margin-top: 10px;\n  overflow-x: auto;\n}\n\n.raw-data pre {\n  margin: 0;\n  font-size: 0.85em;\n  color: #333;\n  white-space: pre-wrap;\n  word-break: break-word;\n}\n\n.btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.btn-secondary {\n  background-color: #6c757d;\n  color: white;\n}\n\n.btn-secondary:hover {\n  background-color: #5a6268;\n}\n\n.score-tooltip {\n  position: absolute;\n  top: 2.2rem;\n  left: 0;\n  background: #fff;\n  border: 1px solid #1976d2;\n  border-radius: 0.5rem;\n  box-shadow: 0 2px 8px rgba(60,72,88,0.12);\n  padding: 0.75rem 1rem;\n  z-index: 10;\n  min-width: 180px;\n  font-size: 0.95rem;\n  color: #222;\n}\n\n.text-success {\n  color: #198754;\n  font-weight: bold;\n}\n\n.context-box {\n  background: #f7fafd;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  font-size: 1.05rem;\n  color: #333;\n  margin-bottom: 1rem;\n  white-space: pre-line;\n}\n\n.group-header {\n  font-size: 1.15rem;\n  font-weight: 600;\n  margin: 2rem 0 1rem 0;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n.group-header.verified {\n  color: #198754;\n}\n.group-header.unverified {\n  color: #dc3545;\n}\n.group-icon {\n  font-size: 1.3rem;\n  margin-right: 0.5rem;\n}\n.group-title {\n  font-size: 1.1rem;\n}\n\n/* Complex Citation Styles */\n.complex-citation-info {\n  background: #f8f9fa;\n  border: 1px solid #e9ecef;\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 10px;\n}\n\n.parallel-citation-tag {\n  display: inline-block;\n  background: #e3f2fd;\n  color: #1976d2;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.9em;\n  margin: 2px 4px 2px 0;\n  border: 1px solid #bbdefb;\n}\n\n.parallel-citation-tag:hover {\n  background: #bbdefb;\n  color: #1565c0;\n}\n\n.complex-citation-info .detail-row {\n  margin-bottom: 8px;\n}\n\n.complex-citation-info .detail-row:last-child {\n  margin-bottom: 0;\n}\n\n.complex-citation-info .detail-value {\n  font-weight: 500;\n}\n\n/* Complex Citation Indicator */\n.complex-indicator {\n  font-size: 0.8rem;\n  color: #6c757d;\n  margin-left: 0.5rem;\n}\n\n/* Citation Clusters */\n.citation-cluster {\n  margin-bottom: 1.5rem;\n  border: 2px solid #f8f9fa;\n  border-radius: 12px;\n  overflow: hidden;\n}\n\n.citation-cluster .citation-item {\n  margin-bottom: 0;\n  border-radius: 0;\n  border-left: none;\n  border-right: none;\n  border-top: none;\n}\n\n.citation-cluster .citation-item:last-child {\n  border-bottom: none;\n}\n\n/* Primary and Parallel Badges */\n.primary-badge {\n  display: inline-block;\n  background: #007bff;\n  color: white;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  font-weight: 600;\n  margin-right: 0.5rem;\n}\n\n.parallel-badge {\n  display: inline-block;\n  background: #6c757d;\n  color: white;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  font-weight: 600;\n  margin-right: 0.5rem;\n}\n\n.inherited-badge {\n  display: inline-block;\n  background: #28a745;\n  color: white;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  font-weight: 600;\n  margin-right: 0.5rem;\n}\n\n/* Parallel Citations Section */\n.parallel-citations-section {\n  background: #f8f9fa;\n  border-top: 1px solid #e9ecef;\n}\n\n.parallel-citations-section .citation-item {\n  background: #f8f9fa;\n  border: none;\n  border-bottom: 1px solid #e9ecef;\n  margin-bottom: 0;\n  border-radius: 0;\n}\n\n.parallel-citations-section .citation-item:last-child {\n  border-bottom: none;\n}\n\n.parallel-citations-section .citation-item:hover {\n  background: #e9ecef;\n  transform: none;\n  box-shadow: none;\n}\n\n.parallel-item {\n  padding: 0.75rem 1rem;\n}\n\n.parallel-item .citation-header {\n  padding: 0;\n}\n\n.parallel-item .citation-main {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.parallel-item .case-name {\n  font-weight: 500;\n  color: #495057;\n}\n\n.parallel-item .citation-text {\n  color: #6c757d;\n  font-family: monospace;\n}\n\n/* Parallel Citation Items in Details */\n.parallel-citation-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem;\n  background: #f8f9fa;\n  border-radius: 4px;\n  margin-bottom: 0.25rem;\n}\n\n.parallel-citation-text {\n  font-family: monospace;\n  color: #495057;\n}\n</style>\n","<template>\n  <div class=\"unified-input\">\n    <!-- Top Row: File Upload and URL Upload -->\n    <div class=\"input-methods-top\">\n      <div \n        :class=\"['input-method-card', { active: inputMode === 'file', disabled: isAnalyzing }]\"\n        @click=\"!isAnalyzing && (inputMode = 'file', onModeChange())\"\n      >\n        <div class=\"method-icon\">{{ methodIcons.file }}</div>\n        <div class=\"method-content\">\n          <h4>{{ modeLabels.file }}</h4>\n          <p>{{ modeDescriptions.file }}</p>\n        </div>\n        <div v-if=\"inputMode === 'file'\" class=\"active-indicator\">✓</div>\n      </div>\n\n      <div \n        :class=\"['input-method-card', { active: inputMode === 'url', disabled: isAnalyzing }]\"\n        @click=\"!isAnalyzing && (inputMode = 'url', onModeChange())\"\n      >\n        <div class=\"method-icon\">{{ methodIcons.url }}</div>\n        <div class=\"method-content\">\n          <h4>{{ modeLabels.url }}</h4>\n          <p>{{ modeDescriptions.url }}</p>\n        </div>\n        <div v-if=\"inputMode === 'url'\" class=\"active-indicator\">✓</div>\n      </div>\n    </div>\n\n    <!-- Input Area for File and URL -->\n    <div class=\"input-area-top\" v-if=\"inputMode === 'file' || inputMode === 'url'\">\n      <!-- File Input -->\n      <div v-if=\"inputMode === 'file'\" class=\"file-input\">\n        <label>Upload a document</label>\n        <div \n          :class=\"['file-drop-zone', { \n            'has-file': file, \n            'dragover': isDragOver,\n            'error': hasErrors && isDirty.file \n          }]\"\n          @drop=\"onFileDrop\"\n          @dragover.prevent=\"isDragOver = true\"\n          @dragleave.prevent=\"isDragOver = false\"\n          @click=\"triggerFileInput\"\n        >\n          <input \n            ref=\"fileInput\"\n            id=\"fileInput\"\n            type=\"file\" \n            @change=\"onFileChange\" \n            :disabled=\"isAnalyzing\"\n            accept=\".pdf,.doc,.docx,.txt\"\n            style=\"display: none;\"\n          />\n          <div v-if=\"!file\" class=\"drop-zone-content\">\n            <div class=\"upload-icon\">📁</div>\n            <p>Click to browse or drag & drop</p>\n            <p class=\"file-types\">Supports: PDF, DOC, DOCX, TXT (max 50MB)</p>\n          </div>\n          <div v-else class=\"file-info\">\n            <div class=\"file-icon\">📄</div>\n            <div class=\"file-details\">\n              <strong>{{ file.name }}</strong>\n              <span>{{ formatFileSize(file.size) }}</span>\n            </div>\n            <button \n              v-if=\"!isAnalyzing\"\n              @click.stop=\"clearFile\" \n              class=\"clear-file-btn\"\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n        <!-- Validation Errors -->\n        <div v-if=\"hasErrors && isDirty.file\" class=\"validation-errors\">\n          <div v-for=\"error in currentErrors\" :key=\"error\" class=\"error-message\">\n            <span class=\"error-icon\">⚠️</span>\n            {{ error }}\n          </div>\n        </div>\n      </div>\n\n      <!-- URL Input -->\n      <div v-else-if=\"inputMode === 'url'\" class=\"url-input\">\n        <label>Enter URL to analyze</label>\n        <input \n          v-model=\"url\" \n          type=\"url\" \n          placeholder=\"https://example.com/document.pdf\"\n          :disabled=\"isAnalyzing\"\n          @input=\"handleInputChange\"\n          :class=\"{ 'error': hasErrors && isDirty.url }\"\n        />\n        <div class=\"input-footer\">\n          <span class=\"url-preview\" v-if=\"url && !hasErrors\">Will analyze: {{ url }}</span>\n          <span v-else-if=\"url && hasErrors\" class=\"url-error\">Invalid URL format</span>\n        </div>\n        <!-- Validation Errors -->\n        <div v-if=\"hasErrors && isDirty.url\" class=\"validation-errors\">\n          <div v-for=\"error in currentErrors\" :key=\"error\" class=\"error-message\">\n            <span class=\"error-icon\">⚠️</span>\n            {{ error }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Bottom Row: Quick Citation and Paste Text -->\n    <div class=\"input-methods-bottom\">\n      <div \n        :class=\"['input-method-card', { active: inputMode === 'quick', disabled: isAnalyzing }]\"\n        @click=\"!isAnalyzing && (inputMode = 'quick', onModeChange())\"\n      >\n        <div class=\"method-icon\">{{ methodIcons.quick }}</div>\n        <div class=\"method-content\">\n          <h4>{{ modeLabels.quick }}</h4>\n          <p>{{ modeDescriptions.quick }}</p>\n        </div>\n        <div v-if=\"inputMode === 'quick'\" class=\"active-indicator\">✓</div>\n      </div>\n\n      <div \n        :class=\"['input-method-card', { active: inputMode === 'text', disabled: isAnalyzing }]\"\n        @click=\"!isAnalyzing && (inputMode = 'text', onModeChange())\"\n      >\n        <div class=\"method-icon\">{{ methodIcons.text }}</div>\n        <div class=\"method-content\">\n          <h4>{{ modeLabels.text }}</h4>\n          <p>{{ modeDescriptions.text }}</p>\n        </div>\n        <div v-if=\"inputMode === 'text'\" class=\"active-indicator\">✓</div>\n      </div>\n    </div>\n\n    <!-- Analyze Button -->\n    <div class=\"analyze-section\">\n      <button \n        :class=\"['analyze-btn', { disabled: !canAnalyze || isAnalyzing }]\"\n        :disabled=\"!canAnalyze || isAnalyzing\" \n        @click=\"emitAnalyze\"\n      >\n        <span v-if=\"isAnalyzing\" class=\"analyzing-spinner\"></span>\n        <span v-else class=\"analyze-icon\">🔍</span>\n        {{ isAnalyzing ? 'Analyzing...' : 'Analyze Content' }}\n      </button>\n      <!-- Validation Summary -->\n      <div v-if=\"showValidationWarning && hasErrors\" class=\"validation-summary\">\n        <p>Please fix the errors above before analyzing</p>\n      </div>\n    </div>\n\n    <!-- Input Area for Quick Citation and Text -->\n    <div class=\"input-area-bottom\" v-if=\"inputMode === 'text' || inputMode === 'quick'\">\n      <!-- Text Input -->\n      <div v-if=\"inputMode === 'text'\" class=\"text-input\">\n        <label>Paste your text here</label>\n        <textarea \n          v-model=\"text\" \n          placeholder=\"Paste legal text, citations, or document content here...\"\n          :disabled=\"isAnalyzing\"\n          rows=\"6\"\n          @input=\"handleInputChange\"\n          :class=\"{ 'error': hasErrors && isDirty.text }\"\n        ></textarea>\n        <div class=\"input-footer\">\n          <span class=\"char-count\" :class=\"{ 'error': text.length > VALIDATION_RULES.text.maxLength }\">\n            {{ text.length }} / {{ VALIDATION_RULES.text.maxLength }} characters\n          </span>\n          <span v-if=\"text.length < VALIDATION_RULES.text.minLength && isDirty.text\" class=\"min-length-hint\">\n            Minimum {{ VALIDATION_RULES.text.minLength }} characters required\n          </span>\n        </div>\n        <!-- Validation Errors -->\n        <div v-if=\"hasErrors && isDirty.text\" class=\"validation-errors\">\n          <div v-for=\"error in currentErrors\" :key=\"error\" class=\"error-message\">\n            <span class=\"error-icon\">⚠️</span>\n            {{ error }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Quick Citation Input -->\n      <div v-else-if=\"inputMode === 'quick'\" class=\"quick-citation-input-area\">\n        <label>Enter a single citation</label>\n        <input\n          v-model=\"quickCitation\"\n          type=\"text\"\n          placeholder=\"Enter citation...\"\n          :disabled=\"isAnalyzing\"\n          @keyup.enter=\"emitAnalyze\"\n          class=\"quick-citation-input\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nconst props = defineProps({\n  isAnalyzing: { type: Boolean, default: false }\n});\n\nconst emit = defineEmits(['analyze']);\n\nconst modes = ['text', 'url', 'file', 'quick'];\nconst modeLabels = { \n  text: 'Paste Text', \n  url: 'URL', \n  file: 'Upload File',\n  quick: 'Quick Citation'\n};\nconst modeDescriptions = {\n  text: 'Paste legal text or citations directly',\n  url: 'Analyze content from a web URL',\n  file: 'Upload a document for analysis',\n  quick: 'Enter a single citation and analyze instantly'\n};\nconst methodIcons = {\n  text: '📝',\n  url: '🔗',\n  file: '📁',\n  quick: '🔎'\n};\n\n// Validation constants\nconst VALIDATION_RULES = {\n  text: {\n    minLength: 10,\n    maxLength: 50000,\n    minLengthMessage: 'Text must be at least 10 characters long',\n    maxLengthMessage: 'Text is too long. Maximum 50,000 characters allowed.'\n  },\n  url: {\n    maxLength: 2048,\n    maxLengthMessage: 'URL is too long. Maximum 2,048 characters allowed.'\n  },\n  file: {\n    maxSize: 50 * 1024 * 1024, // 50MB\n    allowedTypes: ['.pdf', '.doc', '.docx', '.txt'],\n    maxSizeMessage: 'File is too large. Maximum 50MB allowed.',\n    typeMessage: 'Invalid file type. Please upload PDF, DOC, DOCX, or TXT files.'\n  }\n};\n\nconst inputMode = ref('text');\nconst text = ref('');\nconst url = ref('');\nconst file = ref(null);\nconst isDragOver = ref(false);\nconst fileInput = ref(null);\nconst quickCitation = ref('');\n\n// Validation state\nconst validationErrors = ref({});\nconst isDirty = ref({ text: false, url: false, file: false, quick: false });\nconst showValidationWarning = ref(false);\n\n// Validation functions\nfunction validateText(text) {\n  const errors = [];\n  const rules = VALIDATION_RULES.text;\n  \n  if (!text.trim()) {\n    errors.push('Text is required');\n  } else if (text.length < rules.minLength) {\n    errors.push(rules.minLengthMessage);\n  } else if (text.length > rules.maxLength) {\n    errors.push(rules.maxLengthMessage);\n  }\n  \n  // Check for non-printable characters\n  if (/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F]/.test(text)) {\n    errors.push('Text contains invalid characters. Please remove any special characters.');\n  }\n  \n  return errors;\n}\n\nfunction validateUrl(url) {\n  const errors = [];\n  const rules = VALIDATION_RULES.url;\n  if (!url.trim()) {\n    errors.push('URL is required');\n  } else if (url.length > rules.maxLength) {\n    errors.push(rules.maxLengthMessage);\n  } else {\n    // Only require http(s) and a dot\n    if (!/^https?:\\/\\//.test(url)) {\n      errors.push('URL must start with http:// or https://');\n    } else if (!/\\./.test(url)) {\n      errors.push('URL must contain a dot');\n    }\n  }\n  return errors;\n}\n\nfunction validateFile(file) {\n  const errors = [];\n  const rules = VALIDATION_RULES.file;\n  \n  if (!file) {\n    errors.push('Please select a file');\n  } else {\n    if (file.size > rules.maxSize) {\n      errors.push(rules.maxSizeMessage);\n    }\n    \n    if (file.size === 0) {\n      errors.push('File is empty');\n    }\n    \n    const extension = '.' + file.name.split('.').pop().toLowerCase();\n    if (!rules.allowedTypes.includes(extension)) {\n      errors.push(rules.typeMessage);\n    }\n  }\n  \n  return errors;\n}\n\n// Real-time validation\nfunction validateCurrentInput() {\n  const errors = {};\n  \n  if (inputMode.value === 'text') {\n    errors.text = validateText(text.value);\n  } else if (inputMode.value === 'url') {\n    errors.url = validateUrl(url.value);\n  } else if (inputMode.value === 'file') {\n    errors.file = validateFile(file.value);\n  }\n  \n  validationErrors.value = errors;\n}\n\n// Watch for changes and validate\nfunction handleInputChange() {\n  isDirty.value[inputMode.value] = true;\n  showValidationWarning.value = false;\n  validateCurrentInput();\n  console.log('[handleInputChange] mode:', inputMode.value, 'file:', file.value, 'url:', url.value, 'hasErrors:', hasErrors.value, 'currentErrors:', currentErrors.value);\n}\n\n// Computed properties\nconst currentErrors = computed(() => {\n  return validationErrors.value[inputMode.value] || [];\n});\n\nconst hasErrors = computed(() => {\n  return currentErrors.value.length > 0;\n});\n\nconst canAnalyze = computed(() => {\n  let result = false;\n  if (props.isAnalyzing) return false;\n  if (inputMode.value === 'text') {\n    result = text.value.length >= VALIDATION_RULES.text.minLength && text.value.length <= VALIDATION_RULES.text.maxLength;\n  } else if (inputMode.value === 'url') {\n    // TEMP: Only require a value for debugging\n    result = url.value.length > 0;\n  } else if (inputMode.value === 'file') {\n    // TEMP: Only require a file for debugging\n    result = !!file.value;\n  } else if (inputMode.value === 'quick') {\n    result = quickCitation.value.trim().length > 0;\n  }\n  console.log('[canAnalyze] mode:', inputMode.value, 'result:', result, 'file:', file.value, 'url:', url.value, 'hasErrors:', hasErrors.value, 'currentErrors:', currentErrors.value);\n  return result;\n});\n\n// Event handlers\nfunction onFileChange(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  file.value = e.target.files[0] || null;\n  isDragOver.value = false;\n  handleInputChange();\n}\n\nfunction onFileDrop(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  const droppedFile = e.dataTransfer.files[0];\n  if (droppedFile) {\n    file.value = droppedFile;\n    handleInputChange();\n  }\n  isDragOver.value = false;\n}\n\nfunction triggerFileInput() {\n  if (!props.isAnalyzing) {\n    fileInput.value?.click();\n  }\n}\n\nfunction clearFile() {\n  file.value = null;\n  if (fileInput.value) {\n    fileInput.value.value = '';\n  }\n  handleInputChange();\n}\n\nfunction emitAnalyze() {\n  if (!canAnalyze.value) {\n    showValidationWarning.value = true;\n    return;\n  }\n  showValidationWarning.value = false;\n  if (inputMode.value === 'text') {\n    emit('analyze', { text: text.value, type: 'text' });\n  } else if (inputMode.value === 'url') {\n    emit('analyze', { url: url.value, type: 'url' });\n  } else if (inputMode.value === 'file') {\n    // Always send FormData with 'type' and optional 'options'\n    const formData = new FormData();\n    formData.append('file', file.value);\n    formData.append('type', 'file');\n    // If you have options, add them here (example: analysis options)\n    // formData.append('options', JSON.stringify(options));\n    emit('analyze', formData);\n  } else if (inputMode.value === 'quick') {\n    emit('analyze', { text: quickCitation.value.trim(), type: 'text', quick: true });\n    quickCitation.value = '';\n  }\n}\n\nfunction formatFileSize(bytes) {\n  if (!bytes) return '0 Bytes';\n  const k = 1024, sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// Watch for mode changes to reset validation and force validation\nfunction onModeChange() {\n  validationErrors.value = {};\n  isDirty.value = { text: false, url: false, file: false, quick: false };\n  showValidationWarning.value = false;\n  validateCurrentInput();\n  console.log('[onModeChange] inputMode:', inputMode.value, 'file:', file.value, 'url:', url.value, 'hasErrors:', hasErrors.value, 'currentErrors:', currentErrors.value);\n}\n</script>\n\n<style scoped>\n.unified-input {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.input-methods-top {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  flex-wrap: wrap;\n}\n\n.input-methods-bottom {\n  display: flex;\n  gap: 1rem;\n  margin-top: 2rem;\n  flex-wrap: wrap;\n}\n\n.input-method-card {\n  background: white;\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  padding: 1.5rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  flex: 1;\n  min-width: 200px;\n  max-width: 300px;\n}\n\n.input-method-card:hover:not(.disabled) {\n  border-color: #007bff;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 123, 255, 0.15);\n}\n\n.input-method-card.active {\n  border-color: #007bff;\n  background: #f8f9ff;\n}\n\n.input-method-card.disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.method-icon {\n  font-size: 2rem;\n  flex-shrink: 0;\n}\n\n.method-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.method-content h4 {\n  margin: 0 0 0.5rem 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n}\n\n.method-content p {\n  margin: 0;\n  font-size: 0.9rem;\n  color: #6c757d;\n  line-height: 1.3;\n}\n\n.active-indicator {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: #007bff;\n  color: white;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.8rem;\n}\n\n.input-area-top {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  animation: slideDown 0.3s ease-out;\n}\n\n.input-area-bottom {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  margin-top: 2rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  animation: slideDown 0.3s ease-out;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.input-area label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  color: #495057;\n}\n\n.text-input textarea,\n.url-input input {\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #e9ecef;\n  border-radius: 8px;\n  font-size: 1rem;\n  transition: border-color 0.2s;\n}\n\n.text-input textarea:focus,\n.url-input input:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\n.text-input textarea.error,\n.url-input input.error {\n  border-color: #dc3545;\n  background-color: #fff5f5;\n}\n\n.text-input textarea {\n  resize: vertical;\n  min-height: 120px;\n}\n\n.input-footer {\n  margin-top: 0.5rem;\n  font-size: 0.9rem;\n  color: #6c757d;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.char-count.error {\n  color: #dc3545;\n  font-weight: 600;\n}\n\n.min-length-hint {\n  color: #856404;\n  background: #fff3cd;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-size: 0.8rem;\n}\n\n.url-error {\n  color: #dc3545;\n  font-weight: 600;\n}\n\n.file-drop-zone {\n  border: 2px dashed #dee2e6;\n  border-radius: 8px;\n  padding: 2rem;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.file-drop-zone:hover:not(.disabled) {\n  border-color: #007bff;\n  background: #f8f9ff;\n}\n\n.file-drop-zone.dragover {\n  border-color: #007bff;\n  background: #f8f9ff;\n}\n\n.file-drop-zone.has-file {\n  border-style: solid;\n  border-color: #28a745;\n  background: #f8fff9;\n}\n\n.file-drop-zone.error {\n  border-color: #dc3545;\n  background: #fff5f5;\n}\n\n.drop-zone-content {\n  color: #6c757d;\n}\n\n.upload-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n}\n\n.file-types {\n  font-size: 0.8rem;\n  margin-top: 0.5rem;\n}\n\n.file-info {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.file-icon {\n  font-size: 2rem;\n}\n\n.file-details {\n  flex: 1;\n  text-align: left;\n}\n\n.file-details strong {\n  display: block;\n  margin-bottom: 0.25rem;\n}\n\n.clear-file-btn {\n  background: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  font-size: 1rem;\n}\n\n.analyze-section {\n  text-align: center;\n}\n\n.analyze-btn {\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 12px;\n  padding: 1rem 2rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.analyze-btn:hover:not(.disabled) {\n  background: #0056b3;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);\n}\n\n.analyze-btn.disabled {\n  background: #6c757d;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.analyzing-spinner {\n  width: 20px;\n  height: 20px;\n  border: 2px solid transparent;\n  border-top: 2px solid white;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.analyze-icon {\n  font-size: 1.2rem;\n}\n\n.validation-errors {\n  margin-top: 0.75rem;\n  padding: 0.75rem;\n  background: #f8d7da;\n  border: 1px solid #f5c6cb;\n  border-radius: 8px;\n}\n\n.error-message {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  color: #721c24;\n  font-size: 0.9rem;\n}\n\n.error-message:last-child {\n  margin-bottom: 0;\n}\n\n.error-icon {\n  margin-right: 0.5rem;\n  font-size: 1rem;\n}\n\n.validation-summary {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  background: #fff3cd;\n  border: 1px solid #ffeaa7;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.validation-summary p {\n  margin: 0;\n  color: #856404;\n  font-weight: 600;\n}\n\n/* Prevent accidental PDF preview overlays */\nembed, object, iframe {\n  display: none !important;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .input-methods-top,\n  .input-methods-bottom {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n  \n  .input-method-card {\n    min-width: auto;\n    max-width: none;\n    padding: 1rem;\n  }\n  \n  .method-icon {\n    font-size: 1.5rem;\n  }\n  \n  .method-content h4 {\n    font-size: 1rem;\n  }\n  \n  .method-content p {\n    font-size: 0.8rem;\n  }\n  \n  .input-area-top,\n  .input-area-bottom {\n    padding: 1.5rem;\n    margin-bottom: 1.5rem;\n    margin-top: 1.5rem;\n  }\n  \n  .analyze-btn {\n    padding: 0.875rem 1.5rem;\n    font-size: 1rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .unified-input {\n    max-width: 100%;\n    padding: 0 1rem;\n  }\n  \n  .input-method-card {\n    padding: 0.875rem;\n  }\n  \n  .method-icon {\n    font-size: 1.25rem;\n  }\n  \n  .input-area-top,\n  .input-area-bottom {\n    padding: 1rem;\n  }\n  \n  .text-input textarea,\n  .url-input input {\n    padding: 0.75rem;\n    font-size: 0.9rem;\n  }\n}\n</style> ","<template>\r\n  <transition name=\"toast-fade\">\r\n    <div v-if=\"visible\" :class=\"['toast', type]\">\r\n      <span class=\"toast-icon\">{{ icon }}</span>\r\n      <span class=\"toast-message\">{{ message }}</span>\r\n      <button class=\"toast-close\" @click=\"close\">×</button>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, computed } from 'vue';\r\nconst props = defineProps({\r\n  message: String,\r\n  type: { type: String, default: 'info' }, // 'success', 'error', 'info'\r\n  duration: { type: Number, default: 3500 }\r\n});\r\nconst emit = defineEmits(['close']);\r\nconst visible = ref(true);\r\n\r\nconst icon = computed(() => {\r\n  if (props.type === 'success') return '✅';\r\n  if (props.type === 'error') return '❌';\r\n  return 'ℹ️';\r\n});\r\n\r\nfunction close() {\r\n  visible.value = false;\r\n  emit('close');\r\n}\r\n\r\nwatch(() => props.message, (msg) => {\r\n  if (msg) {\r\n    visible.value = true;\r\n    setTimeout(close, props.duration);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.toast {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  background: #fff;\r\n  color: #333;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.15);\r\n  padding: 1rem 1.5rem;\r\n  min-width: 220px;\r\n  max-width: 400px;\r\n  font-size: 1rem;\r\n  position: fixed;\r\n  top: 2rem;\r\n  right: 2rem;\r\n  z-index: 9999;\r\n  border-left: 6px solid #007bff;\r\n  animation: toast-in 0.3s;\r\n}\r\n.toast.success { border-left-color: #28a745; }\r\n.toast.error { border-left-color: #dc3545; }\r\n.toast.info { border-left-color: #007bff; }\r\n.toast-icon { font-size: 1.5rem; }\r\n.toast-message { flex: 1; }\r\n.toast-close {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  color: #888;\r\n  cursor: pointer;\r\n  margin-left: 0.5rem;\r\n}\r\n@keyframes toast-in {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n.toast-fade-enter-active, .toast-fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n.toast-fade-enter-from, .toast-fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style> ","<template>\r\n  <div class=\"skeleton-loader\" :style=\"{ height: height, width: width }\">\r\n    <div v-for=\"n in lines\" :key=\"n\" class=\"skeleton-line\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n  lines: { type: Number, default: 3 },\r\n  height: { type: String, default: 'auto' },\r\n  width: { type: String, default: '100%' }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.skeleton-loader {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n  width: 100%;\r\n}\r\n.skeleton-line {\r\n  height: 1.2em;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n  border-radius: 6px;\r\n  animation: skeleton-pulse 1.2s infinite ease-in-out;\r\n}\r\n@keyframes skeleton-pulse {\r\n  0% { opacity: 1; }\r\n  50% { opacity: 0.5; }\r\n  100% { opacity: 1; }\r\n}\r\n</style> ","<template>\n  <div class=\"enhanced-validator\">\n    <Toast v-if=\"toastMessage\" :message=\"toastMessage\" :type=\"toastType\" @close=\"clearToast\" />\n    <!-- Header -->\n    <div class=\"header text-center mb-4\">\n      <button class=\"btn btn-link back-btn\" @click=\"goHome\">\n        <i class=\"bi bi-arrow-left\"></i> Back to Home\n      </button>\n      <h1 class=\"results-title\">Citation Verification Results</h1>\n    </div>\n\n    <!-- Main Content -->\n    <div class=\"main-content\">\n      <!-- Progress Section -->\n      <div v-if=\"showLoading && !results\" class=\"progress-container\">\n        <SkeletonLoader :lines=\"4\" height=\"6em\" />\n      </div>\n\n      <!-- Processing Progress Section -->\n      <div v-if=\"showLoading && !showTimer\" class=\"processing-section mb-4\">\n        <div class=\"card processing-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"processing-header\">\n              <div class=\"spinner-container\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                  <span class=\"visually-hidden\">Processing...</span>\n                </div>\n              </div>\n              <h5 class=\"card-title mt-3\">\n                <i class=\"fas fa-cog fa-spin me-2 text-primary\"></i>\n                <i class=\"bi bi-gear-fill spinning me-2 text-primary\" style=\"display: none;\"></i>\n                Processing Citations\n              </h5>\n            </div>\n            <div class=\"processing-content\">\n              <p class=\"text-muted mb-3\">Extracting and analyzing citations from your document...</p>\n              \n              <!-- Animated progress dots -->\n              <div class=\"progress-dots\">\n                <span class=\"dot\"></span>\n                <span class=\"dot\"></span>\n                <span class=\"dot\"></span>\n              </div>\n              \n              <!-- Processing steps -->\n              <div class=\"processing-steps mt-4\">\n                <div class=\"step active\">\n                  <i class=\"bi bi-file-earmark-text text-primary\"></i>\n                  <span>Document Analysis</span>\n                </div>\n                <div class=\"step\">\n                  <i class=\"bi bi-search text-muted\"></i>\n                  <span>Citation Extraction</span>\n                </div>\n                <div class=\"step\">\n                  <i class=\"bi bi-check-circle text-muted\"></i>\n                  <span>Verification</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n            \n      <!-- Enhanced Progress Bar for >20 citations -->\n      <div v-if=\"showLoading && showTimer\" class=\"processing-section mb-4\">\n        <div class=\"card processing-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"processing-header\">\n              <div class=\"spinner-container\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                  <span class=\"visually-hidden\">Processing...</span>\n                </div>\n              </div>\n              <h5 class=\"card-title mt-3\">\n                <i class=\"fas fa-cog fa-spin me-2 text-primary\"></i>\n                <i class=\"bi bi-gear-fill spinning me-2 text-primary\" style=\"display: none;\"></i>\n                Processing Citations\n              </h5>\n            </div>\n            <div class=\"processing-content\">\n              <div class=\"progress-info mb-3\">\n                <div class=\"progress-stats\">\n                  <span class=\"stat\">\n                    <i class=\"bi bi-list-ol text-primary\"></i>\n                    {{ progressCurrent }} of {{ progressTotal }} citations\n                  </span>\n                  <span class=\"stat\">\n                    <i class=\"bi bi-clock text-primary\"></i>\n                    {{ formatTime(elapsedTime) }} elapsed\n                  </span>\n                </div>\n              </div>\n              \n              <!-- Enhanced Progress Bar -->\n              <div class=\"progress-container\">\n                <div class=\"progress\" style=\"height: 1.5rem; border-radius: 0.75rem;\">\n                  <div \n                    class=\"progress-bar progress-bar-striped progress-bar-animated\" \n                    :class=\"progressBarClass\" \n                    role=\"progressbar\"\n                    :style=\"{ width: progressPercent + '%' }\" \n                    :aria-valuenow=\"progressPercent\" \n                    aria-valuemin=\"0\" \n                    aria-valuemax=\"100\"\n                  >\n                    <span class=\"progress-text\">{{ progressPercent }}%</span>\n                  </div>\n                </div>\n                <div class=\"progress-label mt-2\">\n                  <small class=\"text-muted\">\n                    {{ progressPercent === 100 ? 'Finalizing results...' : 'Processing citations...' }}\n                  </small>\n                </div>\n              </div>\n              \n              <!-- Processing steps with progress -->\n              <div class=\"processing-steps mt-4\">\n                <div class=\"step\" :class=\"{ active: progressPercent < 33 }\">\n                  <i class=\"bi bi-file-earmark-text\" :class=\"progressPercent < 33 ? 'text-primary' : 'text-success'\"></i>\n                  <span>Document Analysis</span>\n                </div>\n                <div class=\"step\" :class=\"{ active: progressPercent >= 33 && progressPercent < 66 }\">\n                  <i class=\"bi bi-search\" :class=\"progressPercent >= 33 && progressPercent < 66 ? 'text-primary' : progressPercent >= 66 ? 'text-success' : 'text-muted'\"></i>\n                  <span>Citation Extraction</span>\n                </div>\n                <div class=\"step\" :class=\"{ active: progressPercent >= 66 }\">\n                  <i class=\"bi bi-check-circle\" :class=\"progressPercent >= 66 ? 'text-primary' : 'text-muted'\"></i>\n                  <span>Verification</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Results Section -->\n      <div v-if=\"results && !showLoading\" class=\"results-container\">\n        <CitationResults\n          :results=\"results\"\n          @apply-correction=\"applyCorrection\"\n          @copy-results=\"copyResults\"\n          @download-results=\"downloadResults\"\n          @toast=\"showToast\"\n        />\n      </div>\n\n      <!-- Error Display -->\n      <div v-if=\"error && !showLoading\" class=\"error-container\">\n        <div class=\"error-card\">\n          <i class=\"error-icon\">❌</i>\n          <h3>Analysis Failed</h3>\n          <p>{{ error }}</p>\n        </div>\n      </div>\n\n      <!-- No Results State -->\n      <div v-if=\"!results && !showLoading && !error\" class=\"no-results-state text-center mt-5\">\n        <p class=\"lead\">No results to display.<br />Please return to the home page to start a new analysis.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick, onUnmounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useApi } from '@/composables/useApi';\nimport { useLoadingState } from '@/composables/useLoadingState';\nimport api from '@/api/api';\nimport { useProcessingTime } from '../composables/useProcessingTime';\n\n// Components\nimport CitationResults from '@/components/CitationResults.vue';\nimport UnifiedInput from '@/components/UnifiedInput.vue';\nimport Toast from '@/components/Toast.vue';\nimport SkeletonLoader from '@/components/SkeletonLoader.vue';\n\nexport default {\n  name: 'EnhancedValidator',\n  components: {\n    CitationResults,\n    UnifiedInput,\n    Toast,\n    SkeletonLoader\n  },\n  setup() {\n    // ===== REACTIVE STATE =====\n    const route = useRoute();\n    const router = useRouter();\n    \n    // Data State\n    const results = ref(null);\n    const error = ref(null);\n    \n    // API State\n    const { \n      execute, \n      data: apiData,\n      isLoading,\n      error: apiError,\n      status: apiStatus,\n      cancel: cancelValidation\n    } = useApi({\n      loadingMessage: 'Validating citation...',\n      showLoading: true\n    });\n    \n    const hasActiveRequest = ref(false);\n    const { isLoading: isGlobalLoading } = useLoadingState();\n    const showLoading = computed(() => isLoading.value || isGlobalLoading.value || hasActiveRequest.value);\n\n    // Composables\n    const {\n      elapsedTime,\n      remainingTime,\n      totalProgress,\n      currentStep,\n      currentStepProgress,\n      processingSteps,\n      actualTimes,\n      citationInfo,\n      rateLimitInfo,\n      timeout,\n      processingError,\n      canRetry,\n      startProcessing,\n      stopProcessing,\n      updateProgress,\n      setSteps,\n      resetProcessing,\n      setProcessingError,\n      estimatedTotalTime\n    } = useProcessingTime();\n\n    // Add new reactive state for enhanced progress tracking\n    const queuePosition = ref(0);\n    const estimatedQueueTime = ref(null);\n    const activeRequestId = ref(null);\n    const pollInterval = ref(null);\n    let lastPolledTaskId = ref(null);\n\n    // Toast state\n    const toastMessage = ref('');\n    const toastType = ref('info');\n    const showToast = (msg, type = 'info') => {\n      toastMessage.value = msg;\n      toastType.value = type;\n    };\n    const clearToast = () => {\n      toastMessage.value = '';\n    };\n\n    // Fallback timer state\n    const fallbackTimeout = ref(null);\n    const fallbackTimeoutMs = 120000; // 2 minutes\n\n    // Error state for fallback\n    const fallbackError = ref('');\n\n    // Add showTimer computed property\n    const showTimer = computed(() => {\n      return citationInfo.value && citationInfo.value.total >= 35;\n    });\n\n    // Progress bar state\n    const progressCurrent = ref(0);\n    const progressTotal = computed(() => (citationInfo.value && citationInfo.value.total) ? citationInfo.value.total : 0);\n    const progressPercent = computed(() => {\n      if (!progressTotal.value) return 0;\n      return Math.min(100, Math.round((progressCurrent.value / progressTotal.value) * 100));\n    });\n    const progressBarClass = computed(() => {\n      if (progressPercent.value >= 80) return 'bg-success';\n      if (progressPercent.value >= 50) return 'bg-info';\n      if (progressPercent.value >= 30) return 'bg-warning';\n      return 'bg-danger';\n    });\n    let progressTimer = null;\n\n    // ===== HELPER FUNCTIONS =====\n    function formatTime(seconds) {\n      if (!seconds || seconds < 0) return '0s';\n      \n      const hours = Math.floor(seconds / 3600);\n      const minutes = Math.floor((seconds % 3600) / 60);\n      const secs = Math.floor(seconds % 60);\n      \n      if (hours > 0) {\n        return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n      } else {\n        return `${minutes}:${secs.toString().padStart(2, '0')}`;\n      }\n    }\n    \n    function getProgressBarClass(value) {\n      if (value >= 0.8) return 'bg-success';\n      if (value >= 0.5) return 'bg-info';\n      if (value >= 0.3) return 'bg-warning';\n      return 'bg-danger';\n    }\n    \n    // ===== CORE FUNCTIONS =====\n    // Clear all results and reset form\n    function clearResults() {\n      results.value = null;\n      error.value = null;\n      resetProcessing();\n    }\n    \n    // Helper: Normalize citations for frontend display\n    function normalizeCitations(citations) {\n      console.log('Normalizing citations:', citations);\n      \n      return (citations || []).map(citation => {\n        // Convert citation array to string\n        let citationText = citation.citation;\n        if (Array.isArray(citationText)) {\n          citationText = citationText.join('; ');\n        }\n\n        // Convert verified to boolean\n        let verified = false;\n        if (typeof citation.verified === 'string') {\n          verified = citation.verified === 'true' || citation.verified === 'true_by_parallel';\n        } else {\n          verified = !!citation.verified;\n        }\n\n        // Calculate citation score (0-4)\n        let score = 0;\n        if (citation.case_name && citation.case_name !== 'N/A') {\n          score += 2;\n        }\n        if (citation.extracted_case_name && citation.extracted_case_name !== 'N/A' && \n            citation.case_name && citation.case_name !== 'N/A') {\n          const canonicalWords = citation.case_name.toLowerCase().split(/\\s+/).filter(w => w.length > 2);\n          const extractedWords = citation.extracted_case_name.toLowerCase().split(/\\s+/).filter(w => w.length > 2);\n          const commonWords = canonicalWords.filter(word => extractedWords.includes(word));\n          const similarity = commonWords.length / Math.max(canonicalWords.length, extractedWords.length);\n          if (similarity >= 0.5) {\n            score += 1;\n          }\n        }\n        if (citation.extracted_date && citation.canonical_date) {\n          const extractedYear = citation.extracted_date.toString().substring(0, 4);\n          const canonicalYear = citation.canonical_date.toString().substring(0, 4);\n          if (extractedYear === canonicalYear && extractedYear.length === 4) {\n            score += 1;\n          }\n        }\n        let scoreColor = 'red';\n        if (score === 4) scoreColor = 'green';\n        else if (score === 3) scoreColor = 'green';\n        else if (score === 2) scoreColor = 'yellow';\n        else if (score === 1) scoreColor = 'orange';\n\n        const normalizedCitation = {\n          ...citation,\n          citation: citationText,\n          verified: verified,\n          valid: verified,\n          score: score,\n          scoreColor: scoreColor,\n          case_name: citation.case_name || 'N/A',\n          extracted_case_name: citation.extracted_case_name || 'N/A',\n          hinted_case_name: citation.hinted_case_name || 'N/A',\n          canonical_date: citation.canonical_date || null,\n          extracted_date: citation.extracted_date || null,\n          metadata: {\n            case_name: citation.case_name,\n            canonical_date: citation.canonical_date,\n            court: citation.court,\n            confidence: citation.confidence,\n            method: citation.method,\n            pattern: citation.pattern\n          },\n          details: {\n            case_name: citation.case_name,\n            canonical_date: citation.canonical_date,\n            court: citation.court,\n            confidence: citation.confidence,\n            method: citation.method,\n            pattern: citation.pattern\n          }\n        };\n        console.log('Normalized citation:', {\n          citation: normalizedCitation.citation,\n          case_name: normalizedCitation.case_name,\n          extracted_case_name: normalizedCitation.extracted_case_name,\n          verified: normalizedCitation.verified,\n          score: normalizedCitation.score\n        });\n        return normalizedCitation;\n      });\n    }\n\n    // Enhanced progress tracking function\n    async function pollTaskStatus(taskId) {\n      if (!taskId) return;\n      \n      try {\n        const response = await api.get(`/task_status/${taskId}`);\n        const data = response.data;\n        \n        if (data.status === 'completed') {\n          // Task completed successfully\n          // Use the 'results' field directly, fallback to 'citations' for legacy\n          const citationResults = Array.isArray(data.results) ? data.results : (data.citations || []);\n          \n          // Create the proper structure expected by CitationResults component\n          results.value = {\n            citations: normalizeCitations(citationResults),\n            metadata: data.metadata || {},\n            total_citations: citationResults.length,\n            verified_count: citationResults.filter(c => c.verified || c.valid || c.data?.valid || c.data?.found).length,\n            unverified_count: citationResults.filter(c => !(c.verified || c.valid || c.data?.valid || c.data?.found)).length\n          };\n          \n          hasActiveRequest.value = false;\n          stopProcessing();\n          isLoading.value = false;\n          if (typeof isGlobalLoading !== 'undefined' && isGlobalLoading.value !== undefined) {\n            isGlobalLoading.value = false;\n          }\n          \n          // Show success toast\n          showToast('Citation analysis completed successfully!', 'success');\n          \n          // Clear polling\n          if (pollInterval.value) {\n            clearInterval(pollInterval.value);\n            pollInterval.value = null;\n          }\n          \n          // Show a message if no results\n          if (citationResults.length === 0) {\n            let debugMsg = 'No citations found in the provided text or document.';\n            if (data.status_message && data.status_message.toLowerCase().includes('rate limit')) {\n              debugMsg += ' (Possible cause: search engine rate limiting)';\n            }\n            if (data.error) {\n              debugMsg += ` (Backend error: ${data.error})`;\n            }\n            error.value = debugMsg;\n          }\n\n          // Debug: Show raw backend response if debug flag is set\n          if (window && window.localStorage && window.localStorage.getItem('debugMode') === 'true') {\n            error.value += '\\n[DEBUG] Raw backend response: ' + JSON.stringify(data, null, 2);\n          }\n        } else if (data.status === 'failed') {\n          // Task failed\n          error.value = data.error || 'Processing failed';\n          hasActiveRequest.value = false;\n          setProcessingError(data.error || 'Processing failed');\n          \n          // Show error toast\n          showToast(`Processing failed: ${data.error || 'Unknown error'}`, 'error');\n          \n          // Clear polling\n          if (pollInterval.value) {\n            clearInterval(pollInterval.value);\n            pollInterval.value = null;\n          }\n          \n        } else {\n          // Task is still processing - update progress\n          hasActiveRequest.value = true;\n          \n          // Update processing time with backend data\n          if (data.estimated_total_time && data.steps) {\n            if (lastPolledTaskId.value !== taskId) {\n              startProcessing({\n                estimated_total_time: data.estimated_total_time,\n                steps: data.steps\n              });\n              lastPolledTaskId.value = taskId;\n            }\n          } else if (data.estimated_total_time) {\n            if (lastPolledTaskId.value !== taskId) {\n              startProcessing(data.estimated_total_time);\n              lastPolledTaskId.value = taskId;\n            }\n          }\n          \n          // Update current step and progress\n          if (data.current_step) {\n            updateProgress({\n              step: data.current_step,\n              progress: data.progress || 0\n            });\n          }\n          \n          // Update citation info if available\n          if (data.total_citations !== undefined) {\n            citationInfo.value = {\n              total: data.total_citations,\n              processed: data.processed_citations || 0,\n              unique: data.unique_citations || 0\n            };\n          }\n          \n          // Continue polling\n          if (!pollInterval.value) {\n            pollInterval.value = setInterval(() => pollTaskStatus(taskId), 2000);\n          }\n        }\n        \n        onProgressOrResult(); // Clear fallback timer on any progress\n      } catch (err) {\n        console.error('Error polling task status:', err);\n        error.value = 'Failed to check processing status';\n        hasActiveRequest.value = false;\n        setProcessingError('Failed to check processing status');\n        \n        // Clear polling on error\n        if (pollInterval.value) {\n          clearInterval(pollInterval.value);\n          pollInterval.value = null;\n        }\n      }\n    }\n\n    // Enhanced form submission with immediate progress feedback\n    async function handleSubmit(formData) {\n      try {\n        clearResults();\n        hasActiveRequest.value = true;\n        lastPolledTaskId.value = null;\n        \n        // Start processing immediately with default estimates\n        startProcessing(30); // Default 30 seconds estimate\n        updateProgress({\n          step: 'Submitting request...',\n          progress: 5\n        });\n        \n        const response = await execute(() => api.post('/analyze', formData));\n        \n        if (response && response.task_id) {\n          activeRequestId.value = response.task_id;\n          \n          // Update progress to show task created\n          updateProgress({\n            step: 'Task created, starting processing...',\n            progress: 10\n          });\n          \n          // Start polling for status updates\n          await pollTaskStatus(response.task_id);\n          \n        } else {\n          // Direct response (no async task)\n          const citationResults = response?.citations || [];\n          results.value = {\n            citations: normalizeCitations(citationResults),\n            metadata: response?.metadata || {},\n            total_citations: citationResults.length,\n            verified_count: citationResults.filter(c => c.verified || c.valid || c.data?.valid || c.data?.found).length,\n            unverified_count: citationResults.filter(c => !(c.verified || c.valid || c.data?.valid || c.data?.found)).length\n          };\n          hasActiveRequest.value = false;\n          stopProcessing();\n          isLoading.value = false;\n          if (typeof isGlobalLoading !== 'undefined' && isGlobalLoading.value !== undefined) {\n            isGlobalLoading.value = false;\n          }\n          showToast('Citation analysis completed!', 'success');\n        }\n        \n      } catch (err) {\n        console.error('Error submitting form:', err);\n        error.value = err.message || 'Failed to submit request';\n        hasActiveRequest.value = false;\n        setProcessingError(err.message || 'Failed to submit request');\n        showToast(`Error: ${err.message || 'Failed to submit request'}`, 'error');\n      }\n    }\n\n    // Add method to handle retry\n    const retryProcessing = async () => {\n      if (!activeRequestId.value) return;\n      \n      try {\n        processingError.value = null;\n        canRetry.value = false;\n        resetProcessing();\n        \n        // Cancel the current request if it exists\n        await api.cancelRequest(activeRequestId.value);\n        \n        // Start a new request with the same parameters\n        const currentRequest = api.getRequestStatus(activeRequestId.value);\n        if (currentRequest) {\n          const { type, input } = currentRequest;\n          await analyzeInput(input, type);\n        }\n      } catch (error) {\n        processingError.value = `Failed to retry: ${error.message}`;\n        canRetry.value = true;\n      }\n    };\n\n    // Add method to analyze input\n    const analyzeInput = async (input, type) => {\n      try {\n        if (type === 'file') {\n          await handleFileAnalyze(input);\n        } else if (type === 'url') {\n          await handleUrlAnalyze({ url: input });\n        } else if (type === 'text') {\n          await handleTextAnalyze({ text: input });\n        }\n      } catch (error) {\n        processingError.value = `Failed to analyze input: ${error.message}`;\n        canRetry.value = true;\n      }\n    };\n\n    // ===== RESULT HANDLERS =====\n    const handleResults = (responseData) => {\n      try {\n        const rawCitations = (Array.isArray(responseData.validation_results) && responseData.validation_results.length > 0)\n          ? responseData.validation_results\n          : (responseData.citations || []);\n        \n        results.value = {\n          ...responseData,\n          citations: normalizeCitations(rawCitations),\n          timestamp: new Date().toISOString()\n        };\n        \n        isLoading.value = false;\n        error.value = null;\n        hasActiveRequest.value = false;\n        activeRequestId.value = null;\n        \n        // Complete processing\n        if (typeof isGlobalLoading !== 'undefined' && isGlobalLoading.value !== undefined) {\n          isGlobalLoading.value = false;\n        }\n        \n        // Scroll to results\n        nextTick(() => {\n          const resultsElement = document.querySelector('.results-container');\n          if (resultsElement) {\n            resultsElement.scrollIntoView({ behavior: 'smooth' });\n          }\n        });\n        \n      } catch (err) {\n        console.error('Error handling results:', err);\n        error.value = 'Failed to process results';\n        isLoading.value = false;\n      }\n    };\n\n    const handleError = (err) => {\n      console.error('Analysis error:', err);\n      error.value = err.message || 'An error occurred during analysis';\n      isLoading.value = false;\n      hasActiveRequest.value = false;\n      activeRequestId.value = null;\n      processingError.value = err.message || 'Analysis failed';\n      canRetry.value = true;\n      showToast(error.value, 'error');\n    };\n\n    // ===== API HANDLER FUNCTIONS =====\n    const handleTextAnalyze = async ({ text, options }) => {\n      isLoading.value = true;\n      error.value = null;\n      results.value = null;\n      \n      try {\n        // Send text data to the analyze endpoint\n        const response = await api.post('/analyze', {\n          text: text,\n          type: 'text'\n        }, {\n          timeout: 300000 // 5 minutes for text processing\n        });\n        \n        // Check if this is an async response with task_id\n        if (response.data.status === 'processing' && response.data.task_id) {\n          // Handle async processing\n          hasActiveRequest.value = true;\n          activeRequestId.value = response.data.task_id;\n          // Start polling for status updates\n          if (!pollInterval.value) {\n            pollInterval.value = setInterval(() => pollTaskStatus(response.data.task_id), 2000);\n          }\n        } else {\n          // Handle immediate response\n          handleResults(response.data);\n          isLoading.value = false;\n        }\n      } catch (err) {\n        handleError(err);\n      }\n    };\n\n    const handleFileAnalyze = async (input) => {\n      isLoading.value = true;\n      error.value = null;\n      results.value = null;\n      try {\n        let formData;\n        if (input instanceof FormData) {\n          formData = input;\n        } else {\n          formData = new FormData();\n          formData.append('file', input.file);\n          formData.append('type', 'file');\n        }\n        // Send file directly to the analyze endpoint\n        const response = await api.post('/analyze', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          timeout: 300000 // 5 minutes for file processing\n        });\n        // Check if this is an async response with task_id\n        if (response.data.status === 'processing' && response.data.task_id) {\n          // Handle async processing\n          hasActiveRequest.value = true;\n          activeRequestId.value = response.data.task_id;\n          // Start polling for status updates\n          if (!pollInterval.value) {\n            pollInterval.value = setInterval(() => pollTaskStatus(response.data.task_id), 2000);\n          }\n        } else {\n          // Handle immediate response\n          handleResults(response.data);\n          isLoading.value = false;\n        }\n      } catch (err) {\n        handleError(err);\n      }\n    };\n\n    const handleUrlAnalyze = async ({ url }) => {\n      isLoading.value = true;\n      error.value = null;\n      results.value = null;\n      \n      try {\n        // Send URL data to the analyze endpoint\n        const response = await api.post('/analyze', {\n          url: url,\n          type: 'url'\n        }, {\n          timeout: 300000 // 5 minutes for URL processing\n        });\n        \n        // Check if this is an async response with task_id\n        if (response.data.status === 'processing' && response.data.task_id) {\n          // Handle async processing\n          hasActiveRequest.value = true;\n          activeRequestId.value = response.data.task_id;\n          // Start polling for status updates\n          if (!pollInterval.value) {\n            pollInterval.value = setInterval(() => pollTaskStatus(response.data.task_id), 2000);\n          }\n        } else {\n          // Handle immediate response\n          handleResults(response.data);\n          isLoading.value = false;\n        }\n      } catch (err) {\n        handleError(err);\n      }\n    };\n\n    // Unified handler for all input types\n    function handleUnifiedAnalyze(payload) {\n      console.log('handleUnifiedAnalyze payload:', payload);\n      // Reset and start progress tracking for all input types\n      resetProcessing();\n      setSteps([\n        { step: 'Preparing analysis', estimated_time: 5 },\n        { step: 'Processing content', estimated_time: 30 },\n        { step: 'Verifying citations', estimated_time: 60 }\n      ]);\n      startProcessing();\n      hasActiveRequest.value = true;\n      error.value = null;\n      results.value = null;\n      \n      if (payload.file) {\n        handleFileAnalyze(payload);\n      } else if (payload.url) {\n        handleUrlAnalyze(payload);\n      } else if (payload.text) {\n        // If quick mode, treat as single citation\n        if (payload.quick) {\n          handleTextAnalyze({ text: payload.text, options: { mode: 'single' } });\n        } else {\n          handleTextAnalyze({ text: payload.text, options: { mode: 'multi' } });\n        }\n      }\n      onProcessingStart(); // Start fallback timer\n    }\n\n    // ===== LIFECYCLE HOOKS =====\n    onMounted(() => {\n      let input = { ...route.query };\n      \n      // Check for results in router state first (from HomeView)\n      if (router.currentRoute.value.state && router.currentRoute.value.state.results) {\n        console.log('Found results in router state:', router.currentRoute.value.state.results);\n        const responseData = router.currentRoute.value.state.results;\n        \n        // Handle the results directly\n        if (responseData.citations && responseData.citations.length > 0) {\n          results.value = {\n            citations: normalizeCitations(responseData.citations),\n            metadata: responseData.metadata || {},\n            total_citations: responseData.citations.length,\n            verified_count: responseData.citations.filter(c => c.verified || c.valid || c.data?.valid || c.data?.found).length,\n            unverified_count: responseData.citations.filter(c => !(c.verified || c.valid || c.data?.valid || c.data?.found)).length\n          };\n          showToast('Citation analysis completed successfully!', 'success');\n        } else {\n          error.value = 'No citations found in the provided text or document.';\n        }\n        return;\n      }\n      \n      // Check for task_id (async processing)\n      if (input.task_id) {\n        console.log('Found task_id, starting polling:', input.task_id);\n        activeRequestId.value = input.task_id;\n        hasActiveRequest.value = true;\n        pollTaskStatus(input.task_id);\n        return;\n      }\n      \n      // Check localStorage for recent input if no query params\n      if ((!input.text && !input.url && !input.fileName) && localStorage.getItem('lastCitationInput')) {\n        try {\n          input = JSON.parse(localStorage.getItem('lastCitationInput'));\n        } catch (e) {\n          input = {};\n        }\n      }\n      \n      // If we have input, trigger analysis\n      if (input.text || input.url || input.fileName) {\n        console.log('Triggering analysis with input:', input);\n        \n        // Clear any existing results\n        clearResults();\n        \n        // Trigger analysis based on input type\n        if (input.text) {\n          handleTextAnalyze({ text: input.text });\n        } else if (input.url) {\n          handleUrlAnalyze({ url: input.url });\n        } else if (input.fileName) {\n          // For files, we can't restore the actual file, so show an error\n          error.value = 'File upload not available from history. Please upload the file again.';\n        }\n      } else {\n        // No input found, show no results\n        results.value = null;\n      }\n\n      // Watch for citation count and start progress if needed\n      if (showTimer.value && progressTotal.value > 20) {\n        progressCurrent.value = 0;\n        if (progressTimer) clearInterval(progressTimer);\n        progressTimer = setInterval(() => {\n          if (progressCurrent.value < progressTotal.value) {\n            progressCurrent.value++;\n          }\n        }, 2000); // 2 seconds per citation\n      }\n\n      // Check if Font Awesome is loaded\n      setTimeout(() => {\n        const faIcons = document.querySelectorAll('.fas.fa-cog.fa-spin');\n        const biIcons = document.querySelectorAll('.bi.bi-gear-fill.spinning');\n        \n        faIcons.forEach((faIcon, index) => {\n          if (getComputedStyle(faIcon).fontFamily.indexOf('FontAwesome') === -1) {\n            // Font Awesome not loaded, show Bootstrap icon\n            faIcon.style.display = 'none';\n            if (biIcons[index]) {\n              biIcons[index].style.display = 'inline-block';\n            }\n          }\n        });\n      }, 100);\n    });\n    \n    onUnmounted(() => {\n      if (hasActiveRequest.value) {\n        cancelValidation();\n      }\n      if (pollInterval.value) {\n        clearInterval(pollInterval.value);\n        pollInterval.value = null;\n      }\n      clearFallbackTimer();\n      if (progressTimer) clearInterval(progressTimer);\n    });\n\n    // Jump to 100% when results are ready\n    watch(() => results.value, (val) => {\n      if (val && progressTimer) {\n        progressCurrent.value = progressTotal.value;\n        clearInterval(progressTimer);\n      }\n    });\n\n    // Add a placeholder for copyResults to fix ReferenceError\n    function copyResults() {\n      console.log('copyResults called');\n    }\n\n    // Add a placeholder for downloadResults to fix ReferenceError\n    function downloadResults() {\n      console.log('downloadResults called');\n    }\n\n    // Start fallback timer\n    function startFallbackTimer() {\n      clearFallbackTimer();\n      fallbackTimeout.value = setTimeout(() => {\n        fallbackError.value = 'Processing timed out. No response from server.';\n        setProcessingError(fallbackError.value);\n        hasActiveRequest.value = false;\n        // Optionally, show a toast or error UI\n        showToast(fallbackError.value, 'error');\n      }, fallbackTimeoutMs);\n    }\n\n    // Clear fallback timer\n    function clearFallbackTimer() {\n      if (fallbackTimeout.value) {\n        clearTimeout(fallbackTimeout.value);\n        fallbackTimeout.value = null;\n      }\n    }\n\n    // When processing starts, start fallback timer\n    function onProcessingStart() {\n      fallbackError.value = '';\n      startFallbackTimer();\n    }\n\n    // When progress or results are received, clear fallback timer\n    function onProgressOrResult() {\n      clearFallbackTimer();\n    }\n\n    // ===== RETURN STATEMENT =====\n    return {\n      // State\n      results,\n      error,\n      isLoading: showLoading,\n      showLoading,\n      hasActiveRequest,\n      \n      // Methods\n      clearResults,\n      handleUnifiedAnalyze,\n      retryProcessing,\n      cancelValidation,\n      copyResults,\n      downloadResults,\n      \n      // Processing time tracking\n      elapsedTime,\n      remainingTime,\n      totalProgress,\n      currentStep,\n      currentStepProgress,\n      processingSteps,\n      actualTimes,\n      formatTime,\n      \n      // Enhanced progress tracking\n      citationInfo,\n      queuePosition,\n      estimatedQueueTime,\n      rateLimitInfo,\n      timeout,\n      processingError,\n      canRetry,\n      \n      // Helper functions\n      getProgressBarClass,\n      \n      // Stub methods for CitationResults component\n      applyCorrection: () => {},\n      \n      // Toast\n      toastMessage,\n      toastType,\n      clearToast,\n      \n      // Fallback timer\n      fallbackError,\n      \n      // Show timer computed property\n      showTimer,\n      \n      // Progress bar state\n      progressCurrent,\n      progressTotal,\n      progressPercent,\n      progressBarClass,\n    };\n  }\n};\n</script>\n\n<style scoped>\n.enhanced-validator {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.header {\n  background: #f8f9fa;\n  padding: 2rem;\n  text-align: center;\n}\n\n.main-content {\n  padding: 2rem;\n}\n\n.input-container {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n}\n\n.progress-container {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n}\n\n.processing-card {\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: none;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  overflow: hidden;\n}\n\n.processing-header {\n  margin-bottom: 2rem;\n}\n\n.spinner-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n}\n\n.spinner-border {\n  width: 3rem;\n  height: 3rem;\n  border-width: 0.25rem;\n}\n\n.processing-content {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.progress-dots {\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n  margin: 1rem 0;\n}\n\n.dot {\n  width: 8px;\n  height: 8px;\n  background-color: #007bff;\n  border-radius: 50%;\n  animation: pulse 1.5s ease-in-out infinite;\n}\n\n.dot:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 0.3;\n    transform: scale(0.8);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1.2);\n  }\n}\n\n.processing-steps {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 2rem;\n  padding: 1rem;\n  background: rgba(255, 255, 255, 0.7);\n  border-radius: 0.75rem;\n}\n\n.step {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  transition: all 0.3s ease;\n  opacity: 0.6;\n}\n\n.step.active {\n  opacity: 1;\n  background: rgba(0, 123, 255, 0.1);\n  transform: scale(1.05);\n}\n\n.step i {\n  font-size: 1.5rem;\n}\n\n.step span {\n  font-size: 0.8rem;\n  font-weight: 500;\n  text-align: center;\n  white-space: nowrap;\n}\n\n.progress-info {\n  margin-bottom: 1.5rem;\n}\n\n.progress-stats {\n  display: flex;\n  justify-content: space-around;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.stat {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 0.5rem;\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n.progress-container {\n  margin: 1.5rem 0;\n}\n\n.progress {\n  background: rgba(255, 255, 255, 0.8);\n  border: 2px solid rgba(0, 123, 255, 0.2);\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.progress-bar {\n  background: linear-gradient(90deg, #007bff, #0056b3);\n  box-shadow: 0 2px 4px rgba(0, 123, 255, 0.3);\n  position: relative;\n  overflow: hidden;\n}\n\n.progress-text {\n  font-weight: 600;\n  font-size: 0.9rem;\n  color: white;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n}\n\n.progress-label {\n  text-align: center;\n}\n\n/* Enhanced spinner animation */\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.spinner-border {\n  animation: spin 1s linear infinite !important;\n}\n\n/* Font Awesome spinning animation */\n.fa-spin {\n  animation: spin 2s linear infinite !important;\n}\n\n/* Additional spinning animations */\n.spinning {\n  animation: spin 1.5s linear infinite;\n}\n\n/* Enhanced pulse animation for dots */\n@keyframes pulse {\n  0%, 100% {\n    opacity: 0.3;\n    transform: scale(0.8);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1.2);\n  }\n}\n\n.dot {\n  width: 8px;\n  height: 8px;\n  background-color: #007bff;\n  border-radius: 50%;\n  animation: pulse 1.5s ease-in-out infinite;\n}\n\n.dot:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n/* Card hover effects */\n.processing-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .processing-steps {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .step {\n    flex-direction: row;\n    width: 100%;\n    justify-content: flex-start;\n  }\n  \n  .progress-stats {\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .stat {\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n.results-container {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n}\n\n.error-container {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n}\n\n.empty-state {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 3rem 1.5rem;\n}\n\n.empty-content {\n  text-align: center;\n}\n\n.empty-icon {\n  font-size: 4rem;\n  margin-bottom: 1.5rem;\n}\n\n.error-icon {\n  color: #dc3545;\n  margin-right: 0.5rem;\n}\n\n.results-title {\n  font-size: 2.2rem;\n  font-weight: 700;\n  color: #1976d2;\n  letter-spacing: 0.01em;\n}\n\n.back-btn {\n  font-size: 1.1rem;\n  color: #1976d2;\n  text-decoration: none;\n  margin-bottom: 1rem;\n}\n\n.back-btn i {\n  margin-right: 0.5rem;\n}\n</style>\n"],"names":["loadingMessage","isLoading","step","_a","_openBlock","_createElementBlock","_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_Fragment","_renderList","_normalizeClass","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_createTextVNode","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","text","url","file","_createBlock","_Transition","_normalizeStyle","error","_createVNode"],"mappings":"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"}