{"version":3,"file":"EnhancedValidator-B30_4ffa.js","sources":["../../src/composables/useApi.js","../../src/composables/useLoadingState.js","../../src/composables/useProcessingTime.js","../../src/composables/useCitationNormalization.js","../../src/components/ProcessingProgress.vue","../../src/components/CitationResults.vue","../../src/components/UnifiedInput.vue","../../src/components/Toast.vue","../../src/components/SkeletonLoader.vue","../../src/views/EnhancedValidator.vue"],"sourcesContent":["import { ref, onUnmounted } from 'vue';\nimport { createLoader } from '@/utils/loading';\n\n/**\n * Composable for making API calls with loading and error states\n * @param {Object} options - Options for the API call\n * @param {string} [options.loadingMessage] - Loading message to show during the request\n * @param {boolean} [options.showLoading=true] - Whether to show loading state\n * @param {Function} [options.onSuccess] - Callback for successful response\n * @param {Function} [options.onError] - Callback for error response\n * @param {Function} [options.onFinally] - Callback after request completes (success or error)\n * @returns {Object} API call utilities\n */\nexport function useApi(options = {}) {\n  const {\n    loadingMessage = 'Loading...',\n    showLoading = true,\n    onSuccess,\n    onError,\n    onFinally,\n  } = options;\n  \n  const data = ref(null);\n  const error = ref(null);\n  const isLoading = ref(false);\n  const status = ref(null);\n  let loader = null;\n  let controller = null;\n  \n  // Create a unique ID for this API call\n  const callId = `api_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  \n  // Cleanup on component unmount\n  onUnmounted(() => {\n    if (controller) {\n      controller.abort();\n    }\n    if (loader) {\n      loader.remove();\n    }\n  });\n  \n  /**\n   * Execute an API call\n   * @param {Function} apiCall - Function that returns a promise (usually an axios call)\n   * @param {Object} callOptions - Options for this specific call\n   * @returns {Promise} The API call promise\n   */\n  async function execute(apiCall, callOptions = {}) {\n    const {\n      message = loadingMessage,\n      showLoader = showLoading,\n      signal,\n      ...requestConfig\n    } = { ...options, ...callOptions };\n    \n    // Reset state\n    error.value = null;\n    status.value = null;\n    data.value = null;\n    \n    // Set up loading state\n    if (showLoader) {\n      loader = createLoader(callId, { message });\n    }\n    \n    isLoading.value = true;\n    \n    // Create abort controller for this request\n    if (typeof AbortController !== 'undefined') {\n      controller = new AbortController();\n      requestConfig.signal = signal || controller.signal;\n    }\n    \n    try {\n      const response = await apiCall({\n        ...requestConfig,\n        signal: requestConfig.signal,\n      });\n      \n      data.value = response.data || response;\n      status.value = response.status || 200;\n      \n      if (onSuccess) {\n        onSuccess(response);\n      }\n      \n      return response;\n    } catch (err) {\n      error.value = err;\n      status.value = err.response?.status || 0;\n      \n      if (onError) {\n        onError(err);\n      }\n      \n      // Re-throw the error so the calling code can handle it if needed\n      throw err;\n    } finally {\n      isLoading.value = false;\n      \n      if (loader) {\n        if (error.value) {\n          loader.error(error.value);\n        } else {\n          loader.complete();\n        }\n        loader = null;\n      }\n      \n      if (onFinally) {\n        onFinally();\n      }\n      \n      controller = null;\n    }\n  }\n  \n  /**\n   * Cancel the current request\n   */\n  function cancel() {\n    if (controller) {\n      controller.abort();\n      controller = null;\n    }\n    \n    if (loader) {\n      loader.remove();\n      loader = null;\n    }\n    \n    isLoading.value = false;\n  }\n  \n  return {\n    execute,\n    cancel,\n    data,\n    error,\n    isLoading,\n    status,\n  };\n}\n\n/**\n * Composable for making GET requests\n * @param {string} url - API endpoint URL\n * @param {Object} options - Options for the API call\n * @returns {Object} API call utilities\n */\nexport function useGet(url, options = {}) {\n  const { execute, ...rest } = useApi(options);\n  \n  async function get(params = {}, config = {}) {\n    return execute(api => api.get(url, { params, ...config }));\n  }\n  \n  return {\n    get,\n    ...rest,\n  };\n}\n\n/**\n * Composable for making POST requests\n * @param {string} url - API endpoint URL\n * @param {Object} options - Options for the API call\n * @returns {Object} API call utilities\n */\nexport function usePost(url, options = {}) {\n  const { execute, ...rest } = useApi(options);\n  \n  async function post(data = {}, config = {}) {\n    return execute(api => api.post(url, data, config));\n  }\n  \n  return {\n    post,\n    ...rest,\n  };\n}\n\n/**\n * Composable for making PUT requests\n * @param {string} url - API endpoint URL\n * @param {Object} options - Options for the API call\n * @returns {Object} API call utilities\n */\nexport function usePut(url, options = {}) {\n  const { execute, ...rest } = useApi(options);\n  \n  async function put(data = {}, config = {}) {\n    return execute(api => api.put(url, data, config));\n  }\n  \n  return {\n    put,\n    ...rest,\n  };\n}\n\n/**\n * Composable for making DELETE requests\n * @param {string} url - API endpoint URL\n * @param {Object} options - Options for the API call\n * @returns {Object} API call utilities\n */\nexport function useDelete(url, options = {}) {\n  const { execute, ...rest } = useApi(options);\n  \n  async function del(config = {}) {\n    return execute(api => api.delete(url, config));\n  }\n  \n  return {\n    delete: del,\n    ...rest,\n  };\n}\n","import { ref, computed } from 'vue';\n\n// Global loading state\nconst isLoading = ref(false);\nconst loadingMessage = ref('Loading...');\n\n/**\n * Composable for managing loading state across the application\n * @returns {Object} Loading state utilities\n */\nexport function useLoadingState() {\n  /**\n   * Set loading state\n   * @param {boolean} value - Whether loading is active\n   * @param {string} [message='Loading...'] - Loading message to display\n   */\n  const setLoading = (value, message = 'Loading...') => {\n    isLoading.value = value;\n    if (message) {\n      loadingMessage.value = message;\n    }\n  };\n\n  /**\n   * Show loading with optional message\n   * @param {string} [message] - Optional loading message\n   */\n  const showLoading = (message) => {\n    setLoading(true, message);\n  };\n\n  /**\n   * Hide loading\n   */\n  const hideLoading = () => {\n    setLoading(false);\n  };\n\n  /**\n   * Toggle loading state\n   * @param {string} [message] - Optional loading message when toggling on\n   */\n  const toggleLoading = (message) => {\n    setLoading(!isLoading.value, message);\n  };\n\n  return {\n    // State\n    isLoading: computed(() => isLoading.value),\n    loadingMessage: computed(() => loadingMessage.value),\n    \n    // Actions\n    setLoading,\n    showLoading,\n    hideLoading,\n    toggleLoading\n  };\n}\n\n// Export the loading state for direct access if needed\nexport const globalLoading = {\n  get isLoading() {\n    return isLoading.value;\n  },\n  get message() {\n    return loadingMessage.value;\n  },\n  set message(value) {\n    loadingMessage.value = value;\n  }\n};\n","import { ref, computed } from 'vue';\r\n\r\nexport function useProcessingTime() {\r\n  const startTime = ref(null);\r\n  const estimatedTotalTime = ref(0);\r\n  const currentStep = ref('');\r\n  const stepProgress = ref(0);\r\n  const processingSteps = ref([]);\r\n  const actualTimes = ref({});\r\n  \r\n  // Add missing reactive variables\r\n  const citationInfo = ref(null);\r\n  const rateLimitInfo = ref(null);\r\n  const timeout = ref(null);\r\n  const processingError = ref(null);\r\n  const canRetry = ref(false);\r\n  \r\n  const elapsedTime = computed(() => {\r\n    if (!startTime.value) return 0;\r\n    return (Date.now() - startTime.value) / 1000;\r\n  });\r\n  \r\n  const remainingTime = computed(() => {\r\n    if (!estimatedTotalTime.value) return 0;\r\n    return Math.max(0, estimatedTotalTime.value - elapsedTime.value);\r\n  });\r\n  \r\n  const totalProgress = computed(() => {\r\n    if (!estimatedTotalTime.value) return 0;\r\n    return Math.min(100, (elapsedTime.value / estimatedTotalTime.value) * 100);\r\n  });\r\n  \r\n  const currentStepProgress = computed(() => {\r\n    if (!processingSteps.value.length) return 0;\r\n    const currentStepIndex = processingSteps.value.findIndex(step => step.step === currentStep.value);\r\n    if (currentStepIndex === -1) return 0;\r\n    \r\n    const step = processingSteps.value[currentStepIndex];\r\n    const stepElapsed = elapsedTime.value - (step.startTime || 0);\r\n    return Math.min(100, (stepElapsed / step.estimated_time) * 100);\r\n  });\r\n  \r\n  const formatTime = (seconds) => {\r\n    if (seconds < 60) {\r\n      return `${Math.round(seconds)}s`;\r\n    }\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = Math.round(seconds % 60);\r\n    return `${minutes}m ${remainingSeconds}s`;\r\n  };\r\n  \r\n  const startProcessing = (timeEstimate) => {\r\n    startTime.value = Date.now();\r\n    if (typeof timeEstimate === 'object' && timeEstimate !== null && Array.isArray(timeEstimate.steps)) {\r\n      estimatedTotalTime.value = timeEstimate.estimated_total_time;\r\n      processingSteps.value = timeEstimate.steps.map(step => ({\r\n        step: step[0],\r\n        estimated_time: step[1],\r\n        startTime: null,\r\n        progress: 0\r\n      }));\r\n      currentStep.value = processingSteps.value[0]?.step || '';\r\n    } else if (typeof timeEstimate === 'number') {\r\n      estimatedTotalTime.value = timeEstimate;\r\n      processingSteps.value = [];\r\n      currentStep.value = '';\r\n    } else {\r\n      estimatedTotalTime.value = 0;\r\n      processingSteps.value = [];\r\n      currentStep.value = '';\r\n    }\r\n    stepProgress.value = 0;\r\n  };\r\n  \r\n  // Add missing functions\r\n  const stopProcessing = () => {\r\n    startTime.value = null;\r\n    estimatedTotalTime.value = 0;\r\n    currentStep.value = '';\r\n    stepProgress.value = 0;\r\n  };\r\n  \r\n  const updateProgress = (progress) => {\r\n    if (typeof progress === 'object' && progress.step) {\r\n      updateStep(progress.step, progress.progress || 0);\r\n    } else if (typeof progress === 'number') {\r\n      stepProgress.value = progress;\r\n    }\r\n  };\r\n  \r\n  const setSteps = (steps) => {\r\n    if (Array.isArray(steps)) {\r\n      processingSteps.value = steps.map(step => ({\r\n        step: typeof step === 'string' ? step : step.step,\r\n        estimated_time: typeof step === 'object' ? step.estimated_time : 10,\r\n        startTime: null,\r\n        progress: 0\r\n      }));\r\n    }\r\n  };\r\n  \r\n  const resetProcessing = () => {\r\n    startTime.value = null;\r\n    estimatedTotalTime.value = 0;\r\n    currentStep.value = '';\r\n    stepProgress.value = 0;\r\n    processingSteps.value = [];\r\n    actualTimes.value = {};\r\n    citationInfo.value = null;\r\n    rateLimitInfo.value = null;\r\n    timeout.value = null;\r\n    processingError.value = null;\r\n    canRetry.value = false;\r\n  };\r\n  \r\n  const setProcessingError = (error) => {\r\n    processingError.value = error;\r\n    canRetry.value = true;\r\n  };\r\n  \r\n  const updateStep = (stepName, progress) => {\r\n    const stepIndex = processingSteps.value.findIndex(step => step.step === stepName);\r\n    if (stepIndex === -1) return;\r\n    \r\n    if (stepIndex === 0 || processingSteps.value[stepIndex - 1].progress === 100) {\r\n      currentStep.value = stepName;\r\n      if (!processingSteps.value[stepIndex].startTime) {\r\n        processingSteps.value[stepIndex].startTime = Date.now();\r\n      }\r\n    }\r\n    \r\n    processingSteps.value[stepIndex].progress = progress;\r\n    stepProgress.value = progress;\r\n  };\r\n  \r\n  const completeStep = (stepName) => {\r\n    updateStep(stepName, 100);\r\n    const nextStepIndex = processingSteps.value.findIndex(step => step.step === stepName) + 1;\r\n    if (nextStepIndex < processingSteps.value.length) {\r\n      currentStep.value = processingSteps.value[nextStepIndex].step;\r\n      processingSteps.value[nextStepIndex].startTime = Date.now();\r\n    }\r\n  };\r\n  \r\n  const updateActualTimes = (times) => {\r\n    actualTimes.value = times;\r\n  };\r\n  \r\n  const reset = () => {\r\n    startTime.value = null;\r\n    estimatedTotalTime.value = 0;\r\n    currentStep.value = '';\r\n    stepProgress.value = 0;\r\n    processingSteps.value = [];\r\n    actualTimes.value = {};\r\n    citationInfo.value = null;\r\n    rateLimitInfo.value = null;\r\n    timeout.value = null;\r\n    processingError.value = null;\r\n    canRetry.value = false;\r\n  };\r\n  \r\n  return {\r\n    // State\r\n    startTime,\r\n    estimatedTotalTime,\r\n    currentStep,\r\n    stepProgress,\r\n    processingSteps,\r\n    actualTimes,\r\n    citationInfo,\r\n    rateLimitInfo,\r\n    timeout,\r\n    processingError,\r\n    canRetry,\r\n    \r\n    // Computed\r\n    elapsedTime,\r\n    remainingTime,\r\n    totalProgress,\r\n    currentStepProgress,\r\n    \r\n    // Methods\r\n    startProcessing,\r\n    stopProcessing,\r\n    updateProgress,\r\n    setSteps,\r\n    resetProcessing,\r\n    setProcessingError,\r\n    updateStep,\r\n    completeStep,\r\n    updateActualTimes,\r\n    reset,\r\n    formatTime\r\n  };\r\n} ","// src/composables/useCitationNormalization.js\r\n\r\nexport function useCitationNormalization() {\r\n  // Normalize citations for frontend display\r\n  const normalizeCitations = (citations) => {\r\n    return (citations || []).map(citation => {\r\n      // Convert citation array to string\r\n      let citationText = citation.citation;\r\n      if (Array.isArray(citationText)) {\r\n        citationText = citationText.join('; ');\r\n      }\r\n\r\n      // Convert verified to boolean\r\n      let verified = false;\r\n      if (typeof citation.verified === 'string') {\r\n        verified = citation.verified === 'true' || citation.verified === 'true_by_parallel';\r\n      } else {\r\n        verified = !!citation.verified;\r\n      }\r\n\r\n      // Calculate citation score (0-4)\r\n      let score = 0;\r\n      if (citation.case_name && citation.case_name !== 'N/A') {\r\n        score += 2;\r\n      }\r\n      if (citation.extracted_case_name && citation.extracted_case_name !== 'N/A' && \r\n          citation.case_name && citation.case_name !== 'N/A') {\r\n        const canonicalWords = citation.case_name.toLowerCase().split(/\\s+/).filter(w => w.length > 2);\r\n        const extractedWords = citation.extracted_case_name.toLowerCase().split(/\\s+/).filter(w => w.length > 2);\r\n        const commonWords = canonicalWords.filter(word => extractedWords.includes(word));\r\n        const similarity = commonWords.length / Math.max(canonicalWords.length, extractedWords.length);\r\n        if (similarity >= 0.5) {\r\n          score += 1;\r\n        }\r\n      }\r\n      if (citation.extracted_date && citation.canonical_date) {\r\n        const extractedYear = citation.extracted_date.toString().substring(0, 4);\r\n        const canonicalYear = citation.canonical_date.toString().substring(0, 4);\r\n        if (extractedYear === canonicalYear && extractedYear.length === 4) {\r\n          score += 1;\r\n        }\r\n      }\r\n      let scoreColor = 'red';\r\n      if (score === 4) scoreColor = 'green';\r\n      else if (score === 3) scoreColor = 'green';\r\n      else if (score === 2) scoreColor = 'yellow';\r\n      else if (score === 1) scoreColor = 'orange';\r\n\r\n      const normalizedCitation = {\r\n        ...citation,\r\n        citation: citationText,\r\n        verified: verified,\r\n        valid: verified,\r\n        score: score,\r\n        scoreColor: scoreColor,\r\n        case_name: citation.case_name || 'N/A',\r\n        extracted_case_name: citation.extracted_case_name || 'N/A',\r\n        canonical_date: citation.canonical_date || null,\r\n        extracted_date: citation.extracted_date || null,\r\n        metadata: {\r\n          case_name: citation.case_name,\r\n          canonical_date: citation.canonical_date,\r\n          court: citation.court,\r\n          confidence: citation.confidence,\r\n          method: citation.method,\r\n          pattern: citation.pattern\r\n        },\r\n        details: {\r\n          case_name: citation.case_name,\r\n          canonical_date: citation.canonical_date,\r\n          court: citation.court,\r\n          confidence: citation.confidence,\r\n          method: citation.method,\r\n          pattern: citation.pattern\r\n        }\r\n      };\r\n      return normalizedCitation;\r\n    });\r\n  };\r\n\r\n  // Optionally, extract scoring logic if needed separately\r\n  const calculateCitationScore = (citation) => {\r\n    let score = 0;\r\n    if (citation.case_name && citation.case_name !== 'N/A') {\r\n      score += 2;\r\n    }\r\n    if (citation.extracted_case_name && citation.extracted_case_name !== 'N/A' && \r\n        citation.case_name && citation.case_name !== 'N/A') {\r\n      const canonicalWords = citation.case_name.toLowerCase().split(/\\s+/).filter(w => w.length > 2);\r\n      const extractedWords = citation.extracted_case_name.toLowerCase().split(/\\s+/).filter(w => w.length > 2);\r\n      const commonWords = canonicalWords.filter(word => extractedWords.includes(word));\r\n      const similarity = commonWords.length / Math.max(canonicalWords.length, extractedWords.length);\r\n      if (similarity >= 0.5) {\r\n        score += 1;\r\n      }\r\n    }\r\n    if (citation.extracted_date && citation.canonical_date) {\r\n      const extractedYear = citation.extracted_date.toString().substring(0, 4);\r\n      const canonicalYear = citation.canonical_date.toString().substring(0, 4);\r\n      if (extractedYear === canonicalYear && extractedYear.length === 4) {\r\n        score += 1;\r\n      }\r\n    }\r\n    return score;\r\n  };\r\n\r\n  return { normalizeCitations, calculateCitationScore };\r\n} ","<template>\r\n  <div class=\"processing-progress\">\r\n    <!-- Overall Progress -->\r\n    <div class=\"progress-section\">\r\n      <h3>Overall Progress</h3>\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress-fill\" :style=\"{ width: `${totalProgress}%` }\"></div>\r\n      </div>\r\n      <div class=\"time-info\">\r\n        <span>Elapsed: {{ formatTime(elapsedTime) }}</span>\r\n        <span>Remaining: {{ formatTime(remainingTime) }}</span>\r\n        <span v-if=\"timeout\" class=\"timeout-info\" :class=\"{ 'warning': isTimeoutWarning }\">\r\n          Timeout: {{ formatTime(timeout - elapsedTime) }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Citation Processing -->\r\n    <div v-if=\"citationInfo\" class=\"citation-section\">\r\n      <h3>Citation Processing</h3>\r\n      <div class=\"citation-stats\">\r\n        <div class=\"stat\">\r\n          <span class=\"label\">Total Citations:</span>\r\n          <span class=\"value\">{{ citationInfo.total }}</span>\r\n        </div>\r\n        <div class=\"stat\">\r\n          <span class=\"label\">Unique Citations:</span>\r\n          <span class=\"value\">{{ citationInfo.unique }}</span>\r\n        </div>\r\n        <div class=\"stat\">\r\n          <span class=\"label\">Processed:</span>\r\n          <span class=\"value\">{{ citationInfo.processed }}</span>\r\n        </div>\r\n        <div class=\"stat\" v-if=\"citationInfo.unique\">\r\n          <span class=\"label\">Processing Rate:</span>\r\n          <span class=\"value\">{{ formatProcessingRate(citationInfo) }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"rate-limit-info\" v-if=\"rateLimitInfo\">\r\n        <div class=\"stat\">\r\n          <span class=\"label\">API Rate Limit:</span>\r\n          <span class=\"value\">{{ rateLimitInfo.remaining }}/{{ rateLimitInfo.limit }}</span>\r\n        </div>\r\n        <div class=\"stat\" v-if=\"rateLimitInfo.resetTime\">\r\n          <span class=\"label\">Reset in:</span>\r\n          <span class=\"value\">{{ formatTime(rateLimitInfo.resetTime - Date.now()/1000) }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Current Step -->\r\n    <div class=\"current-step\" v-if=\"currentStep\">\r\n      <h3>Current Step</h3>\r\n      <div class=\"step-info\">\r\n        <span class=\"step-name\">{{ currentStep }}</span>\r\n        <div class=\"progress-bar\">\r\n          <div class=\"progress-fill\" :style=\"{ width: `${currentStepProgress}%` }\"></div>\r\n        </div>\r\n        <div class=\"time-info\">\r\n          <span>Elapsed: {{ formatTime(currentStepElapsed) }}</span>\r\n          <span>Remaining: {{ formatTime(currentStepRemaining) }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Processing Steps -->\r\n    <div class=\"steps-section\">\r\n      <h3>Processing Steps</h3>\r\n      <div class=\"steps-list\">\r\n        <div v-for=\"step in processingSteps\" \r\n             :key=\"step.step\" \r\n             :class=\"['step', getStepClass(step)]\">\r\n          <div class=\"step-header\">\r\n            <span class=\"step-name\">{{ step.step }}</span>\r\n            <span class=\"step-status\">{{ getStepStatus(step) }}</span>\r\n          </div>\r\n          <div class=\"progress-bar\" v-if=\"step.progress !== undefined\">\r\n            <div class=\"progress-fill\" :style=\"{ width: `${step.progress}%` }\"></div>\r\n          </div>\r\n          <div class=\"time-info\" v-if=\"step.estimated_time\">\r\n            <span>Estimated: {{ formatTime(step.estimated_time) }}</span>\r\n            <span v-if=\"step.actual_time\">Actual: {{ formatTime(step.actual_time) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Error Information -->\r\n    <div v-if=\"error\" class=\"error-section\">\r\n      <div class=\"error-message\">\r\n        <i class=\"fas fa-exclamation-circle\"></i>\r\n        {{ error }}\r\n      </div>\r\n      <button v-if=\"canRetry\" @click=\"$emit('retry')\" class=\"retry-button\">\r\n        Retry Processing\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ProcessingProgress',\r\n  props: {\r\n    elapsedTime: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    remainingTime: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    totalProgress: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    currentStep: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    currentStepProgress: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    processingSteps: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    actualTimes: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    citationInfo: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    rateLimitInfo: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    error: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    canRetry: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    timeout: {\r\n      type: Number,\r\n      default: null\r\n    }\r\n  },\r\n  mounted() {\r\n    // Component mounted successfully\r\n  },\r\n  watch: {\r\n    totalProgress(newVal) {\r\n      // Progress updated\r\n    },\r\n    remainingTime(newVal) {\r\n      // Remaining time updated\r\n    }\r\n  },\r\n  computed: {\r\n    currentStepElapsed() {\r\n      const step = this.processingSteps.find(s => s.step === this.currentStep)\r\n      return step ? (Date.now()/1000 - step.start_time) : 0\r\n    },\r\n    currentStepRemaining() {\r\n      const step = this.processingSteps.find(s => s.step === this.currentStep)\r\n      if (!step || !step.estimated_time) return 0\r\n      return Math.max(0, step.estimated_time - this.currentStepElapsed)\r\n    },\r\n    isTimeoutWarning() {\r\n      if (!this.timeout) return false\r\n      const timeRemaining = this.timeout - this.elapsedTime\r\n      return timeRemaining < 60 // Show warning when less than 1 minute remaining\r\n    }\r\n  },\r\n  methods: {\r\n    formatTime(seconds) {\r\n      if (seconds < 0) return '0s'\r\n      const minutes = Math.floor(seconds / 60)\r\n      const remainingSeconds = Math.round(seconds % 60)\r\n      if (minutes > 0) {\r\n        return `${minutes}m ${remainingSeconds}s`\r\n      }\r\n      return `${remainingSeconds}s`\r\n    },\r\n    getStepClass(step) {\r\n      if (step.progress === 100) return 'completed'\r\n      if (step.step === this.currentStep) return 'current'\r\n      if (step.progress > 0) return 'in-progress'\r\n      return 'pending'\r\n    },\r\n    getStepStatus(step) {\r\n      if (step.progress === 100) return 'Completed'\r\n      if (step.step === this.currentStep) return 'In Progress'\r\n      if (step.progress > 0) return `${step.progress}%`\r\n      return 'Pending'\r\n    },\r\n    formatProcessingRate(citationInfo) {\r\n      if (!citationInfo.processed || !this.elapsedTime) return '0/min'\r\n      const rate = (citationInfo.processed / this.elapsedTime) * 60\r\n      return `${Math.round(rate)}/min`\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.processing-progress {\r\n  padding: 1rem;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.progress-section,\r\n.citation-section,\r\n.current-step,\r\n.steps-section {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\nh3 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #2c3e50;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.progress-bar {\r\n  height: 8px;\r\n  background: #eee;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: #42b983;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.time-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.citation-stats,\r\n.rate-limit-info {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n  gap: 1rem;\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.stat {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.label {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.value {\r\n  font-weight: 500;\r\n  color: #2c3e50;\r\n}\r\n\r\n.steps-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.step {\r\n  padding: 0.75rem;\r\n  border-radius: 4px;\r\n  background: #f8f9fa;\r\n}\r\n\r\n.step.completed {\r\n  background: #e8f5e9;\r\n}\r\n\r\n.step.current {\r\n  background: #e3f2fd;\r\n}\r\n\r\n.step.in-progress {\r\n  background: #fff3e0;\r\n}\r\n\r\n.step-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.step-name {\r\n  font-weight: 500;\r\n}\r\n\r\n.step-status {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n}\r\n\r\n.error-section {\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  background: #ffebee;\r\n  border-radius: 4px;\r\n}\r\n\r\n.error-message {\r\n  color: #c62828;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.retry-button {\r\n  margin-top: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  background: #c62828;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.retry-button:hover {\r\n  background: #b71c1c;\r\n}\r\n\r\n.timeout-info {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  background: #f8f9fa;\r\n}\r\n\r\n.timeout-info.warning {\r\n  color: #856404;\r\n  background: #fff3cd;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% { opacity: 1; }\r\n  50% { opacity: 0.7; }\r\n  100% { opacity: 1; }\r\n}\r\n</style> ","<script setup>\nimport { ref, computed, watch } from 'vue'\nimport ProcessingProgress from './ProcessingProgress.vue'\n\nconst props = defineProps({\n  results: { type: Object, default: null },\n  showLoading: { type: Boolean, default: false },\n  error: { type: String, default: '' }\n})\n\nconst emit = defineEmits(['copy-results', 'download-results', 'toast'])\n\nconst activeFilter = ref('all')\nconst searchQuery = ref('')\nconst currentPage = ref(1)\nconst itemsPerPage = 50\nconst expandedCitations = ref(new Set())\nconst progress = ref(0)\nconst etaSeconds = ref(null)\n\nwatch(() => props.results, (newVal) => {\n  if (newVal && typeof newVal.progress === 'number') {\n    progress.value = newVal.progress\n    etaSeconds.value = newVal.eta_seconds\n  }\n})\n\nconst shouldShowProgressBar = computed(() => {\n  return props.showLoading && progress.value > 0 && progress.value < 100\n})\n\nconst validCount = computed(() => {\n  if (!props.results?.citations) return 0\n  return props.results.citations.filter(c => c.verified === 'true' || c.verified === true).length\n})\n\nconst invalidCount = computed(() => {\n  if (!props.results?.citations) return 0\n  return props.results.citations.filter(c => c.verified === 'false' || c.verified === false).length\n})\n\nconst filteredCitations = computed(() => {\n  if (!props.results?.citations) return []\n  let filtered = props.results.citations\n  \n  // Filter out statutes and regulations\n  filtered = filtered.filter(c => !isStatuteOrRegulation(c))\n  \n  if (activeFilter.value === 'verified') {\n    filtered = filtered.filter(c => c.verified === 'true' || c.verified === true)\n  } else if (activeFilter.value === 'invalid') {\n    filtered = filtered.filter(c => c.verified === 'false' || c.verified === false)\n  }\n  \n  if (searchQuery.value.trim()) {\n    const query = searchQuery.value.toLowerCase()\n    filtered = filtered.filter(c => \n      (c.citation && c.citation.toLowerCase().includes(query)) ||\n      (c.canonical_citation && c.canonical_citation.toLowerCase().includes(query)) ||\n      (c.primary_citation && c.primary_citation.toLowerCase().includes(query)) ||\n      (getCaseName(c) && getCaseName(c).toLowerCase().includes(query))\n    )\n  }\n  \n  return filtered\n})\n\n// Utility function to identify statutes/regulations\nconst isStatuteOrRegulation = (citation) => {\n  const citationText = citation.citation || citation.canonical_citation || citation.primary_citation || ''\n  const text = citationText.toUpperCase()\n  \n  // Check for common statute/regulation patterns\n  if (text.includes('U.S.C.') || text.includes('USC') || text.includes('C.F.R.') || text.includes('CFR') ||\n      text.includes('UNITED STATES CODE') || text.includes('CODE OF FEDERAL REGULATIONS')) {\n    return true\n  }\n  \n  // Regex patterns for statutes and regulations\n  return /\\d+\\s+U\\.?\\s*S\\.?\\s*C\\.?\\s*[§]?\\s*\\d+/i.test(text) || \n         /\\d+\\s+C\\.?\\s*F\\.?\\s*R\\.?\\s*[§]?\\s*\\d+/i.test(text)\n}\n\nconst totalPages = computed(() => Math.ceil(filteredCitations.value.length / itemsPerPage))\n\nconst paginatedCitations = computed(() => {\n  const start = (currentPage.value - 1) * itemsPerPage\n  const end = start + itemsPerPage\n  return filteredCitations.value.slice(start, end)\n})\n\nconst filters = computed(() => [\n  { value: 'all', label: 'All', count: filteredCitations.value.length },\n  { value: 'verified', label: 'Verified', count: validCount.value },\n  { value: 'invalid', label: 'Invalid', count: invalidCount.value }\n])\n\n// Helper functions to handle the actual data structure\nconst getCanonicalCaseName = (citation) => {\n  return citation.case_name || citation.canonical_name || null\n}\n\nconst getExtractedCaseName = (citation) => {\n  return citation.extracted_case_name || null\n}\n\nconst getCanonicalDate = (citation) => {\n  return citation.canonical_date || null\n}\n\nconst getExtractedDate = (citation) => {\n  return citation.extracted_date || null\n}\n\nconst getCitation = (citation) => {\n  return citation.citation || \n         citation.canonical_citation || \n         citation.primary_citation || \n         'N/A'\n}\n\nconst getCitationUrl = (citation) => {\n  return citation.url || null\n}\n\nconst getSource = (citation) => {\n  return citation.source || 'Unknown'\n}\n\nconst getVerificationMethod = (citation) => {\n  return citation.verification_method || 'N/A'\n}\n\nconst getConfidence = (citation) => {\n  return citation.confidence || citation.likelihood_score || 'N/A'\n}\n\nconst getError = (citation) => {\n  return citation.error || citation.explanation || null\n}\n\nconst getVerificationStatus = (citation) => {\n  if (citation.verified === 'true' || citation.verified === true) return 'verified'\n  if (citation.verified === 'true_by_parallel') return 'true_by_parallel'\n  return 'unverified'\n}\n\nconst isVerified = (citation) => {\n  const status = getVerificationStatus(citation)\n  return status === 'verified' || status === 'true_by_parallel'\n}\n\n// Helper function to check if case names are substantially similar\nconst areCaseNamesSimilar = (canonical, extracted) => {\n  if (!canonical || !extracted) return false\n  if (canonical === 'N/A' || extracted === 'N/A') return false\n  \n  const normalize = (name) => {\n    return name.toLowerCase()\n      .replace(/[^\\w\\s]/g, ' ')\n      .replace(/\\s+/g, ' ')\n      .trim()\n  }\n  \n  const norm1 = normalize(canonical)\n  const norm2 = normalize(extracted)\n  \n  if (norm1 === norm2) return true\n  \n  // Check if one contains the other or they have significant overlap\n  const words1 = norm1.split(' ')\n  const words2 = norm2.split(' ')\n  const commonWords = words1.filter(word => words2.includes(word) && word.length > 2)\n  \n  return commonWords.length >= Math.min(words1.length, words2.length) * 0.6\n}\n\n// Helper function to check if dates are substantially similar\nconst areDatesSimilar = (canonical, extracted) => {\n  if (!canonical || !extracted) return false\n  \n  // Extract year from both dates\n  const getYear = (dateStr) => {\n    const match = dateStr.match(/\\d{4}/)\n    return match ? match[0] : null\n  }\n  \n  const year1 = getYear(canonical)\n  const year2 = getYear(extracted)\n  \n  return year1 && year2 && year1 === year2\n}\n\nconst getCitationStatusClass = (citation) => {\n  const status = getVerificationStatus(citation)\n  if (status === 'verified') return 'citation-verified'\n  if (status === 'true_by_parallel') return 'citation-parallel'\n  return 'citation-unverified'\n}\n\nconst getCaseNameClass = (citation) => {\n  const canonical = getCanonicalCaseName(citation)\n  const extracted = getExtractedCaseName(citation)\n  \n  if (areCaseNamesSimilar(canonical, extracted)) return 'name-similar'\n  return 'name-different'\n}\n\nconst getDateClass = (citation) => {\n  const canonical = getCanonicalDate(citation)\n  const extracted = getExtractedDate(citation)\n  \n  if (areDatesSimilar(canonical, extracted)) return 'date-similar'\n  return 'date-different'\n}\n\nconst getScoreClass = (citation) => {\n  const confidence = getConfidence(citation)\n  if (typeof confidence === 'number') {\n    if (confidence >= 0.8) return 'green'\n    if (confidence >= 0.6) return 'yellow'\n    if (confidence >= 0.4) return 'orange'\n    return 'red'\n  }\n  return isVerified(citation) ? 'green' : 'red'\n}\n\nconst getScoreDisplay = (citation) => {\n  const confidence = getConfidence(citation)\n  if (typeof confidence === 'number') {\n    return Math.round(confidence * 100) + '%'\n  }\n  return isVerified(citation) ? '✓' : '✗'\n}\n\nconst formatYear = (dateStr) => {\n  if (!dateStr) return null\n  const match = dateStr.match(/\\d{4}/)\n  return match ? match[0] : dateStr\n}\n\nconst toggleExpanded = (citationKey) => {\n  if (expandedCitations.value.has(citationKey)) {\n    expandedCitations.value.delete(citationKey)\n  } else {\n    expandedCitations.value.add(citationKey)\n  }\n}\n\nconst resetPagination = () => { currentPage.value = 1 }\nwatch(activeFilter, resetPagination)\nwatch(searchQuery, resetPagination)\n</script>\n\n<template>\n  <div class=\"citation-results\">\n    <div v-if=\"showLoading\" class=\"loading-state\">\n      <div class=\"loading-spinner\"></div>\n      <p>Processing citations...</p>\n      <ProcessingProgress \n        v-if=\"shouldShowProgressBar\"\n        :elapsed-time=\"0\"\n        :remaining-time=\"etaSeconds || 0\"\n        :total-progress=\"progress\"\n        :current-step=\"'Processing Citations'\"\n        :current-step-progress=\"progress\"\n        :processing-steps=\"[]\"\n        :citation-info=\"null\"\n        :rate-limit-info=\"null\"\n        :error=\"''\"\n        :can-retry=\"false\"\n        :timeout=\"null\"\n      />\n    </div>\n\n    <div v-else-if=\"error\" class=\"error-state\">\n      <div class=\"error-icon\">⚠️</div>\n      <h3>Error Processing Citations</h3>\n      <p>{{ error }}</p>\n    </div>\n\n    <div v-else-if=\"results && results.citations\" class=\"results-content\">\n      <div class=\"results-header\">\n        <div class=\"header-content\">\n          <h2>Citation Verification Results</h2>\n          <div class=\"summary-stats\">\n            <div class=\"stat-item verified\">\n              <span class=\"stat-number\">{{ validCount }}</span>\n              <span class=\"stat-label\">Verified</span>\n            </div>\n            <div class=\"stat-item invalid\">\n              <span class=\"stat-number\">{{ invalidCount }}</span>\n              <span class=\"stat-label\">Invalid</span>\n            </div>\n            <div class=\"stat-item total\">\n              <span class=\"stat-number\">{{ filteredCitations.length }}</span>\n              <span class=\"stat-label\">Total (excluding statutes)</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button class=\"action-btn copy-btn\" @click=\"$emit('copy-results')\">\n            Copy Results\n          </button>\n          <button class=\"action-btn download-btn\" @click=\"$emit('download-results')\">\n            Download\n          </button>\n        </div>\n      </div>\n\n      <div class=\"filter-section\">\n        <div class=\"filter-controls\">\n          <button \n            v-for=\"filter in filters\" \n            :key=\"filter.value\"\n            :class=\"['filter-btn', { active: activeFilter === filter.value }]\"\n            @click=\"activeFilter = filter.value\"\n          >\n            {{ filter.label }} ({{ filter.count }})\n          </button>\n        </div>\n        <div class=\"search-box\">\n          <input \n            v-model=\"searchQuery\"\n            type=\"text\" \n            placeholder=\"Search citations...\" \n            class=\"search-input\"\n          />\n        </div>\n      </div>\n\n      <div v-if=\"filteredCitations.length > 0\" class=\"citations-list\">\n        <div \n          v-for=\"citation in paginatedCitations\" \n          :key=\"getCitation(citation)\"\n          :class=\"['citation-item', { verified: isVerified(citation), invalid: !isVerified(citation) }]\"\n        >\n          <div class=\"citation-header\">\n            <div class=\"citation-main\">\n              <div class=\"citation-score\">\n                <span \n                  :class=\"['score-badge', getScoreClass(citation)]\"\n                  :title=\"'Confidence: ' + getConfidence(citation)\"\n                >\n                  {{ getScoreDisplay(citation) }}\n                </span>\n              </div>\n              <div class=\"citation-content\">\n                <div class=\"citation-link\">\n                  <a \n                    v-if=\"getCitationUrl(citation)\"\n                    :href=\"getCitationUrl(citation)\" \n                    target=\"_blank\"\n                    :class=\"['citation-hyperlink', getCitationStatusClass(citation)]\"\n                  >\n                    {{ getCitation(citation) }}\n                  </a>\n                  <span \n                    v-else \n                    :class=\"['citation-text', getCitationStatusClass(citation)]\"\n                  >\n                    {{ getCitation(citation) }}\n                  </span>\n                </div>\n                \n                <!-- Canonical Case Name and Date -->\n                <div v-if=\"getCanonicalCaseName(citation)\" class=\"canonical-info\">\n                  <div class=\"canonical-label\">Canonical:</div>\n                  <div class=\"canonical-details\">\n                    <a \n                      v-if=\"getCitationUrl(citation)\"\n                      :href=\"getCitationUrl(citation)\"\n                      target=\"_blank\"\n                      :class=\"['canonical-name', getCaseNameClass(citation)]\"\n                    >\n                      {{ getCanonicalCaseName(citation) }}\n                    </a>\n                    <span \n                      v-else\n                      :class=\"['canonical-name', getCaseNameClass(citation)]\"\n                    >\n                      {{ getCanonicalCaseName(citation) }}\n                    </span>\n                    <span v-if=\"getCanonicalDate(citation)\" :class=\"['canonical-date', getDateClass(citation)]\">\n                      ({{ formatYear(getCanonicalDate(citation)) }})\n                    </span>\n                  </div>\n                </div>\n                \n                <!-- Extracted Case Name and Date -->\n                <div v-if=\"getExtractedCaseName(citation) || getExtractedDate(citation)\" class=\"extracted-info\">\n                  <div class=\"extracted-label\">Extracted from document:</div>\n                  <div class=\"extracted-details\">\n                    <span v-if=\"getExtractedCaseName(citation)\" :class=\"['extracted-name', getCaseNameClass(citation)]\">\n                      {{ getExtractedCaseName(citation) }}\n                    </span>\n                    <span v-if=\"getExtractedDate(citation)\" :class=\"['extracted-date', getDateClass(citation)]\">\n                      ({{ formatYear(getExtractedDate(citation)) }})\n                    </span>\n                    <span v-if=\"!getExtractedCaseName(citation) && !getExtractedDate(citation)\" class=\"no-extraction\">\n                      No case name or date extracted\n                    </span>\n                  </div>\n                </div>\n                \n                <div class=\"citation-meta\">\n                  <span class=\"source\">{{ getSource(citation) }}</span>\n                  <span v-if=\"getVerificationMethod(citation) !== 'N/A'\" class=\"method\">\n                    via {{ getVerificationMethod(citation) }}\n                  </span>\n                  <span class=\"verification-status\" :class=\"getVerificationStatus(citation)\">\n                    {{ getVerificationStatus(citation).replace('_', ' ') }}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"citation-actions\">\n              <button \n                :class=\"['expand-btn', { expanded: expandedCitations.has(getCitation(citation)) }]\"\n                @click=\"toggleExpanded(getCitation(citation))\"\n              >\n                {{ expandedCitations.has(getCitation(citation)) ? '−' : '+' }}\n              </button>\n            </div>\n          </div>\n\n          <div v-if=\"expandedCitations.has(getCitation(citation))\" class=\"citation-details\">\n            <div class=\"detail-section\">\n              <h4 class=\"section-title\">Citation Information</h4>\n              <div class=\"detail-row\">\n                <span class=\"detail-label\">Status:</span>\n                <span :class=\"{ 'text-success': isVerified(citation), 'text-danger': !isVerified(citation) }\">\n                  {{ isVerified(citation) ? 'Verified' : 'Invalid' }}\n                </span>\n              </div>\n              <div v-if=\"citation.canonical_date\" class=\"detail-row\">\n                <span class=\"detail-label\">Date:</span>\n                <span>{{ citation.canonical_date }}</span>\n              </div>\n              <div v-if=\"citation.court\" class=\"detail-row\">\n                <span class=\"detail-label\">Court:</span>\n                <span>{{ citation.court }}</span>\n              </div>\n              <div v-if=\"citation.docket_number\" class=\"detail-row\">\n                <span class=\"detail-label\">Docket:</span>\n                <span>{{ citation.docket_number }}</span>\n              </div>\n              <div v-if=\"getError(citation)\" class=\"detail-row\">\n                <span class=\"detail-label\">Error:</span>\n                <span class=\"text-danger\">{{ getError(citation) }}</span>\n              </div>\n              <div v-if=\"citation.parallel_citations && citation.parallel_citations.length > 0\" class=\"detail-row\">\n                <span class=\"detail-label\">Parallel Citations:</span>\n                <div class=\"parallel-citations\">\n                  <span \n                    v-for=\"parallel in citation.parallel_citations\"\n                    :key=\"parallel.citation\"\n                    class=\"parallel-citation\"\n                  >\n                    {{ parallel.citation }}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-else class=\"no-results\">\n        <p>No citations found matching your criteria.</p>\n      </div>\n\n      <div v-if=\"totalPages > 1\" class=\"pagination\">\n        <button \n          :disabled=\"currentPage === 1\"\n          @click=\"currentPage = currentPage - 1\"\n          class=\"pagination-btn\"\n        >\n          Previous\n        </button>\n        <span class=\"pagination-info\">\n          Page {{ currentPage }} of {{ totalPages }}\n        </span>\n        <button \n          :disabled=\"currentPage === totalPages\"\n          @click=\"currentPage = currentPage + 1\"\n          class=\"pagination-btn\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n\n    <div v-else class=\"no-results-state\">\n      <p>No citation results to display.</p>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.citation-results {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.loading-state {\n  text-align: center;\n  padding: 3rem;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #007bff;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin: 0 auto 1rem;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.error-state {\n  text-align: center;\n  padding: 3rem;\n  background: #fff5f5;\n  border-radius: 12px;\n  border: 1px solid #fed7d7;\n}\n\n.error-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n}\n\n.results-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 2rem;\n  padding-bottom: 1.5rem;\n  border-bottom: 2px solid #f8f9fa;\n}\n\n.header-content h2 {\n  margin: 0 0 1rem 0;\n  color: #2c3e50;\n}\n\n.summary-stats {\n  display: flex;\n  gap: 2rem;\n}\n\n.stat-item {\n  text-align: center;\n}\n\n.stat-number {\n  display: block;\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n\n.stat-item.verified .stat-number {\n  color: #28a745;\n}\n\n.stat-item.invalid .stat-number {\n  color: #dc3545;\n}\n\n.stat-item.total .stat-number {\n  color: #007bff;\n}\n\n.stat-label {\n  font-size: 0.8rem;\n  color: #6c757d;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 1rem;\n}\n\n.action-btn {\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.copy-btn {\n  background: #007bff;\n  color: white;\n}\n\n.copy-btn:hover {\n  background: #0056b3;\n}\n\n.download-btn {\n  background: #28a745;\n  color: white;\n}\n\n.download-btn:hover {\n  background: #1e7e34;\n}\n\n.filter-section {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  gap: 1rem;\n}\n\n.filter-controls {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.filter-btn {\n  padding: 0.5rem 1rem;\n  border: 2px solid #e9ecef;\n  background: white;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 0.9rem;\n}\n\n.filter-btn:hover {\n  border-color: #007bff;\n}\n\n.filter-btn.active {\n  background: #007bff;\n  color: white;\n  border-color: #007bff;\n}\n\n.search-box {\n  flex: 1;\n  max-width: 300px;\n}\n\n.search-input {\n  width: 100%;\n  padding: 0.5rem 1rem;\n  border: 2px solid #e9ecef;\n  border-radius: 8px;\n  font-size: 0.9rem;\n}\n\n.search-input:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\n.citations-list {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.citation-item {\n  background: white;\n  border: 1px solid #e9ecef;\n  border-radius: 8px;\n  transition: all 0.2s;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.citation-item:hover {\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n  transform: translateY(-1px);\n}\n\n.citation-item.verified {\n  border-left: 4px solid #28a745;\n}\n\n.citation-item.invalid {\n  border-left: 4px solid #dc3545;\n}\n\n.citation-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 1rem;\n}\n\n.citation-main {\n  flex: 1;\n  display: flex;\n  gap: 1rem;\n  align-items: flex-start;\n}\n\n.citation-score {\n  flex-shrink: 0;\n}\n\n.score-badge {\n  display: inline-block;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  color: white;\n  min-width: 35px;\n  text-align: center;\n}\n\n.score-badge.green {\n  background: #28a745;\n}\n\n.score-badge.yellow {\n  background: #ffc107;\n  color: #212529;\n}\n\n.score-badge.orange {\n  background: #fd7e14;\n}\n\n.score-badge.red {\n  background: #dc3545;\n}\n\n.citation-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.citation-link {\n  font-weight: 600;\n}\n\n.citation-hyperlink {\n  color: #007bff;\n  text-decoration: none;\n  font-family: 'Courier New', monospace;\n  font-weight: 600;\n}\n\n.citation-hyperlink:hover {\n  text-decoration: underline;\n}\n\n.citation-text {\n  font-weight: 600;\n  color: #2c3e50;\n  font-family: 'Courier New', monospace;\n}\n\n/* Citation status colors */\n.citation-verified {\n  color: #28a745 !important;\n}\n\n.citation-parallel {\n  color: #ffc107 !important;\n}\n\n.citation-unverified {\n  color: #dc3545 !important;\n}\n\n/* Canonical and Extracted Info Sections */\n.canonical-info,\n.extracted-info {\n  margin: 0.5rem 0;\n  padding: 0.5rem;\n  border-radius: 4px;\n  background: #f8f9fa;\n}\n\n.canonical-info {\n  border-left: 3px solid #007bff;\n}\n\n.extracted-info {\n  border-left: 3px solid #6c757d;\n}\n\n.canonical-label,\n.extracted-label {\n  font-size: 0.75rem;\n  font-weight: 600;\n  color: #6c757d;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 0.25rem;\n}\n\n.canonical-details,\n.extracted-details {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n}\n\n/* Case name similarity colors */\n.canonical-name,\n.extracted-name {\n  font-weight: 600;\n  font-size: 0.9rem;\n  text-decoration: none;\n}\n\n.canonical-name:hover {\n  text-decoration: underline;\n}\n\n.name-similar {\n  color: #28a745;\n}\n\n.name-different {\n  color: #ffc107;\n}\n\n/* Maintain color on hover for canonical name links */\n.canonical-name.name-similar:hover {\n  color: #1e7e34;\n}\n\n.canonical-name.name-different:hover {\n  color: #e0a800;\n}\n\n/* Date similarity colors */\n.canonical-date,\n.extracted-date {\n  font-weight: 500;\n  font-size: 0.85rem;\n}\n\n.date-similar {\n  color: #28a745;\n}\n\n.date-different {\n  color: #ffc107;\n}\n\n.no-extraction {\n  color: #6c757d;\n  font-style: italic;\n  font-size: 0.85rem;\n}\n\n.citation-meta {\n  display: flex;\n  gap: 1rem;\n  font-size: 0.85rem;\n  color: #6c757d;\n  flex-wrap: wrap;\n  margin-top: 0.5rem;\n}\n\n.source {\n  font-weight: 500;\n}\n\n.method {\n  font-style: italic;\n}\n\n.verification-status {\n  padding: 0.125rem 0.5rem;\n  border-radius: 12px;\n  font-size: 0.75rem;\n  font-weight: 600;\n  text-transform: uppercase;\n}\n\n.verification-status.verified {\n  background: #d4edda;\n  color: #155724;\n}\n\n.verification-status.true_by_parallel {\n  background: #fff3cd;\n  color: #856404;\n}\n\n.verification-status.unverified {\n  background: #f8d7da;\n  color: #721c24;\n}\n\n.citation-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.expand-btn {\n  background: none;\n  border: none;\n  padding: 0.5rem;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n  color: #6c757d;\n  transition: all 0.2s;\n}\n\n.expand-btn:hover {\n  background: #f8f9fa;\n  color: #495057;\n}\n\n.expand-btn.expanded {\n  background: #e9ecef;\n  color: #495057;\n}\n\n.citation-details {\n  padding: 1rem;\n  background: #f8f9fa;\n  border-top: 1px solid #e9ecef;\n}\n\n.detail-section {\n  margin-bottom: 1.5rem;\n}\n\n.detail-section:last-child {\n  margin-bottom: 0;\n}\n\n.section-title {\n  margin: 0 0 0.75rem 0;\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #495057;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  border-bottom: 1px solid #dee2e6;\n  padding-bottom: 0.25rem;\n}\n\n.detail-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 0.5rem;\n  padding: 0.25rem 0;\n}\n\n.detail-row:last-child {\n  margin-bottom: 0;\n}\n\n.detail-label {\n  font-weight: 600;\n  color: #495057;\n  min-width: 140px;\n  flex-shrink: 0;\n}\n\n.text-success {\n  color: #28a745;\n  font-weight: 600;\n}\n\n.text-danger {\n  color: #dc3545;\n  font-weight: 600;\n}\n\n.parallel-citations {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.parallel-citation {\n  background: #e9ecef;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-size: 0.85rem;\n  font-family: 'Courier New', monospace;\n}\n\n.no-results,\n.no-results-state {\n  text-align: center;\n  padding: 3rem;\n  color: #6c757d;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  margin-top: 2rem;\n  padding: 1rem;\n}\n\n.pagination-btn {\n  padding: 0.5rem 1rem;\n  border: 2px solid #e9ecef;\n  background: white;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 0.9rem;\n}\n\n.pagination-btn:hover:not(:disabled) {\n  border-color: #007bff;\n  background: #f8f9fa;\n}\n\n.pagination-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-info {\n  font-weight: 600;\n  color: #495057;\n}\n\n@media (max-width: 768px) {\n  .results-header {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .summary-stats {\n    gap: 1rem;\n  }\n  \n  .filter-section {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .search-box {\n    max-width: none;\n  }\n  \n  .citation-header {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .citation-main {\n    align-items: flex-start;\n  }\n}\n</style>","<template>\n  <div class=\"unified-input\">\n    <!-- Top Row: File Upload and URL Upload -->\n    <div class=\"input-methods-top\">\n      <div \n        :class=\"['input-method-card', { active: inputMode === 'file', disabled: isAnalyzing }]\"\n        @click=\"!isAnalyzing && (inputMode = 'file', onModeChange())\"\n      >\n        <div class=\"method-icon\">{{ methodIcons.file }}</div>\n        <div class=\"method-content\">\n          <h4>{{ modeLabels.file }}</h4>\n          <p>{{ modeDescriptions.file }}</p>\n        </div>\n        <div v-if=\"inputMode === 'file'\" class=\"active-indicator\">✓</div>\n      </div>\n\n      <div \n        :class=\"['input-method-card', { active: inputMode === 'url', disabled: isAnalyzing }]\"\n        @click=\"!isAnalyzing && (inputMode = 'url', onModeChange())\"\n      >\n        <div class=\"method-icon\">{{ methodIcons.url }}</div>\n        <div class=\"method-content\">\n          <h4>{{ modeLabels.url }}</h4>\n          <p>{{ modeDescriptions.url }}</p>\n        </div>\n        <div v-if=\"inputMode === 'url'\" class=\"active-indicator\">✓</div>\n      </div>\n    </div>\n\n    <!-- Input Area for File and URL -->\n    <div class=\"input-area-top\" v-if=\"inputMode === 'file' || inputMode === 'url'\">\n      <!-- File Input -->\n      <div v-if=\"inputMode === 'file'\" class=\"file-input\">\n        <label class=\"input-label\">\n          <i class=\"bi bi-file-earmark-arrow-up me-2\"></i>\n          Upload a document\n        </label>\n        <div \n          :class=\"['file-drop-zone', { \n            'has-file': file, \n            'dragover': isDragOver,\n            'error': hasErrors && isDirty.file \n          }]\"\n          @drop=\"onFileDrop\"\n          @dragover.prevent=\"isDragOver = true\"\n          @dragleave.prevent=\"isDragOver = false\"\n          @click=\"triggerFileInput\"\n        >\n          <input \n            ref=\"fileInput\"\n            id=\"fileInput\"\n            type=\"file\" \n            @change=\"onFileChange\" \n            :disabled=\"isAnalyzing\"\n            accept=\".pdf,.doc,.docx,.txt\"\n            style=\"display: none;\"\n          />\n          <div v-if=\"!file\" class=\"drop-zone-content\">\n            <div class=\"upload-icon\">📁</div>\n            <h5 class=\"drop-zone-title\">Click to browse or drag & drop</h5>\n            <p class=\"file-types\">Supports: PDF, DOC, DOCX, TXT (max 50MB)</p>\n            <div class=\"drop-zone-hint\">\n              <i class=\"bi bi-arrow-up-circle\"></i>\n              <span>Drop your file here</span>\n            </div>\n          </div>\n          <div v-else class=\"file-info\">\n            <div class=\"file-icon\">📄</div>\n            <div class=\"file-details\">\n              <strong>{{ file.name }}</strong>\n              <span>{{ formatFileSize(file.size) }}</span>\n            </div>\n            <button \n              v-if=\"!isAnalyzing\"\n              @click.stop=\"clearFile\" \n              class=\"clear-file-btn\"\n              title=\"Remove file\"\n            >\n              <i class=\"bi bi-x-lg\"></i>\n            </button>\n          </div>\n        </div>\n        <!-- Validation Errors -->\n        <div v-if=\"hasErrors && isDirty.file\" class=\"validation-errors\">\n          <div v-for=\"error in currentErrors\" :key=\"error\" class=\"error-message\">\n            <span class=\"error-icon\">⚠️</span>\n            {{ error }}\n          </div>\n        </div>\n      </div>\n\n      <!-- URL Input -->\n      <div v-else-if=\"inputMode === 'url'\" class=\"url-input\">\n        <label class=\"input-label\">\n          <i class=\"bi bi-link-45deg me-2\"></i>\n          Enter URL to analyze\n        </label>\n        <div class=\"url-input-container\">\n          <div class=\"input-wrapper\">\n            <div class=\"input-icon\">\n              <i class=\"bi bi-globe\"></i>\n            </div>\n            <input \n              v-model=\"url\" \n              type=\"url\" \n              placeholder=\"https://example.com/document.pdf\"\n              :disabled=\"isAnalyzing\"\n              @input=\"handleInputChange\"\n              :class=\"{ 'error': hasErrors && isDirty.url }\"\n              class=\"url-input-field\"\n            />\n            <div v-if=\"url && !hasErrors\" class=\"input-status valid\">\n              <i class=\"bi bi-check-circle-fill\"></i>\n            </div>\n            <div v-else-if=\"url && hasErrors\" class=\"input-status invalid\">\n              <i class=\"bi bi-x-circle-fill\"></i>\n            </div>\n          </div>\n        </div>\n        <div class=\"input-footer\">\n          <span class=\"url-preview\" v-if=\"url && !hasErrors\">\n            <i class=\"bi bi-eye me-1\"></i>\n            Will analyze: {{ url }}\n          </span>\n          <span v-else-if=\"url && hasErrors\" class=\"url-error\">\n            <i class=\"bi bi-exclamation-triangle me-1\"></i>\n            Invalid URL format\n          </span>\n          <span v-else class=\"url-hint\">\n            <i class=\"bi bi-info-circle me-1\"></i>\n            Enter a valid URL to analyze web content\n          </span>\n        </div>\n        <!-- Validation Errors -->\n        <div v-if=\"hasErrors && isDirty.url\" class=\"validation-errors\">\n          <div v-for=\"error in currentErrors\" :key=\"error\" class=\"error-message\">\n            <span class=\"error-icon\">⚠️</span>\n            {{ error }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Bottom Row: Quick Citation and Paste Text -->\n    <div class=\"input-methods-bottom\">\n      <div \n        :class=\"['input-method-card', { active: inputMode === 'quick', disabled: isAnalyzing }]\"\n        @click=\"!isAnalyzing && (inputMode = 'quick', onModeChange())\"\n      >\n        <div class=\"method-icon\">{{ methodIcons.quick }}</div>\n        <div class=\"method-content\">\n          <h4>{{ modeLabels.quick }}</h4>\n          <p>{{ modeDescriptions.quick }}</p>\n        </div>\n        <div v-if=\"inputMode === 'quick'\" class=\"active-indicator\">✓</div>\n      </div>\n\n      <div \n        :class=\"['input-method-card', { active: inputMode === 'text', disabled: isAnalyzing }]\"\n        @click=\"!isAnalyzing && (inputMode = 'text', onModeChange())\"\n      >\n        <div class=\"method-icon\">{{ methodIcons.text }}</div>\n        <div class=\"method-content\">\n          <h4>{{ modeLabels.text }}</h4>\n          <p>{{ modeDescriptions.text }}</p>\n        </div>\n        <div v-if=\"inputMode === 'text'\" class=\"active-indicator\">✓</div>\n      </div>\n    </div>\n\n    <!-- Recent Inputs Section -->\n    <RecentInputs @load-input=\"loadRecentInput\" />\n    \n    <!-- Analyze Button -->\n    <div class=\"analyze-section\">\n      <button \n        :class=\"['analyze-btn', { disabled: !canAnalyze || isAnalyzing }]\"\n        :disabled=\"!canAnalyze || isAnalyzing\" \n        @click=\"emitAnalyze\"\n      >\n        <span v-if=\"isAnalyzing\" class=\"analyzing-spinner\"></span>\n        <span v-else class=\"analyze-icon\">🔍</span>\n        {{ isAnalyzing ? 'Analyzing...' : 'Analyze Content' }}\n      </button>\n      <!-- Validation Summary -->\n      <div v-if=\"showValidationWarning && hasErrors\" class=\"validation-summary\">\n        <p>Please fix the errors above before analyzing</p>\n      </div>\n    </div>\n    \n    <!-- Input Area for Quick Citation and Text -->\n    <div class=\"input-area-bottom\" v-if=\"inputMode === 'text' || inputMode === 'quick'\">\n      <!-- Text Input -->\n      <div v-if=\"inputMode === 'text'\" class=\"text-input\">\n        <label class=\"input-label\">\n          <i class=\"bi bi-text-paragraph me-2\"></i>\n          Paste your text here\n        </label>\n        <div class=\"textarea-container\">\n          <textarea \n            v-model=\"text\" \n            placeholder=\"Paste legal text, citations, or document content here...\"\n            :disabled=\"isAnalyzing\"\n            rows=\"8\"\n            @input=\"handleInputChange\"\n            :class=\"{ 'error': hasErrors && isDirty.text }\"\n            class=\"text-input-field\"\n          ></textarea>\n          <div class=\"textarea-overlay\" v-if=\"!text\">\n            <i class=\"bi bi-clipboard\"></i>\n            <span>Paste your content here</span>\n          </div>\n        </div>\n        <div class=\"input-footer\">\n          <span class=\"char-count\" :class=\"{ 'error': text.length > VALIDATION_RULES.text.maxLength }\">\n            <i class=\"bi bi-type me-1\"></i>\n            {{ text.length }} / {{ VALIDATION_RULES.text.maxLength }} characters\n          </span>\n          <span v-if=\"text.length < VALIDATION_RULES.text.minLength && isDirty.text\" class=\"min-length-hint\">\n            <i class=\"bi bi-exclamation-circle me-1\"></i>\n            Minimum {{ VALIDATION_RULES.text.minLength }} characters required\n          </span>\n        </div>\n        <!-- Validation Errors -->\n        <div v-if=\"hasErrors && isDirty.text\" class=\"validation-errors\">\n          <div v-for=\"error in currentErrors\" :key=\"error\" class=\"error-message\">\n            <span class=\"error-icon\">⚠️</span>\n            {{ error }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Quick Citation Input -->\n      <div v-else-if=\"inputMode === 'quick'\" class=\"quick-citation-input-area\">\n        <label class=\"input-label\">\n          <i class=\"bi bi-lightning me-2\"></i>\n          Enter a single citation\n        </label>\n        <div class=\"quick-input-container\">\n          <div class=\"input-wrapper\">\n            <div class=\"input-icon\">\n              <i class=\"bi bi-quote\"></i>\n            </div>\n            <input\n              v-model=\"quickCitation\"\n              type=\"text\"\n              placeholder=\"e.g., 410 U.S. 113 (1973) or Roe v. Wade\"\n              :disabled=\"isAnalyzing\"\n              @keyup.enter=\"emitAnalyze\"\n              class=\"quick-citation-input\"\n            />\n            <div v-if=\"quickCitation\" class=\"input-status valid\">\n              <i class=\"bi bi-check-circle-fill\"></i>\n            </div>\n          </div>\n        </div>\n        <div class=\"input-footer\">\n          <span class=\"citation-hint\">\n            <i class=\"bi bi-info-circle me-1\"></i>\n            Enter a legal citation to verify quickly\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport RecentInputs from './RecentInputs.vue';\n\nconst props = defineProps({\n  isAnalyzing: { type: Boolean, default: false }\n});\n\nconst emit = defineEmits(['analyze']);\n\nconst modes = ['text', 'url', 'file', 'quick'];\nconst modeLabels = { \n  text: 'Paste Text', \n  url: 'URL', \n  file: 'Upload File',\n  quick: 'Quick Citation'\n};\nconst modeDescriptions = {\n  text: 'Paste legal text or citations directly',\n  url: 'Analyze content from a web URL',\n  file: 'Upload a document for analysis',\n  quick: 'Enter a single citation and analyze instantly'\n};\nconst methodIcons = {\n  text: '📝',\n  url: '🔗',\n  file: '📁',\n  quick: '🔎'\n};\n\n// Validation constants\nconst VALIDATION_RULES = {\n  text: {\n    minLength: 10,\n    maxLength: 50000,\n    minLengthMessage: 'Text must be at least 10 characters long',\n    maxLengthMessage: 'Text is too long. Maximum 50,000 characters allowed.'\n  },\n  url: {\n    maxLength: 2048,\n    maxLengthMessage: 'URL is too long. Maximum 2,048 characters allowed.'\n  },\n  file: {\n    maxSize: 50 * 1024 * 1024, // 50MB\n    allowedTypes: ['.pdf', '.doc', '.docx', '.txt'],\n    maxSizeMessage: 'File is too large. Maximum 50MB allowed.',\n    typeMessage: 'Invalid file type. Please upload PDF, DOC, DOCX, or TXT files.'\n  }\n};\n\nconst inputMode = ref('text');\nconst text = ref('');\nconst url = ref('');\nconst file = ref(null);\nconst isDragOver = ref(false);\nconst fileInput = ref(null);\nconst quickCitation = ref('');\n\n// Validation state\nconst validationErrors = ref({});\nconst isDirty = ref({ text: false, url: false, file: false, quick: false });\nconst showValidationWarning = ref(false);\n\n// Validation functions\nfunction validateText(text) {\n  const errors = [];\n  const rules = VALIDATION_RULES.text;\n  \n  if (!text.trim()) {\n    errors.push('Text is required');\n  } else if (text.length < rules.minLength) {\n    errors.push(rules.minLengthMessage);\n  } else if (text.length > rules.maxLength) {\n    errors.push(rules.maxLengthMessage);\n  }\n  \n  // Check for non-printable characters\n  if (/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F]/.test(text)) {\n    errors.push('Text contains invalid characters. Please remove any special characters.');\n  }\n  \n  return errors;\n}\n\nfunction validateUrl(url) {\n  const errors = [];\n  const rules = VALIDATION_RULES.url;\n  if (!url.trim()) {\n    errors.push('URL is required');\n  } else if (url.length > rules.maxLength) {\n    errors.push(rules.maxLengthMessage);\n  } else {\n    // Only require http(s) and a dot\n    if (!/^https?:\\/\\//.test(url)) {\n      errors.push('URL must start with http:// or https://');\n    } else if (!/\\./.test(url)) {\n      errors.push('URL must contain a dot');\n    }\n  }\n  return errors;\n}\n\nfunction validateFile(file) {\n  const errors = [];\n  const rules = VALIDATION_RULES.file;\n  \n  if (!file) {\n    errors.push('Please select a file');\n  } else {\n    if (file.size > rules.maxSize) {\n      errors.push(rules.maxSizeMessage);\n    }\n    \n    if (file.size === 0) {\n      errors.push('File is empty');\n    }\n    \n    const extension = '.' + file.name.split('.').pop().toLowerCase();\n    if (!rules.allowedTypes.includes(extension)) {\n      errors.push(rules.typeMessage);\n    }\n  }\n  \n  return errors;\n}\n\n// Real-time validation\nfunction validateCurrentInput() {\n  const errors = {};\n  \n  if (inputMode.value === 'text') {\n    errors.text = validateText(text.value);\n  } else if (inputMode.value === 'url') {\n    errors.url = validateUrl(url.value);\n  } else if (inputMode.value === 'file') {\n    errors.file = validateFile(file.value);\n  }\n  \n  validationErrors.value = errors;\n}\n\n// Watch for changes and validate\nfunction handleInputChange() {\n  isDirty.value[inputMode.value] = true;\n  showValidationWarning.value = false;\n  validateCurrentInput();\n  console.log('[handleInputChange] mode:', inputMode.value, 'file:', file.value, 'url:', url.value, 'hasErrors:', hasErrors.value, 'currentErrors:', currentErrors.value);\n}\n\n// Computed properties\nconst currentErrors = computed(() => {\n  return validationErrors.value[inputMode.value] || [];\n});\n\nconst hasErrors = computed(() => {\n  return currentErrors.value.length > 0;\n});\n\nconst canAnalyze = computed(() => {\n  let result = false;\n  if (props.isAnalyzing) return false;\n  if (inputMode.value === 'text') {\n    result = text.value.length >= VALIDATION_RULES.text.minLength && text.value.length <= VALIDATION_RULES.text.maxLength;\n  } else if (inputMode.value === 'url') {\n    // TEMP: Only require a value for debugging\n    result = url.value.length > 0;\n  } else if (inputMode.value === 'file') {\n    // TEMP: Only require a file for debugging\n    result = !!file.value;\n  } else if (inputMode.value === 'quick') {\n    result = quickCitation.value.trim().length > 0;\n  }\n  console.log('[canAnalyze] mode:', inputMode.value, 'result:', result, 'file:', file.value, 'url:', url.value, 'hasErrors:', hasErrors.value, 'currentErrors:', currentErrors.value);\n  return result;\n});\n\n// Event handlers\nfunction onFileChange(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  file.value = e.target.files[0] || null;\n  isDragOver.value = false;\n  handleInputChange();\n}\n\nfunction onFileDrop(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  const droppedFile = e.dataTransfer.files[0];\n  if (droppedFile) {\n    file.value = droppedFile;\n    handleInputChange();\n  }\n  isDragOver.value = false;\n}\n\nfunction triggerFileInput() {\n  if (!props.isAnalyzing) {\n    fileInput.value?.click();\n  }\n}\n\nfunction clearFile() {\n  file.value = null;\n  if (fileInput.value) {\n    fileInput.value.value = '';\n  }\n  handleInputChange();\n}\n\nfunction emitAnalyze() {\n  if (!canAnalyze.value) {\n    showValidationWarning.value = true;\n    return;\n  }\n  showValidationWarning.value = false;\n  if (inputMode.value === 'text') {\n    emit('analyze', { text: text.value, type: 'text' });\n  } else if (inputMode.value === 'url') {\n    emit('analyze', { url: url.value, type: 'url' });\n  } else if (inputMode.value === 'file') {\n    // Always send FormData with 'type' and optional 'options'\n    const formData = new FormData();\n    formData.append('file', file.value);\n    formData.append('type', 'file');\n    // If you have options, add them here (example: analysis options)\n    // formData.append('options', JSON.stringify(options));\n    emit('analyze', formData);\n  } else if (inputMode.value === 'quick') {\n    emit('analyze', { text: quickCitation.value.trim(), type: 'text', quick: true });\n    quickCitation.value = '';\n  }\n}\n\nfunction loadRecentInput(input) {\n  // Update the input mode and values based on the recent input\n  inputMode.value = input.tab;\n  \n  switch (input.tab) {\n    case 'text':\n      text.value = input.text || '';\n      break;\n    case 'url':\n      url.value = input.url || '';\n      break;\n    case 'file':\n      // For files, we can't restore the actual file, but we can show a message\n      console.log('File input selected:', input.fileName);\n      break;\n  }\n  \n  // Trigger validation\n  validateCurrentInput();\n}\n\nfunction formatFileSize(bytes) {\n  if (!bytes) return '0 Bytes';\n  const k = 1024, sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// Watch for mode changes to reset validation and force validation\nfunction onModeChange() {\n  validationErrors.value = {};\n  isDirty.value = { text: false, url: false, file: false, quick: false };\n  showValidationWarning.value = false;\n  validateCurrentInput();\n  console.log('[onModeChange] inputMode:', inputMode.value, 'file:', file.value, 'url:', url.value, 'hasErrors:', hasErrors.value, 'currentErrors:', currentErrors.value);\n}\n</script>\n\n<style scoped>\n.unified-input {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.input-methods-top {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  flex-wrap: wrap;\n}\n\n.input-methods-bottom {\n  display: flex;\n  gap: 1rem;\n  margin-top: 2rem;\n  flex-wrap: wrap;\n}\n\n.input-method-card {\n  background: white;\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  padding: 1.5rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  flex: 1;\n  min-width: 200px;\n  max-width: 300px;\n}\n\n.input-method-card:hover:not(.disabled) {\n  border-color: #007bff;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 123, 255, 0.15);\n}\n\n.input-method-card.active {\n  border-color: #007bff;\n  background: #f8f9ff;\n}\n\n.input-method-card.disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.method-icon {\n  font-size: 2rem;\n  flex-shrink: 0;\n}\n\n.method-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.method-content h4 {\n  margin: 0 0 0.5rem 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n}\n\n.method-content p {\n  margin: 0;\n  font-size: 0.9rem;\n  color: #6c757d;\n  line-height: 1.3;\n}\n\n.active-indicator {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: #007bff;\n  color: white;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.8rem;\n}\n\n.input-area-top {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  animation: slideDown 0.3s ease-out;\n}\n\n.input-area-bottom {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  margin-top: 2rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  animation: slideDown 0.3s ease-out;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.input-label {\n  display: block;\n  margin-bottom: 1rem;\n  font-weight: 600;\n  color: #495057;\n  font-size: 1.1rem;\n}\n\n.input-label i {\n  color: #007bff;\n}\n\n/* URL Input Styling */\n.url-input-container {\n  position: relative;\n}\n\n.input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n  background: white;\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  transition: all 0.2s ease;\n  overflow: hidden;\n}\n\n.input-wrapper:focus-within {\n  border-color: #007bff;\n  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\n}\n\n.input-wrapper.error {\n  border-color: #dc3545;\n  background-color: #fff5f5;\n}\n\n.input-icon {\n  padding: 0 1rem;\n  color: #6c757d;\n  font-size: 1.2rem;\n  flex-shrink: 0;\n}\n\n.url-input-field,\n.quick-citation-input {\n  flex: 1;\n  padding: 1rem;\n  border: none;\n  outline: none;\n  font-size: 1rem;\n  background: transparent;\n}\n\n.url-input-field:focus,\n.quick-citation-input:focus {\n  outline: none;\n}\n\n.input-status {\n  padding: 0 1rem;\n  font-size: 1.2rem;\n  flex-shrink: 0;\n}\n\n.input-status.valid {\n  color: #28a745;\n}\n\n.input-status.invalid {\n  color: #dc3545;\n}\n\n/* Text Input Styling */\n.textarea-container {\n  position: relative;\n}\n\n.text-input-field {\n  width: 100%;\n  padding: 1.5rem;\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  font-size: 1rem;\n  transition: all 0.2s ease;\n  resize: vertical;\n  min-height: 200px;\n  background: white;\n}\n\n.text-input-field:focus {\n  outline: none;\n  border-color: #007bff;\n  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\n}\n\n.text-input-field.error {\n  border-color: #dc3545;\n  background-color: #fff5f5;\n}\n\n.textarea-overlay {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: #6c757d;\n  text-align: center;\n  pointer-events: none;\n  z-index: 1;\n}\n\n.textarea-overlay i {\n  font-size: 2rem;\n  margin-bottom: 0.5rem;\n  display: block;\n}\n\n/* Quick Input Container */\n.quick-input-container {\n  position: relative;\n}\n\n.input-footer {\n  margin-top: 1rem;\n  font-size: 0.9rem;\n  color: #6c757d;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.75rem 1rem;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border-left: 4px solid #007bff;\n}\n\n.url-preview {\n  color: #28a745;\n  font-weight: 500;\n}\n\n.url-error {\n  color: #dc3545;\n  font-weight: 600;\n}\n\n.url-hint,\n.citation-hint {\n  color: #6c757d;\n  font-style: italic;\n}\n\n.char-count {\n  color: #6c757d;\n  font-weight: 500;\n}\n\n.char-count.error {\n  color: #dc3545;\n  font-weight: 600;\n}\n\n.min-length-hint {\n  color: #856404;\n  background: #fff3cd;\n  padding: 0.5rem 0.75rem;\n  border-radius: 6px;\n  font-size: 0.85rem;\n  border-left: 3px solid #ffc107;\n}\n\n.file-drop-zone {\n  border: 3px dashed #dee2e6;\n  border-radius: 16px;\n  padding: 3rem 2rem;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: #fafbfc;\n  position: relative;\n  overflow: hidden;\n}\n\n.file-drop-zone:hover:not(.disabled) {\n  border-color: #007bff;\n  background: #f8f9ff;\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(0, 123, 255, 0.15);\n}\n\n.file-drop-zone.dragover {\n  border-color: #007bff;\n  background: #f8f9ff;\n  transform: scale(1.02);\n  box-shadow: 0 12px 30px rgba(0, 123, 255, 0.2);\n}\n\n.file-drop-zone.has-file {\n  border-style: solid;\n  border-color: #28a745;\n  background: #f8fff9;\n  box-shadow: 0 4px 15px rgba(40, 167, 69, 0.15);\n}\n\n.file-drop-zone.error {\n  border-color: #dc3545;\n  background: #fff5f5;\n}\n\n.drop-zone-content {\n  color: #6c757d;\n}\n\n.drop-zone-title {\n  margin: 1rem 0 0.5rem 0;\n  font-weight: 600;\n  color: #495057;\n}\n\n.upload-icon {\n  font-size: 4rem;\n  margin-bottom: 1rem;\n  opacity: 0.7;\n}\n\n.file-types {\n  font-size: 0.9rem;\n  margin: 1rem 0;\n  color: #6c757d;\n  background: rgba(0, 123, 255, 0.1);\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  display: inline-block;\n}\n\n.drop-zone-hint {\n  margin-top: 1rem;\n  padding: 0.75rem 1rem;\n  background: rgba(0, 123, 255, 0.1);\n  border-radius: 8px;\n  color: #007bff;\n  font-weight: 500;\n}\n\n.drop-zone-hint i {\n  margin-right: 0.5rem;\n}\n\n.file-info {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.file-icon {\n  font-size: 2rem;\n}\n\n.file-details {\n  flex: 1;\n  text-align: left;\n}\n\n.file-details strong {\n  display: block;\n  margin-bottom: 0.25rem;\n}\n\n.clear-file-btn {\n  background: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  font-size: 1rem;\n}\n\n.analyze-section {\n  text-align: center;\n  margin: 1rem 0 2rem 0;\n  padding: 1.5rem;\n  background: linear-gradient(135deg, #f8f9ff 0%, #e8f4fd 100%);\n  border-radius: 16px;\n  border: 2px solid #e3f2fd;\n}\n\n.analyze-btn {\n  background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);\n  color: white;\n  border: none;\n  border-radius: 16px;\n  padding: 1.25rem 3rem;\n  font-size: 1.2rem;\n  font-weight: 700;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 0.75rem;\n  box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);\n  position: relative;\n  overflow: hidden;\n}\n\n.analyze-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transition: left 0.5s;\n}\n\n.analyze-btn:hover:not(.disabled)::before {\n  left: 100%;\n}\n\n.analyze-btn:hover:not(.disabled) {\n  background: linear-gradient(135deg, #0056b3 0%, #004085 100%);\n  transform: translateY(-3px);\n  box-shadow: 0 8px 25px rgba(0, 123, 255, 0.4);\n}\n\n.analyze-btn:active:not(.disabled) {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);\n}\n\n.analyze-btn.disabled {\n  background: linear-gradient(135deg, #6c757d 0%, #5a6268 100%);\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: 0 2px 8px rgba(108, 117, 125, 0.2);\n}\n\n.analyze-btn.disabled::before {\n  display: none;\n}\n\n.analyzing-spinner {\n  width: 20px;\n  height: 20px;\n  border: 2px solid transparent;\n  border-top: 2px solid white;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.analyze-icon {\n  font-size: 1.2rem;\n}\n\n.validation-errors {\n  margin-top: 0.75rem;\n  padding: 0.75rem;\n  background: #f8d7da;\n  border: 1px solid #f5c6cb;\n  border-radius: 8px;\n}\n\n.error-message {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  color: #721c24;\n  font-size: 0.9rem;\n}\n\n.error-message:last-child {\n  margin-bottom: 0;\n}\n\n.error-icon {\n  margin-right: 0.5rem;\n  font-size: 1rem;\n}\n\n.validation-summary {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  background: #fff3cd;\n  border: 1px solid #ffeaa7;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.validation-summary p {\n  margin: 0;\n  color: #856404;\n  font-weight: 600;\n}\n\n/* Prevent accidental PDF preview overlays */\nembed, object, iframe {\n  display: none !important;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .input-methods-top,\n  .input-methods-bottom {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n  \n  .input-method-card {\n    min-width: auto;\n    max-width: none;\n    padding: 1rem;\n  }\n  \n  .method-icon {\n    font-size: 1.5rem;\n  }\n  \n  .method-content h4 {\n    font-size: 1rem;\n  }\n  \n  .method-content p {\n    font-size: 0.8rem;\n  }\n  \n  .input-area-top,\n  .input-area-bottom {\n    padding: 1.5rem;\n    margin-bottom: 1.5rem;\n    margin-top: 1.5rem;\n  }\n  \n  .analyze-section {\n    padding: 1.5rem;\n    margin: 1rem 0 1.5rem 0;\n  }\n  \n  .analyze-btn {\n    padding: 1rem 2rem;\n    font-size: 1.1rem;\n  }\n  \n  .file-drop-zone {\n    padding: 2rem 1rem;\n  }\n  \n  .upload-icon {\n    font-size: 3rem;\n  }\n  \n  .input-wrapper {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .input-icon {\n    padding: 0.75rem;\n    text-align: center;\n    border-bottom: 1px solid #e9ecef;\n  }\n  \n  .input-status {\n    padding: 0.75rem;\n    text-align: center;\n    border-top: 1px solid #e9ecef;\n  }\n}\n\n@media (max-width: 480px) {\n  .unified-input {\n    max-width: 100%;\n    padding: 0 1rem;\n  }\n  \n  .input-method-card {\n    padding: 0.875rem;\n  }\n  \n  .method-icon {\n    font-size: 1.25rem;\n  }\n  \n  .input-area-top,\n  .input-area-bottom {\n    padding: 1rem;\n  }\n  \n  .text-input-field,\n  .url-input-field,\n  .quick-citation-input {\n    padding: 0.75rem;\n    font-size: 0.9rem;\n  }\n  \n  .analyze-btn {\n    padding: 0.875rem 1.5rem;\n    font-size: 1rem;\n  }\n  \n  .input-footer {\n    flex-direction: column;\n    gap: 0.5rem;\n    align-items: flex-start;\n  }\n}\n</style> ","<template>\r\n  <transition name=\"toast-fade\">\r\n    <div v-if=\"visible\" :class=\"['toast', type]\">\r\n      <span class=\"toast-icon\">{{ icon }}</span>\r\n      <span class=\"toast-message\">{{ message }}</span>\r\n      <button class=\"toast-close\" @click=\"close\">×</button>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, computed } from 'vue';\r\nconst props = defineProps({\r\n  message: String,\r\n  type: { type: String, default: 'info' }, // 'success', 'error', 'info'\r\n  duration: { type: Number, default: 3500 }\r\n});\r\nconst emit = defineEmits(['close']);\r\nconst visible = ref(true);\r\n\r\nconst icon = computed(() => {\r\n  if (props.type === 'success') return '✅';\r\n  if (props.type === 'error') return '❌';\r\n  return 'ℹ️';\r\n});\r\n\r\nfunction close() {\r\n  visible.value = false;\r\n  emit('close');\r\n}\r\n\r\nwatch(() => props.message, (msg) => {\r\n  if (msg) {\r\n    visible.value = true;\r\n    setTimeout(close, props.duration);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.toast {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  background: #fff;\r\n  color: #333;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.15);\r\n  padding: 1rem 1.5rem;\r\n  min-width: 220px;\r\n  max-width: 400px;\r\n  font-size: 1rem;\r\n  position: fixed;\r\n  top: 2rem;\r\n  right: 2rem;\r\n  z-index: 9999;\r\n  border-left: 6px solid #007bff;\r\n  animation: toast-in 0.3s;\r\n}\r\n.toast.success { border-left-color: #28a745; }\r\n.toast.error { border-left-color: #dc3545; }\r\n.toast.info { border-left-color: #007bff; }\r\n.toast-icon { font-size: 1.5rem; }\r\n.toast-message { flex: 1; }\r\n.toast-close {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  color: #888;\r\n  cursor: pointer;\r\n  margin-left: 0.5rem;\r\n}\r\n@keyframes toast-in {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n.toast-fade-enter-active, .toast-fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n.toast-fade-enter-from, .toast-fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style> ","<template>\r\n  <div class=\"skeleton-loader\" :style=\"{ height: height, width: width }\">\r\n    <div v-for=\"n in lines\" :key=\"n\" class=\"skeleton-line\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n  lines: { type: Number, default: 3 },\r\n  height: { type: String, default: 'auto' },\r\n  width: { type: String, default: '100%' }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.skeleton-loader {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n  width: 100%;\r\n}\r\n.skeleton-line {\r\n  height: 1.2em;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n  border-radius: 6px;\r\n  animation: skeleton-pulse 1.2s infinite ease-in-out;\r\n}\r\n@keyframes skeleton-pulse {\r\n  0% { opacity: 1; }\r\n  50% { opacity: 0.5; }\r\n  100% { opacity: 1; }\r\n}\r\n</style> ","<template>\n  <div class=\"enhanced-validator\">\n    <Toast v-if=\"toastMessage\" :message=\"toastMessage\" :type=\"toastType\" @close=\"clearToast\" />\n    \n    <!-- Header -->\n    <div class=\"header text-center mb-4\">\n      <button class=\"btn btn-link back-btn\" @click=\"goHome\">\n        <i class=\"bi bi-arrow-left\"></i> Back to Home\n      </button>\n      <h1 class=\"results-title\">Citation Verification Results</h1>\n    </div>\n\n    <!-- Loading State -->\n    <div v-if=\"showLoading && !results\" class=\"loading-container\">\n      <div class=\"loading-content\">\n        <div class=\"spinner-container\">\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"visually-hidden\">Processing...</span>\n          </div>\n        </div>\n        <h3>Processing Citations</h3>\n        <p class=\"text-muted\">Extracting and analyzing citations from your document...</p>\n        \n        <!-- Progress Bar -->\n        <div v-if=\"showTimer\" class=\"progress-section\">\n          <div class=\"progress-info mb-3\">\n            <div class=\"progress-stats\">\n              <span class=\"stat\">\n                <i class=\"bi bi-list-ol text-primary\"></i>\n                {{ progressCurrent }} of {{ progressTotal }} citations\n              </span>\n              <span class=\"stat\">\n                <i class=\"bi bi-clock text-primary\"></i>\n                {{ formatTime(elapsedTime) }} elapsed\n              </span>\n            </div>\n          </div>\n          \n          <div class=\"progress-container\">\n            <div class=\"progress\" style=\"height: 1.5rem; border-radius: 0.75rem;\">\n              <div \n                class=\"progress-bar progress-bar-striped progress-bar-animated\" \n                :class=\"progressBarClass\" \n                role=\"progressbar\"\n                :style=\"{ width: progressPercent + '%' }\" \n                :aria-valuenow=\"progressPercent\" \n                aria-valuemin=\"0\" \n                aria-valuemax=\"100\"\n              >\n                <span class=\"progress-text\">{{ progressPercent }}%</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Error State -->\n    <div v-else-if=\"error && !showLoading\" class=\"error-container\">\n      <div class=\"error-content\">\n        <div class=\"error-icon\">\n          <i class=\"bi bi-exclamation-triangle\"></i>\n        </div>\n        <h3>Analysis Failed</h3>\n        <p>{{ error }}</p>\n        \n        <!-- File Upload Option for History Issues -->\n        <div v-if=\"showFileUpload\" class=\"mt-4\">\n          <div class=\"card\">\n            <div class=\"card-header bg-primary text-white\">\n              <h5 class=\"mb-0\">\n                <i class=\"bi bi-file-earmark-arrow-up me-2\"></i>\n                Re-upload File\n              </h5>\n            </div>\n            <div class=\"card-body\">\n              <p class=\"text-muted mb-3\">\n                To analyze your file, please upload it again using the form below.\n              </p>\n              <UnifiedInput \n                @analyze=\"handleAnalyze\"\n                :is-analyzing=\"showLoading\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Main Content Layout -->\n    <div v-else class=\"main-content-wrapper\">\n      <!-- Main Content Area -->\n      <div class=\"main-content-area\">\n        <!-- Results -->\n        <div v-if=\"results\" class=\"results-container\">\n          <CitationResults \n            :results=\"results\" \n            :processing-time=\"elapsedTime\"\n            :show-details=\"true\"\n            @apply-correction=\"applyCorrection\"\n            @copy-results=\"copyResults\"\n            @download-results=\"downloadResults\"\n            @toast=\"showToast\"\n          />\n        </div>\n        \n        <!-- Input Form -->\n        <div v-else-if=\"showFileUpload\" class=\"input-container\">\n          <UnifiedInput \n            @analyze=\"handleAnalyze\"\n            :is-analyzing=\"showLoading\"\n          />\n        </div>\n        \n        <!-- No Results State -->\n        <div v-else class=\"no-results-container\">\n          <div class=\"no-results-content\">\n            <div class=\"no-results-icon\">\n              <i class=\"bi bi-search\"></i>\n            </div>\n            <h3>No Analysis Results</h3>\n            <p class=\"lead\">No results to display.<br />Please return to the home page to start a new analysis.</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Recent Inputs Sidebar -->\n      <div class=\"recent-inputs-sidebar-container\">\n        <RecentInputs @load-input=\"loadRecentInput\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick, onUnmounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useApi } from '@/composables/useApi';\nimport { useLoadingState } from '@/composables/useLoadingState';\nimport api, { analyze } from '@/api/api';\nimport { useProcessingTime } from '../composables/useProcessingTime';\nimport { useCitationNormalization } from '@/composables/useCitationNormalization';\n\n// Components\nimport CitationResults from '@/components/CitationResults.vue';\nimport UnifiedInput from '@/components/UnifiedInput.vue';\nimport Toast from '@/components/Toast.vue';\nimport SkeletonLoader from '@/components/SkeletonLoader.vue';\nimport RecentInputs from '@/components/RecentInputs.vue';\n\nexport default {\n  name: 'EnhancedValidator',\n  components: {\n    CitationResults,\n    UnifiedInput,\n    Toast,\n    SkeletonLoader,\n    RecentInputs\n  },\n  setup() {\n    // ===== REACTIVE STATE =====\n    const route = useRoute();\n    const router = useRouter();\n    \n    // Data State\n    const results = ref(null);\n    const error = ref(null);\n    \n    // API State\n    const { \n      execute, \n      data: apiData,\n      isLoading,\n      error: apiError,\n      status: apiStatus,\n      cancel: cancelValidation\n    } = useApi({\n      loadingMessage: 'Validating citation...',\n      showLoading: true\n    });\n    \n    const hasActiveRequest = ref(false);\n    const { isLoading: isGlobalLoading } = useLoadingState();\n    const showLoading = computed(() => isLoading.value || isGlobalLoading.value || hasActiveRequest.value);\n\n    // Composables\n    const {\n      elapsedTime,\n      remainingTime,\n      totalProgress,\n      currentStep,\n      currentStepProgress,\n      processingSteps,\n      actualTimes,\n      citationInfo,\n      rateLimitInfo,\n      timeout,\n      processingError,\n      canRetry,\n      startProcessing,\n      stopProcessing,\n      updateProgress,\n      setSteps,\n      resetProcessing,\n      setProcessingError,\n      estimatedTotalTime\n    } = useProcessingTime();\n\n    // Add new reactive state for enhanced progress tracking\n    const queuePosition = ref(0);\n    const estimatedQueueTime = ref(null);\n    const activeRequestId = ref(null);\n    const pollInterval = ref(null);\n    let lastPolledTaskId = ref(null);\n\n    // Toast state\n    const toastMessage = ref('');\n    const toastType = ref('info');\n    const showToast = (msg, type = 'info') => {\n      toastMessage.value = msg;\n      toastType.value = type;\n    };\n    const clearToast = () => {\n      toastMessage.value = '';\n    };\n\n    // Fallback timer state\n    const fallbackTimeout = ref(null);\n    const fallbackTimeoutMs = 120000; // 2 minutes\n\n    // Error state for fallback\n    const fallbackError = ref('');\n\n    // Add showTimer computed property\n    // Always show the progress bar for clarity\n    const showTimer = computed(() => true);\n\n    // Progress bar state\n    const progressCurrent = ref(0);\n    const progressTotal = computed(() => (citationInfo.value && citationInfo.value.total) ? citationInfo.value.total : 0);\n    const progressPercent = computed(() => {\n      if (!progressTotal.value) return 0;\n      return Math.min(100, Math.round((progressCurrent.value / progressTotal.value) * 100));\n    });\n    const progressBarClass = computed(() => {\n      if (progressPercent.value >= 80) return 'bg-success';\n      if (progressPercent.value >= 50) return 'bg-info';\n      if (progressPercent.value >= 30) return 'bg-warning';\n      return 'bg-danger';\n    });\n    let progressTimer = null;\n\n    // Add showFileUpload reactive state\n    const showFileUpload = ref(false);\n\n    // In setup()\n    const { normalizeCitations, calculateCitationScore } = useCitationNormalization();\n\n    // ===== HELPER FUNCTIONS =====\n    function formatTime(seconds) {\n      if (!seconds || seconds < 0) return '0s';\n      \n      const hours = Math.floor(seconds / 3600);\n      const minutes = Math.floor((seconds % 3600) / 60);\n      const secs = Math.floor(seconds % 60);\n      \n      if (hours > 0) {\n        return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n      } else {\n        return `${minutes}:${secs.toString().padStart(2, '0')}`;\n      }\n    }\n    \n    function getProgressBarClass(value) {\n      if (value >= 0.8) return 'bg-success';\n      if (value >= 0.5) return 'bg-info';\n      if (value >= 0.3) return 'bg-warning';\n      return 'bg-danger';\n    }\n    \n    // ===== CORE FUNCTIONS =====\n    // Clear all results and reset form\n    function clearResults() {\n      results.value = null;\n      error.value = null;\n      resetProcessing();\n    }\n    \n    // Enhanced progress tracking function\n    async function pollTaskStatus(taskId) {\n      if (!taskId) return;\n      \n      try {\n        const response = await api.get(`/task_status/${taskId}`);\n        const data = response.data;\n        \n        if (data.status === 'completed') {\n          // Task completed successfully\n          // Use the 'results' field directly, fallback to 'citations' for legacy\n          const citationResults = Array.isArray(data.results) ? data.results : (data.citations || []);\n          \n          // Create the proper structure expected by CitationResults component\n          results.value = {\n            citations: normalizeCitations(citationResults),\n            metadata: data.metadata || {},\n            total_citations: citationResults.length,\n            verified_count: citationResults.filter(c => c.verified || c.valid || c.data?.valid || c.data?.found).length,\n            unverified_count: citationResults.filter(c => !(c.verified || c.valid || c.data?.valid || c.data?.found)).length\n          };\n          \n          hasActiveRequest.value = false;\n          stopProcessing();\n          isLoading.value = false;\n          if (typeof isGlobalLoading !== 'undefined' && isGlobalLoading.value !== undefined) {\n            isGlobalLoading.value = false;\n          }\n          \n          // Show success toast\n          showToast('Citation analysis completed successfully!', 'success');\n          \n          // Clear polling\n          if (pollInterval.value) {\n            clearInterval(pollInterval.value);\n            pollInterval.value = null;\n          }\n          \n          // Show a message if no results\n          if (citationResults.length === 0) {\n            let debugMsg = 'No citations found in the provided text or document.';\n            if (data.status_message && data.status_message.toLowerCase().includes('rate limit')) {\n              debugMsg += ' (Possible cause: search engine rate limiting)';\n            }\n            if (data.error) {\n              debugMsg += ` (Backend error: ${data.error})`;\n            }\n            error.value = debugMsg;\n          }\n\n          // Debug: Show raw backend response if debug flag is set\n          if (window && window.localStorage && window.localStorage.getItem('debugMode') === 'true') {\n            error.value += '\\n[DEBUG] Raw backend response: ' + JSON.stringify(data, null, 2);\n          }\n        } else if (data.status === 'failed') {\n          // Task failed\n          error.value = data.error || 'Processing failed';\n          hasActiveRequest.value = false;\n          setProcessingError(data.error || 'Processing failed');\n          \n          // Show error toast\n          showToast(`Processing failed: ${data.error || 'Unknown error'}`, 'error');\n          \n          // Clear polling\n          if (pollInterval.value) {\n            clearInterval(pollInterval.value);\n            pollInterval.value = null;\n          }\n          \n        } else {\n          // Task is still processing - update progress\n          hasActiveRequest.value = true;\n          \n          // Update processing time with backend data\n          if (data.estimated_total_time && data.steps) {\n            if (lastPolledTaskId.value !== taskId) {\n              startProcessing({\n                estimated_total_time: data.estimated_total_time,\n                steps: data.steps\n              });\n              lastPolledTaskId.value = taskId;\n            }\n          } else if (data.estimated_total_time) {\n            if (lastPolledTaskId.value !== taskId) {\n              startProcessing(data.estimated_total_time);\n              lastPolledTaskId.value = taskId;\n            }\n          }\n          \n          // Update current step and progress\n          if (data.current_step) {\n            updateProgress({\n              step: data.current_step,\n              progress: data.progress || 0\n            });\n          }\n          \n          // Update citation info if available\n          if (data.total_citations !== undefined) {\n            citationInfo.value = {\n              total: data.total_citations,\n              processed: data.processed_citations || 0,\n              unique: data.unique_citations || 0\n            };\n          }\n          \n          // Update results object with progress data for CitationResults component\n          results.value = {\n            citations: [],\n            metadata: data.metadata || {},\n            progress: data.progress || 0,\n            eta_seconds: data.eta_seconds || null,\n            current_chunk: data.current_chunk || 0,\n            total_chunks: data.total_chunks || 1,\n            total_citations: data.total_citations || 0,\n            verified_count: 0,\n            unverified_count: 0\n          };\n          \n          console.log('EnhancedValidator: Updated results with progress data:', results.value);\n          \n          // Continue polling\n          if (!pollInterval.value) {\n            pollInterval.value = setInterval(() => pollTaskStatus(taskId), 2000);\n          }\n        }\n        \n        onProgressOrResult(); // Clear fallback timer on any progress\n      } catch (err) {\n        console.error('Error polling task status:', err);\n        error.value = 'Failed to check processing status';\n        hasActiveRequest.value = false;\n        setProcessingError('Failed to check processing status');\n        \n        // Clear polling on error\n        if (pollInterval.value) {\n          clearInterval(pollInterval.value);\n          pollInterval.value = null;\n        }\n      }\n    }\n\n    // Enhanced form submission with immediate progress feedback\n    async function handleSubmit(formData) {\n      try {\n        clearResults();\n        hasActiveRequest.value = true;\n        lastPolledTaskId.value = null;\n        \n        // Start processing immediately with default estimates\n        startProcessing(30); // Default 30 seconds estimate\n        updateProgress({\n          step: 'Submitting request...',\n          progress: 5\n        });\n        \n        const response = await execute(() => api.post('/analyze', formData));\n        \n        if (response && response.task_id) {\n          activeRequestId.value = response.task_id;\n          \n          // Update progress to show task created\n          updateProgress({\n            step: 'Task created, starting processing...',\n            progress: 10\n          });\n          \n          // Start polling for status updates\n          await pollTaskStatus(response.task_id);\n          \n        } else {\n          // Direct response (no async task)\n          const citationResults = response?.citations || [];\n          results.value = {\n            citations: normalizeCitations(citationResults),\n            metadata: response?.metadata || {},\n            total_citations: citationResults.length,\n            verified_count: citationResults.filter(c => c.verified || c.valid || c.data?.valid || c.data?.found).length,\n            unverified_count: citationResults.filter(c => !(c.verified || c.valid || c.data?.valid || c.data?.found)).length\n          };\n          hasActiveRequest.value = false;\n          stopProcessing();\n          isLoading.value = false;\n          if (typeof isGlobalLoading !== 'undefined' && isGlobalLoading.value !== undefined) {\n            isGlobalLoading.value = false;\n          }\n          showToast('Citation analysis completed!', 'success');\n        }\n        \n      } catch (err) {\n        console.error('Error submitting form:', err);\n        error.value = err.message || 'Failed to submit request';\n        hasActiveRequest.value = false;\n        setProcessingError(err.message || 'Failed to submit request');\n        showToast(`Error: ${err.message || 'Failed to submit request'}`, 'error');\n      }\n    }\n\n    // Add method to handle retry\n    const retryProcessing = async () => {\n      if (!activeRequestId.value) return;\n      \n      try {\n        processingError.value = null;\n        canRetry.value = false;\n        resetProcessing();\n        \n        // Cancel the current request if it exists\n        await api.cancelRequest(activeRequestId.value);\n        \n        // Start a new request with the same parameters\n        const currentRequest = api.getRequestStatus(activeRequestId.value);\n        if (currentRequest) {\n          const { type, input } = currentRequest;\n          await analyzeInput(input, type);\n        }\n      } catch (error) {\n        processingError.value = `Failed to retry: ${error.message}`;\n        canRetry.value = true;\n      }\n    };\n\n    // Add method to analyze input\n    const analyzeInput = async (input, type) => {\n      try {\n        if (type === 'file') {\n          await handleFileAnalyze(input);\n        } else if (type === 'url') {\n          await handleUrlAnalyze({ url: input });\n        } else if (type === 'text') {\n          await handleTextAnalyze({ text: input });\n        }\n      } catch (error) {\n        processingError.value = `Failed to analyze input: ${error.message}`;\n        canRetry.value = true;\n      }\n    };\n\n    // ===== RESULT HANDLERS =====\n    const handleResults = (responseData) => {\n      try {\n        console.log('handleResults called with:', responseData);\n        \n        // --- FIX: Always use citations or validation_results ---\n        let rawCitations = [];\n        if (Array.isArray(responseData.citations) && responseData.citations.length > 0) {\n          rawCitations = responseData.citations;\n        } else if (Array.isArray(responseData.validation_results) && responseData.validation_results.length > 0) {\n          rawCitations = responseData.validation_results;\n        }\n        \n        results.value = {\n          ...responseData,\n          citations: normalizeCitations(rawCitations),\n          timestamp: new Date().toISOString()\n        };\n        \n        console.log('Results set to:', results.value);\n        \n        isLoading.value = false;\n        error.value = null;\n        hasActiveRequest.value = false;\n        activeRequestId.value = null;\n        \n        console.log('Loading states after setting results:');\n        console.log('- isLoading.value:', isLoading.value);\n        console.log('- isGlobalLoading.value:', isGlobalLoading.value);\n        console.log('- hasActiveRequest.value:', hasActiveRequest.value);\n        console.log('- showLoading.value:', showLoading.value);\n        \n        // Complete processing\n        if (typeof isGlobalLoading !== 'undefined' && isGlobalLoading.value !== undefined) {\n          isGlobalLoading.value = false;\n        }\n        \n        // Scroll to results\n        nextTick(() => {\n          const resultsElement = document.querySelector('.results-container');\n          if (resultsElement) {\n            resultsElement.scrollIntoView({ behavior: 'smooth' });\n          }\n        });\n        \n      } catch (err) {\n        console.error('Error handling results:', err);\n        error.value = 'Failed to process results';\n        isLoading.value = false;\n      }\n    };\n\n    const handleError = (err) => {\n      console.error('Analysis error:', err);\n      error.value = err.message || 'An error occurred during analysis';\n      isLoading.value = false;\n      hasActiveRequest.value = false;\n      activeRequestId.value = null;\n      processingError.value = err.message || 'Analysis failed';\n      canRetry.value = true;\n      showToast(error.value, 'error');\n    };\n\n    // ===== API HANDLER FUNCTIONS =====\n    const handleTextAnalyze = async ({ text, options }) => {\n      // Prevent duplicate submissions\n      if (hasActiveRequest.value) {\n        console.log('Request already in progress, ignoring duplicate text analysis');\n        return;\n      }\n      \n      isLoading.value = true;\n      error.value = null;\n      results.value = null;\n      \n      try {\n        // Use the analyze function which handles async responses properly\n        const responseData = await analyze({\n          text: text,\n          type: 'text'\n        });\n        \n        // The analyze function handles polling internally, so we just need to handle the results\n        handleResults(responseData);\n        isLoading.value = false;\n      } catch (err) {\n        handleError(err);\n      }\n    };\n\n    const handleFileAnalyze = async (input) => {\n      // Prevent duplicate submissions\n      if (hasActiveRequest.value) {\n        console.log('Request already in progress, ignoring duplicate file analysis');\n        return;\n      }\n      \n      isLoading.value = true;\n      error.value = null;\n      results.value = null;\n      try {\n        let formData;\n        if (input instanceof FormData) {\n          formData = input;\n        } else {\n          formData = new FormData();\n          formData.append('file', input.file);\n          formData.append('type', 'file');\n        }\n        \n        // Use the analyze function which handles async responses properly\n        const responseData = await analyze(formData);\n        \n        // The analyze function handles polling internally, so we just need to handle the results\n        handleResults(responseData);\n        isLoading.value = false;\n      } catch (err) {\n        handleError(err);\n      }\n    };\n\n    const handleUrlAnalyze = async ({ url }) => {\n      // Prevent duplicate submissions\n      if (hasActiveRequest.value) {\n        console.log('Request already in progress, ignoring duplicate URL analysis');\n        return;\n      }\n      \n      isLoading.value = true;\n      error.value = null;\n      results.value = null;\n      \n      try {\n        // Use the analyze function which handles async responses properly\n        const responseData = await analyze({\n          url: url,\n          type: 'url'\n        });\n        \n        // The analyze function handles polling internally, so we just need to handle the results\n        handleResults(responseData);\n        isLoading.value = false;\n      } catch (err) {\n        handleError(err);\n      }\n    };\n\n    // Unified handler for all input types\n    function handleUnifiedAnalyze(payload) {\n      console.log('handleUnifiedAnalyze payload:', payload);\n      \n      // Prevent duplicate submissions\n      if (hasActiveRequest.value) {\n        console.log('Request already in progress, ignoring duplicate submission');\n        showToast('A request is already in progress. Please wait for it to complete.', 'warning');\n        return;\n      }\n      \n      // Reset and start progress tracking for all input types\n      resetProcessing();\n      setSteps([\n        { step: 'Preparing analysis', estimated_time: 5 },\n        { step: 'Processing content', estimated_time: 30 },\n        { step: 'Verifying citations', estimated_time: 60 }\n      ]);\n      startProcessing();\n      hasActiveRequest.value = true;\n      error.value = null;\n      results.value = null;\n      \n      if (payload.file) {\n        handleFileAnalyze(payload);\n      } else if (payload.url) {\n        handleUrlAnalyze(payload);\n      } else if (payload.text) {\n        // If quick mode, treat as single citation\n        if (payload.quick) {\n          handleTextAnalyze({ text: payload.text, options: { mode: 'single' } });\n        } else {\n          handleTextAnalyze({ text: payload.text, options: { mode: 'multi' } });\n        }\n      }\n      onProcessingStart(); // Start fallback timer\n    }\n\n    // ===== LIFECYCLE HOOKS =====\n    onMounted(() => {\n      let input = { ...route.query };\n      \n      // Check for results in router state first (from HomeView)\n      if (router.currentRoute.value.state && router.currentRoute.value.state.results) {\n        console.log('[EnhancedValidator] Using results from router state, skipping new analysis.');\n        const responseData = router.currentRoute.value.state.results;\n        // --- FIX: Always use citations or validation_results ---\n        let rawCitations = [];\n        if (Array.isArray(responseData.citations) && responseData.citations.length > 0) {\n          rawCitations = responseData.citations;\n        } else if (Array.isArray(responseData.validation_results) && responseData.validation_results.length > 0) {\n          rawCitations = responseData.validation_results;\n        }\n        if (rawCitations.length > 0) {\n          results.value = {\n            ...responseData,\n            citations: normalizeCitations(rawCitations),\n            total_citations: rawCitations.length,\n            verified_count: rawCitations.filter(c => c.verified || c.valid || c.data?.valid || c.data?.found).length,\n            unverified_count: rawCitations.filter(c => !(c.verified || c.valid || c.data?.valid || c.data?.found)).length\n          };\n          showToast('Citation analysis completed successfully!', 'success');\n        } else {\n          error.value = 'No citations found in the provided text or document.';\n        }\n        return;\n      }\n      \n      // Check for task_id (async processing)\n      if (input.task_id) {\n        console.log('Found task_id, starting polling:', input.task_id);\n        activeRequestId.value = input.task_id;\n        hasActiveRequest.value = true;\n        pollTaskStatus(input.task_id);\n        return;\n      }\n      \n      // Check localStorage for recent input if no query params\n      if ((!input.text && !input.url && !input.fileName) && localStorage.getItem('lastCitationInput')) {\n        try {\n          const storedInput = JSON.parse(localStorage.getItem('lastCitationInput'));\n          \n          // Don't restore file uploads from localStorage since they can't be properly restored\n          if (storedInput.fileName) {\n            console.log('Found file upload in localStorage, skipping restoration:', storedInput.fileName);\n            // Clear the fileName to prevent future issues\n            delete storedInput.fileName;\n            if (Object.keys(storedInput).length === 0) {\n              localStorage.removeItem('lastCitationInput');\n            } else {\n              localStorage.setItem('lastCitationInput', JSON.stringify(storedInput));\n            }\n            input = {};\n          } else {\n            input = storedInput;\n          }\n        } catch (e) {\n          console.warn('Error parsing localStorage input:', e);\n          input = {};\n        }\n      }\n      \n      // If we have input, trigger analysis\n      if (input.text || input.url || input.fileName) {\n        console.log('Triggering analysis with input:', input);\n        \n        // Clear any existing results\n        clearResults();\n        \n        // Trigger analysis based on input type\n        if (input.text) {\n          handleTextAnalyze({ text: input.text });\n        } else if (input.url) {\n          handleUrlAnalyze({ url: input.url });\n        } else if (input.fileName) {\n          // This should not happen anymore since we prevent file uploads from being loaded from localStorage\n          // But just in case, handle it gracefully\n          console.warn('Unexpected file upload in input:', input.fileName);\n          error.value = `File \"${input.fileName}\" was previously uploaded but cannot be restored from history. Please upload the file again to analyze it.`;\n          showFileUpload.value = true;\n        }\n      } else {\n        // No input found, show no results\n        results.value = null;\n      }\n\n      // Watch for citation count and start progress if needed\n      if (showTimer.value && progressTotal.value > 20) {\n        progressCurrent.value = 0;\n        if (progressTimer) clearInterval(progressTimer);\n        progressTimer = setInterval(() => {\n          if (progressCurrent.value < progressTotal.value) {\n            progressCurrent.value++;\n          }\n        }, 2000); // 2 seconds per citation\n      }\n\n      // Check if Font Awesome is loaded\n      setTimeout(() => {\n        const faIcons = document.querySelectorAll('.fas.fa-cog.fa-spin');\n        const biIcons = document.querySelectorAll('.bi.bi-gear-fill.spinning');\n        \n        faIcons.forEach((faIcon, index) => {\n          if (getComputedStyle(faIcon).fontFamily.indexOf('FontAwesome') === -1) {\n            // Font Awesome not loaded, show Bootstrap icon\n            faIcon.style.display = 'none';\n            if (biIcons[index]) {\n              biIcons[index].style.display = 'inline-block';\n            }\n          }\n        });\n      }, 100);\n    });\n    \n    onUnmounted(() => {\n      if (hasActiveRequest.value) {\n        cancelValidation();\n      }\n      if (pollInterval.value) {\n        clearInterval(pollInterval.value);\n        pollInterval.value = null;\n      }\n      clearFallbackTimer();\n      if (progressTimer) clearInterval(progressTimer);\n    });\n\n    // Jump to 100% when results are ready\n    watch(() => results.value, (val) => {\n      if (val && progressTimer) {\n        progressCurrent.value = progressTotal.value;\n        clearInterval(progressTimer);\n      }\n    });\n\n    // Add a placeholder for copyResults to fix ReferenceError\n    function copyResults() {\n      console.log('copyResults called');\n    }\n\n    // Add a placeholder for downloadResults to fix ReferenceError\n    function downloadResults() {\n      console.log('downloadResults called');\n    }\n\n    // Start fallback timer\n    function startFallbackTimer() {\n      clearFallbackTimer();\n      fallbackTimeout.value = setTimeout(() => {\n        fallbackError.value = 'Processing timed out. No response from server.';\n        setProcessingError(fallbackError.value);\n        hasActiveRequest.value = false;\n        // Optionally, show a toast or error UI\n        showToast(fallbackError.value, 'error');\n      }, fallbackTimeoutMs);\n    }\n\n    // Clear fallback timer\n    function clearFallbackTimer() {\n      if (fallbackTimeout.value) {\n        clearTimeout(fallbackTimeout.value);\n        fallbackTimeout.value = null;\n      }\n    }\n\n    // When processing starts, start fallback timer\n    function onProcessingStart() {\n      fallbackError.value = '';\n      startFallbackTimer();\n    }\n\n    // When progress or results are received, clear fallback timer\n    function onProgressOrResult() {\n      clearFallbackTimer();\n    }\n\n    // Handle loading recent input\n    const loadRecentInput = (input) => {\n      // Navigate back to home with the input data\n      router.push({ \n        path: '/', \n        query: { \n          tab: input.tab,\n          ...(input.tab === 'paste' && input.text ? { text: input.text } : {}),\n          ...(input.tab === 'url' && input.url ? { url: input.url } : {})\n        }\n      });\n    };\n\n    // ===== RETURN STATEMENT =====\n    return {\n      // State\n      results,\n      error,\n      isLoading: showLoading,\n      showLoading,\n      hasActiveRequest,\n      \n      // Methods\n      clearResults,\n      handleUnifiedAnalyze,\n      retryProcessing,\n      cancelValidation,\n      copyResults,\n      downloadResults,\n      \n      // Processing time tracking\n      elapsedTime,\n      remainingTime,\n      totalProgress,\n      currentStep,\n      currentStepProgress,\n      processingSteps,\n      actualTimes,\n      formatTime,\n      \n      // Enhanced progress tracking\n      citationInfo,\n      queuePosition,\n      estimatedQueueTime,\n      rateLimitInfo,\n      timeout,\n      processingError,\n      canRetry,\n      \n      // Helper functions\n      getProgressBarClass,\n      \n      // Stub methods for CitationResults component\n      applyCorrection: () => {},\n      \n      // Toast\n      toastMessage,\n      toastType,\n      clearToast,\n      \n      // Fallback timer\n      fallbackError,\n      \n      // Show timer computed property\n      showTimer,\n      \n      // Progress bar state\n      progressCurrent,\n      progressTotal,\n      progressPercent,\n      progressBarClass,\n      \n      // Recent inputs\n      loadRecentInput,\n\n      // Show file upload option\n      showFileUpload,\n    };\n  }\n};\n</script>\n\n<style scoped>\n.enhanced-validator {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.header {\n  background: #f8f9fa;\n  padding: 2rem;\n  text-align: center;\n}\n\n.main-content {\n  padding: 2rem;\n}\n\n.input-container {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n}\n\n.progress-container {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n}\n\n.processing-card {\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: none;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  overflow: hidden;\n}\n\n.processing-header {\n  margin-bottom: 2rem;\n}\n\n.spinner-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n}\n\n.spinner-border {\n  width: 3rem;\n  height: 3rem;\n  border-width: 0.25rem;\n}\n\n.processing-content {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.progress-dots {\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n  margin: 1rem 0;\n}\n\n.dot {\n  width: 8px;\n  height: 8px;\n  background-color: #007bff;\n  border-radius: 50%;\n  animation: pulse 1.5s ease-in-out infinite;\n}\n\n.dot:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 0.3;\n    transform: scale(0.8);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1.2);\n  }\n}\n\n.processing-steps {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 2rem;\n  padding: 1rem;\n  background: rgba(255, 255, 255, 0.7);\n  border-radius: 0.75rem;\n}\n\n.step {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  transition: all 0.3s ease;\n  opacity: 0.6;\n}\n\n.step.active {\n  opacity: 1;\n  background: rgba(0, 123, 255, 0.1);\n  transform: scale(1.05);\n}\n\n.step i {\n  font-size: 1.5rem;\n}\n\n.step span {\n  font-size: 0.8rem;\n  font-weight: 500;\n  text-align: center;\n  white-space: nowrap;\n}\n\n.progress-info {\n  margin-bottom: 1.5rem;\n}\n\n.progress-stats {\n  display: flex;\n  justify-content: space-around;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.stat {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 0.5rem;\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n.progress-container {\n  margin: 1.5rem 0;\n}\n\n.progress {\n  background: rgba(255, 255, 255, 0.8);\n  border: 2px solid rgba(0, 123, 255, 0.2);\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.progress-bar {\n  background: linear-gradient(90deg, #007bff, #0056b3);\n  box-shadow: 0 2px 4px rgba(0, 123, 255, 0.3);\n  position: relative;\n  overflow: hidden;\n}\n\n.progress-text {\n  font-weight: 600;\n  font-size: 0.9rem;\n  color: white;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n}\n\n.progress-label {\n  text-align: center;\n}\n\n/* Enhanced spinner animation */\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.spinner-border {\n  animation: spin 1s linear infinite !important;\n}\n\n/* Font Awesome spinning animation */\n.fa-spin {\n  animation: spin 2s linear infinite !important;\n}\n\n/* Additional spinning animations */\n.spinning {\n  animation: spin 1.5s linear infinite;\n}\n\n/* Enhanced pulse animation for dots */\n@keyframes pulse {\n  0%, 100% {\n    opacity: 0.3;\n    transform: scale(0.8);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1.2);\n  }\n}\n\n.dot {\n  width: 8px;\n  height: 8px;\n  background-color: #007bff;\n  border-radius: 50%;\n  animation: pulse 1.5s ease-in-out infinite;\n}\n\n.dot:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n/* Card hover effects */\n.processing-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .processing-steps {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .step {\n    flex-direction: row;\n    width: 100%;\n    justify-content: flex-start;\n  }\n  \n  .progress-stats {\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .stat {\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n/* Main Layout */\n.main-content-wrapper {\n  display: grid;\n  grid-template-columns: 1fr 320px;\n  gap: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem 0;\n}\n\n.main-content-area {\n  background: rgba(255, 255, 255, 0.98);\n  border-radius: 16px;\n  padding: 2rem;\n  box-shadow: 0 4px 24px 0 rgba(60, 72, 88, 0.12);\n  border: 1px solid rgba(75, 46, 131, 0.1);\n}\n\n.recent-inputs-sidebar-container {\n  align-self: start;\n  position: sticky;\n  top: 2rem;\n}\n\n/* Loading State */\n.loading-container {\n  max-width: 800px;\n  margin: 0 auto;\n  text-align: center;\n  padding: 3rem 2rem;\n}\n\n.loading-content {\n  background: white;\n  border-radius: 16px;\n  padding: 3rem 2rem;\n  box-shadow: 0 4px 24px 0 rgba(60, 72, 88, 0.12);\n  border: 1px solid rgba(75, 46, 131, 0.1);\n}\n\n.spinner-container {\n  margin-bottom: 2rem;\n}\n\n.spinner-container .spinner-border {\n  width: 3rem;\n  height: 3rem;\n  color: #4b2e83;\n}\n\n.loading-content h3 {\n  color: #4b2e83;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.progress-section {\n  margin-top: 2rem;\n  padding-top: 2rem;\n  border-top: 1px solid #e9ecef;\n}\n\n/* Error State */\n.error-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.error-content {\n  background: white;\n  border-radius: 16px;\n  padding: 2rem;\n  box-shadow: 0 4px 24px 0 rgba(60, 72, 88, 0.12);\n  border: 1px solid rgba(75, 46, 131, 0.1);\n  text-align: center;\n}\n\n.error-icon {\n  font-size: 3rem;\n  color: #dc3545;\n  margin-bottom: 1rem;\n  display: block;\n}\n\n.error-content h3 {\n  color: #dc3545;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n/* No Results State */\n.no-results-container {\n  text-align: center;\n  padding: 3rem 2rem;\n}\n\n.no-results-content {\n  background: #f8f9fa;\n  border-radius: 16px;\n  padding: 3rem 2rem;\n  border: 1px solid #e9ecef;\n}\n\n.no-results-icon {\n  font-size: 4rem;\n  color: #6c757d;\n  margin-bottom: 1.5rem;\n}\n\n.no-results-content h3 {\n  color: #495057;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n/* Input Container */\n.input-container {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n/* Results Container */\n.results-container {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n}\n\n/* Responsive Design */\n@media (max-width: 1200px) {\n  .main-content-wrapper {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n  \n  .recent-inputs-sidebar-container {\n    position: static;\n    order: -1;\n  }\n}\n\n@media (max-width: 768px) {\n  .main-content-area {\n    padding: 1.5rem;\n  }\n  \n  .loading-content {\n    padding: 2rem 1.5rem;\n  }\n  \n  .error-content {\n    padding: 1.5rem;\n  }\n  \n  .no-results-content {\n    padding: 2rem 1.5rem;\n  }\n  \n  .progress-stats {\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .stat {\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n@media (max-width: 480px) {\n  .main-content-area {\n    padding: 1rem;\n  }\n  \n  .loading-content {\n    padding: 1.5rem 1rem;\n  }\n  \n  .error-content {\n    padding: 1rem;\n  }\n  \n  .no-results-content {\n    padding: 1.5rem 1rem;\n  }\n}\n</style>\n"],"names":["loadingMessage","isLoading","step","_sfc_main","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_14","_hoisted_16","_hoisted_17","_hoisted_19","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_34","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","_normalizeClass","_hoisted_5","_hoisted_13","_hoisted_15","_hoisted_18","_hoisted_20","_Fragment","_renderList","_hoisted_30","_normalizeStyle","_hoisted_31","_hoisted_33","_createTextVNode","_createBlock","$emit","_hoisted_32","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","text","url","file","_createVNode","_Transition","error"],"mappings":"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"}