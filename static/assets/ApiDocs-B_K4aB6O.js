import { _ as _export_sfc } from "./index-Ceo-VWYs.js";
import { c as createElementBlock, o as openBlock, H as createStaticVNode } from "./vendor-DU8YFPOn.js";
const _hoisted_1 = { class: "container py-4" };
const _sfc_main = {
  __name: "ApiDocs",
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, _cache[0] || (_cache[0] = [
        createStaticVNode('<h1 class="mb-3" data-v-42b36d55>API Documentation</h1><p class="lead" data-v-42b36d55>Welcome to the CaseStrainer API documentation page.</p><p data-v-42b36d55> Here you will find information about available API endpoints, request/response formats, and usage examples. </p><hr data-v-42b36d55><div class="mb-5" data-v-42b36d55><h2 data-v-42b36d55>Available Endpoints</h2><ul data-v-42b36d55><li data-v-42b36d55><code data-v-42b36d55>/casestrainer/api/analyze</code> — Analyze and validate citations</li><li data-v-42b36d55><code data-v-42b36d55>/casestrainer/api/task_status/{task_id}</code> — Check processing status</li><li data-v-42b36d55><code data-v-42b36d55>/casestrainer/api/health</code> — Health check endpoint</li></ul></div><div class="mb-5" data-v-42b36d55><h2 data-v-42b36d55>Analyze Endpoint</h2><p class="text-muted" data-v-42b36d55>POST <code data-v-42b36d55>/casestrainer/api/analyze</code></p><h3 data-v-42b36d55>Overview</h3><p data-v-42b36d55> The analyze endpoint processes legal documents and extracts/verifies citations. It supports three input types: file uploads, direct text input, and URL content extraction. Processing is asynchronous and returns a task ID that can be used to poll for results. </p><h3 data-v-42b36d55>Input Types</h3><div class="card mb-3" data-v-42b36d55><div class="card-header" data-v-42b36d55><h4 class="mb-0" data-v-42b36d55>1. File Upload</h4></div><div class="card-body" data-v-42b36d55><p data-v-42b36d55><strong data-v-42b36d55>Content-Type:</strong> <code data-v-42b36d55>multipart/form-data</code></p><p data-v-42b36d55><strong data-v-42b36d55>Supported formats:</strong> PDF, DOC, DOCX, TXT</p><p data-v-42b36d55><strong data-v-42b36d55>Field name:</strong> <code data-v-42b36d55>file</code></p><h5 data-v-42b36d55>Example Request:</h5><pre data-v-42b36d55><code data-v-42b36d55>curl -X POST /casestrainer/api/analyze \\\n  -F &quot;file=@document.pdf&quot;</code></pre></div></div><div class="card mb-3" data-v-42b36d55><div class="card-header" data-v-42b36d55><h4 class="mb-0" data-v-42b36d55>2. Text Input</h4></div><div class="card-body" data-v-42b36d55><p data-v-42b36d55><strong data-v-42b36d55>Content-Type:</strong> <code data-v-42b36d55>application/json</code> or <code data-v-42b36d55>application/x-www-form-urlencoded</code></p><h5 data-v-42b36d55>JSON Format:</h5><pre data-v-42b36d55><code data-v-42b36d55>{\n  &quot;type&quot;: &quot;text&quot;,\n  &quot;text&quot;: &quot;The court held in Smith v. Jones, 123 F.3d 456 (9th Cir. 2020) that...&quot;\n}</code></pre><h5 data-v-42b36d55>Form Data Format:</h5><pre data-v-42b36d55><code data-v-42b36d55>type=text&amp;text=The court held in Smith v. Jones, 123 F.3d 456 (9th Cir. 2020) that...</code></pre></div></div><div class="card mb-3" data-v-42b36d55><div class="card-header" data-v-42b36d55><h4 class="mb-0" data-v-42b36d55>3. URL Input</h4></div><div class="card-body" data-v-42b36d55><p data-v-42b36d55><strong data-v-42b36d55>Content-Type:</strong> <code data-v-42b36d55>application/json</code> or <code data-v-42b36d55>application/x-www-form-urlencoded</code></p><h5 data-v-42b36d55>JSON Format:</h5><pre data-v-42b36d55><code data-v-42b36d55>{\n  &quot;type&quot;: &quot;url&quot;,\n  &quot;url&quot;: &quot;https://example.com/legal-document&quot;\n}</code></pre><h5 data-v-42b36d55>Form Data Format:</h5><pre data-v-42b36d55><code data-v-42b36d55>type=url&amp;url=https://example.com/legal-document</code></pre></div></div><h3 data-v-42b36d55>Response Format</h3><p data-v-42b36d55>The analyze endpoint returns an immediate response with a task ID for tracking:</p><div class="card mb-3" data-v-42b36d55><div class="card-header" data-v-42b36d55><h4 class="mb-0" data-v-42b36d55>Initial Response</h4></div><div class="card-body" data-v-42b36d55><pre data-v-42b36d55><code data-v-42b36d55>{\n  &quot;status&quot;: &quot;processing&quot;,\n  &quot;task_id&quot;: &quot;550e8400-e29b-41d4-a716-446655440000&quot;,\n  &quot;message&quot;: &quot;File upload received, processing started&quot;,\n  &quot;metadata&quot;: {\n    &quot;source_type&quot;: &quot;file&quot;,\n    &quot;source_name&quot;: &quot;document.pdf&quot;,\n    &quot;file_type&quot;: &quot;.pdf&quot;,\n    &quot;timestamp&quot;: &quot;2024-01-15T10:30:00Z&quot;,\n    &quot;user_agent&quot;: &quot;curl/7.68.0&quot;\n  }\n}</code></pre></div></div><h3 data-v-42b36d55>Checking Results</h3><p data-v-42b36d55>Use the task ID to poll for results using the task status endpoint:</p><div class="card mb-3" data-v-42b36d55><div class="card-header" data-v-42b36d55><h4 class="mb-0" data-v-42b36d55>Task Status Endpoint</h4></div><div class="card-body" data-v-42b36d55><p data-v-42b36d55><strong data-v-42b36d55>GET</strong> <code data-v-42b36d55>/casestrainer/api/task_status/{task_id}</code></p><h5 data-v-42b36d55>Processing Response:</h5><pre data-v-42b36d55><code data-v-42b36d55>{\n  &quot;status&quot;: &quot;processing&quot;,\n  &quot;task_id&quot;: &quot;550e8400-e29b-41d4-a716-446655440000&quot;,\n  &quot;message&quot;: &quot;Task is processing&quot;,\n  &quot;progress&quot;: 45,\n  &quot;status_message&quot;: &quot;Extracting citations from content...&quot;,\n  &quot;current_step&quot;: &quot;Citation extraction&quot;,\n  &quot;estimated_time_remaining&quot;: 30\n}</code></pre><h5 data-v-42b36d55>Completed Response:</h5><pre data-v-42b36d55><code data-v-42b36d55>{\n  &quot;status&quot;: &quot;completed&quot;,\n  &quot;task_id&quot;: &quot;550e8400-e29b-41d4-a716-446655440000&quot;,\n  &quot;citations&quot;: [\n    {\n      &quot;citation&quot;: &quot;123 F.3d 456&quot;,\n      &quot;found&quot;: true,\n      &quot;source&quot;: &quot;CourtListener&quot;,\n      &quot;case_name&quot;: &quot;Smith v. Jones&quot;,\n      &quot;case_name_extracted&quot;: &quot;Smith v. Jones&quot;,\n      &quot;url&quot;: &quot;https://www.courtlistener.com/opinion/12345/&quot;,\n      &quot;explanation&quot;: &quot;Citation found and verified&quot;,\n      &quot;is_westlaw&quot;: false,\n      &quot;sources_checked&quot;: [&quot;CourtListener&quot;, &quot;Google Scholar&quot;, &quot;Justia&quot;],\n      &quot;details&quot;: {\n        &quot;court&quot;: &quot;9th Cir.&quot;,\n        &quot;year&quot;: &quot;2020&quot;,\n        &quot;reporter&quot;: &quot;F.3d&quot;,\n        &quot;volume&quot;: &quot;123&quot;,\n        &quot;page&quot;: &quot;456&quot;\n      }\n    }\n  ],\n  &quot;metadata&quot;: {\n    &quot;source_type&quot;: &quot;file&quot;,\n    &quot;source_name&quot;: &quot;document.pdf&quot;,\n    &quot;file_type&quot;: &quot;.pdf&quot;,\n    &quot;timestamp&quot;: &quot;2024-01-15T10:30:00Z&quot;\n  },\n  &quot;progress&quot;: 100,\n  &quot;total_citations&quot;: 1,\n  &quot;verified_citations&quot;: 1\n}</code></pre></div></div><h3 data-v-42b36d55>Citation Result Fields</h3><div class="table-responsive" data-v-42b36d55><table class="table table-striped" data-v-42b36d55><thead data-v-42b36d55><tr data-v-42b36d55><th data-v-42b36d55>Field</th><th data-v-42b36d55>Type</th><th data-v-42b36d55>Description</th></tr></thead><tbody data-v-42b36d55><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>citation</code></td><td data-v-42b36d55>string</td><td data-v-42b36d55>The original citation text</td></tr><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>found</code></td><td data-v-42b36d55>boolean</td><td data-v-42b36d55>Whether the citation was found in legal databases</td></tr><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>source</code></td><td data-v-42b36d55>string</td><td data-v-42b36d55>Primary source where citation was found (CourtListener, Google Scholar, Justia, etc.)</td></tr><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>case_name</code></td><td data-v-42b36d55>string</td><td data-v-42b36d55>Official case name from the legal database</td></tr><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>case_name_extracted</code></td><td data-v-42b36d55>string</td><td data-v-42b36d55>Case name extracted from the document text</td></tr><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>url</code></td><td data-v-42b36d55>string</td><td data-v-42b36d55>Direct link to the case (if available)</td></tr><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>explanation</code></td><td data-v-42b36d55>string</td><td data-v-42b36d55>Human-readable explanation of the verification result</td></tr><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>is_westlaw</code></td><td data-v-42b36d55>boolean</td><td data-v-42b36d55>Whether this is a Westlaw citation</td></tr><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>sources_checked</code></td><td data-v-42b36d55>array</td><td data-v-42b36d55>List of legal databases that were checked</td></tr><tr data-v-42b36d55><td data-v-42b36d55><code data-v-42b36d55>details</code></td><td data-v-42b36d55>object</td><td data-v-42b36d55>Additional citation details (court, year, reporter, etc.)</td></tr></tbody></table></div><h3 data-v-42b36d55>Error Responses</h3><div class="card mb-3" data-v-42b36d55><div class="card-header" data-v-42b36d55><h4 class="mb-0" data-v-42b36d55>Error Format</h4></div><div class="card-body" data-v-42b36d55><pre data-v-42b36d55><code data-v-42b36d55>{\n  &quot;status&quot;: &quot;error&quot;,\n  &quot;error_type&quot;: &quot;input_validation&quot;,\n  &quot;message&quot;: &quot;No valid input provided&quot;,\n  &quot;status_code&quot;: 400,\n  &quot;metadata&quot;: {\n    &quot;source_type&quot;: &quot;text&quot;,\n    &quot;source_name&quot;: &quot;pasted_text&quot;\n  }\n}</code></pre></div></div><h3 data-v-42b36d55>Processing Times</h3><p data-v-42b36d55>Typical processing times vary by input type:</p><ul data-v-42b36d55><li data-v-42b36d55><strong data-v-42b36d55>Text input:</strong> 10-30 seconds</li><li data-v-42b36d55><strong data-v-42b36d55>File upload:</strong> 30-120 seconds (depends on file size and complexity)</li><li data-v-42b36d55><strong data-v-42b36d55>URL content:</strong> 60-300 seconds (includes download time)</li></ul><h3 data-v-42b36d55>Rate Limits</h3><p data-v-42b36d55>To ensure fair usage, the API implements rate limiting:</p><ul data-v-42b36d55><li data-v-42b36d55>Maximum 10 requests per minute per IP address</li><li data-v-42b36d55>Maximum file size: 50MB</li><li data-v-42b36d55>Maximum text length: 100,000 characters</li></ul><h3 data-v-42b36d55>Complete Example</h3><div class="card" data-v-42b36d55><div class="card-header" data-v-42b36d55><h4 class="mb-0" data-v-42b36d55>Full Workflow Example</h4></div><div class="card-body" data-v-42b36d55><h5 data-v-42b36d55>1. Submit Analysis Request:</h5><pre data-v-42b36d55><code data-v-42b36d55>curl -X POST /casestrainer/api/analyze \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &#39;{\n    &quot;type&quot;: &quot;text&quot;,\n    &quot;text&quot;: &quot;The court held in Smith v. Jones, 123 F.3d 456 (9th Cir. 2020) that...&quot;\n  }&#39;</code></pre><h5 data-v-42b36d55>2. Get Task ID Response:</h5><pre data-v-42b36d55><code data-v-42b36d55>{\n  &quot;status&quot;: &quot;processing&quot;,\n  &quot;task_id&quot;: &quot;550e8400-e29b-41d4-a716-446655440000&quot;,\n  &quot;message&quot;: &quot;Text received, processing started&quot;\n}</code></pre><h5 data-v-42b36d55>3. Poll for Results:</h5><pre data-v-42b36d55><code data-v-42b36d55>curl /casestrainer/api/task_status/550e8400-e29b-41d4-a716-446655440000</code></pre><h5 data-v-42b36d55>4. Get Final Results:</h5><pre data-v-42b36d55><code data-v-42b36d55>{\n  &quot;status&quot;: &quot;completed&quot;,\n  &quot;task_id&quot;: &quot;550e8400-e29b-41d4-a716-446655440000&quot;,\n  &quot;citations&quot;: [\n    {\n      &quot;citation&quot;: &quot;123 F.3d 456&quot;,\n      &quot;found&quot;: true,\n      &quot;source&quot;: &quot;CourtListener&quot;,\n      &quot;case_name&quot;: &quot;Smith v. Jones&quot;,\n      &quot;case_name_extracted&quot;: &quot;Smith v. Jones&quot;,\n      &quot;url&quot;: &quot;https://www.courtlistener.com/opinion/12345/&quot;,\n      &quot;explanation&quot;: &quot;Citation found and verified&quot;\n    }\n  ]\n}</code></pre></div></div></div><div class="mb-5" data-v-42b36d55><h2 data-v-42b36d55>Health Check Endpoint</h2><p class="text-muted" data-v-42b36d55>GET <code data-v-42b36d55>/casestrainer/api/health</code></p><p data-v-42b36d55>Returns the current status of the API service.</p><h5 data-v-42b36d55>Response:</h5><pre data-v-42b36d55><code data-v-42b36d55>{\n  &quot;status&quot;: &quot;healthy&quot;,\n  &quot;timestamp&quot;: &quot;2024-01-15T10:30:00Z&quot;,\n  &quot;version&quot;: &quot;0.5.5&quot;\n}</code></pre></div><div class="mb-5" data-v-42b36d55><h2 data-v-42b36d55>Additional Resources</h2><p data-v-42b36d55>For more detailed information, see the <a href="https://github.com/jafrank88/casestrainer" target="_blank" data-v-42b36d55>GitHub repository</a>.</p></div>', 8)
      ]));
    };
  }
};
const ApiDocs = /* @__PURE__ */ _export_sfc(_sfc_main, [["__scopeId", "data-v-42b36d55"]]);
export {
  ApiDocs as default
};
//# sourceMappingURL=ApiDocs-B_K4aB6O.js.map
