import{a as e}from"./axios-rSMZb3Ae.js";const t=e.create({baseURL:"/casestrainer/api",timeout:12e4});t.interceptors.request.use((e=>("/analyze"===e.url&&e.data&&"url"===e.data.type?(e.timeout=3e5,e.retryCount=0,e.maxRetries=3):(e.timeout=12e4,e.retryCount=0,e.maxRetries=1),e))),t.interceptors.response.use((e=>e),(async e=>{const s=e.config;if(!s||!s.retryCount||s.retryCount>=s.maxRetries||"ECONNABORTED"!==e.code&&!e.message.includes("timeout")&&!e.message.includes("Network Error"))return Promise.reject(e);s.retryCount+=1;const r=Math.min(1e3*Math.pow(2,s.retryCount),3e4);return await new Promise((e=>setTimeout(e,r))),t(s)})),t.interceptors.request.use((e=>(e.headers["X-API-Key"]="443a87912e4f444fb818fca454364d71e4aa9f91",e.data instanceof FormData||(e.headers["Content-Type"]="application/json"),e)),(e=>Promise.reject(e))),t.interceptors.response.use((e=>e),(e=>(e.response||e.request,Promise.reject(e)))),t.interceptors.response.use((e=>e),(e=>{if(e.config&&"/analyze"===e.config.url&&e.config.data&&"url"===e.config.data.type)if(e.response)switch(e.response.status){case 400:e.message="Invalid URL or content type not supported";break;case 404:e.message="URL not found or content not accessible";break;case 429:e.message="Too many requests. Please try again in a few minutes";break;case 502:e.message="Failed to fetch URL content. The server may be temporarily unavailable";break;case 504:e.message="Request timed out while fetching URL content";break;default:e.message=`Error fetching URL: ${e.response.status} ${e.response.statusText}`}else"ECONNABORTED"===e.code?e.message="Request timed out while fetching URL content":"ECONNREFUSED"===e.code?e.message="Could not connect to the server":"ENOTFOUND"===e.code&&(e.message="URL not found or domain does not exist");return Promise.reject(e)}));export{t as a};
