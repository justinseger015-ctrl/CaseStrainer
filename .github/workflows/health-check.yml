name: Health Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    # Allow manual triggering of the workflow

env:
  PYTHONUNBUFFERED: 1
  FLASK_DEBUG: 0
  FLASK_ENV: production
  REDIS_URL: redis://localhost:6379/0
  COURTLISTENER_API_KEY: 443a87912e4f444fb818fca454364d71e4aa9f91
  CI: true
  GITHUB_ACTIONS: true

jobs:
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Validate requirements.txt
      run: |
        if [ ! -f "requirements.txt" ]; then
          echo "Error: requirements.txt not found"
          exit 1
        fi
        echo "requirements.txt found and validated"
        wc -l requirements.txt
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade "pip<24.1" setuptools wheel
        pip install --no-cache-dir -r requirements.txt
        pip install --no-cache-dir requests
      timeout-minutes: 10
    
    - name: Start application
      run: |
        echo "Starting application..."
        echo "Current directory: $(pwd)"
        echo "Python path: $(which python)"
        echo "Waitress path: $(which waitress-serve)"
        
        # Start the application
        nohup waitress-serve --host=0.0.0.0 --port=5000 --threads=2 src.app_final_vue:app > app.log 2>&1 &
        echo "Application started in background"
        
        # Wait for the application to start
        echo "Waiting for application to be ready..."
        sleep 30
        
        # Check if the application process is running
        echo "Checking processes..."
        ps aux | grep waitress || echo "No waitress processes found"
        
        # Check if port is listening
        echo "Checking if port 5000 is listening..."
        netstat -tlnp | grep :5000 || echo "Port 5000 not listening"
        
        # Show logs if available
        if [ -f "app.log" ]; then
          echo "Application logs:"
          tail -20 app.log
        fi
    
    - name: Run CI health checks
      run: |
        if [ -f "scripts/run_ci_health_check.sh" ]; then
          chmod +x scripts/run_ci_health_check.sh
          ./scripts/run_ci_health_check.sh
        else
          echo "Health check script not found, running basic health check..."
          curl -f http://localhost:5000/casestrainer/api/health || exit 1
        fi
      env:
        CI: 'true'
        SERVICE_HOST: 'localhost'
        
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: service-logs
        path: |
          *.log
          logs/
        if-no-files-found: warn
        retention-days: 3
